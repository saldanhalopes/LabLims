package br.com.lablims.view.coluna;

import br.com.lablims.dao.ColunaStorageDAO;
import java.util.TreeMap;
import br.com.lablims.dao.SetorDAO;
import br.com.lablims.enumeration.ColunaStorageTipo;
import br.com.lablims.model.ColunaStorage;
import br.com.lablims.model.Setor;
import br.com.lablims.util.ComboBox;
import br.com.lablims.util.Frames;
import br.com.lablims.util.Senha;
import java.awt.Cursor;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author rafael.lopes
 */
public class FrmColunaStorageDados extends javax.swing.JDialog {

    private ColunaStorage colunaStorage;
    private boolean novo = false;
    private final TreeMap<Long, String> categoryMapSetor = new TreeMap<>();

    /**
     * Creates new form FrmConfigAcesso
     *
     * @param parent
     * @param modal
     */
    public FrmColunaStorageDados(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
        novo = true;
    }

    public FrmColunaStorageDados(java.awt.Frame parent, boolean modal, ColunaStorage colStorage) {
        super(parent, modal);
        initComponents();
        init();
        colunaStorage = colStorage;
        carregarDados();
    }

    private void init() {
        Frames.setUpFrame(this, "Storage", true);
        carregarSetor();
        carregarTipo();
        txtNumero.setModel(new SpinnerNumberModel(1, 1, 1000, 1));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalvarUsuario = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        cmbSetor = new javax.swing.JComboBox();
        cmbTipo = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        txtObs = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnSalvarUsuario.setText("Ok");
        btnSalvarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarUsuarioActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Storage"));

        jLabel9.setText("Tipo:");

        jLabel28.setText("Setor:");

        cmbSetor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSetorActionPerformed(evt);
            }
        });

        cmbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoActionPerformed(evt);
            }
        });

        jLabel10.setText("Obs:");

        jLabel7.setText("NÂ°:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbTipo, javax.swing.GroupLayout.Alignment.TRAILING, 0, 290, Short.MAX_VALUE)
                    .addComponent(cmbSetor, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtObs, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(cmbSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtObs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 134, Short.MAX_VALUE)
                        .addComponent(btnSalvarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarUsuario)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarUsuarioActionPerformed
        salvar();
    }//GEN-LAST:event_btnSalvarUsuarioActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        fechar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void cmbSetorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSetorActionPerformed
        atualizarNumero();
    }//GEN-LAST:event_cmbSetorActionPerformed

    private void cmbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoActionPerformed
        atualizarNumero();
    }//GEN-LAST:event_cmbTipoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmColunaStorageDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FrmColunaStorageDados dialog = new FrmColunaStorageDados(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    public static javax.swing.JButton btnSalvarUsuario;
    private javax.swing.JComboBox cmbSetor;
    private javax.swing.JComboBox cmbTipo;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JSpinner txtNumero;
    private javax.swing.JTextField txtObs;
    // End of variables declaration//GEN-END:variables

    private void carregarSetor() {
        cmbSetor.removeAllItems();
        cmbSetor.addItem("");
        categoryMapSetor.clear();
        SetorDAO setorDAO = new SetorDAO();
        try {
            for (Setor setor : setorDAO.findEntities(Setor.class)) {
                Long id = setor.getId();
                String name = setor.getSiglaSetor();
                cmbSetor.addItem(name);
                categoryMapSetor.put(id, name);
            }
        } catch (Exception e) {
        }
    }

    private void carregarTipo() {
        cmbTipo.removeAllItems();
        for (ColunaStorageTipo tipo : ColunaStorageTipo.values()) {
            cmbTipo.addItem(tipo.getTipo());
        }
    }

    private void carregarDados() {
        ColunaStorageDAO colStorageDAO = new ColunaStorageDAO();
        try {
            colunaStorage = colStorageDAO.findById(ColunaStorage.class, colunaStorage.getId());
            String[] tipo = {colunaStorage.getTipo()};
            cmbTipo.setSelectedItem(tipo[0]);
            String[] setor = {colunaStorage.getSetor().getSiglaSetor()};
            cmbSetor.setSelectedItem(setor[0]);
            txtNumero.setValue(colunaStorage.getNumero());
            txtObs.setText(colunaStorage.getObs());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        }
    }

    private void atualizarNumero() {
        Integer numero = 1;
        ColunaStorageDAO colStorageDAO = new ColunaStorageDAO();
        try {
            numero = colStorageDAO.getUltimoNumeroColunaStorage(ComboBox.getKeyForValue(cmbSetor.getSelectedItem().toString(), categoryMapSetor),
                    cmbTipo.getSelectedItem().toString()) + 1;
        } catch (Exception e) {
            numero = 1;
        }
        txtNumero.setValue(numero);
    }

    private void salvar() {
        Senha senha = new Senha();
        Boolean numero = false;
        ColunaStorageDAO colStorageDAO = new ColunaStorageDAO();
        try {
            if (novo) {
                numero = colStorageDAO.checkNumeroColunaStorage(ComboBox.getKeyForValue(cmbSetor.getSelectedItem().toString(), categoryMapSetor),
                        cmbTipo.getSelectedItem().toString(),
                        (Integer) txtNumero.getValue());
            } else {
                if (!colunaStorage.getNumero().equals((Integer) txtNumero.getValue())
                        || !colunaStorage.getSetor().getSiglaSetor().equals(cmbSetor.getSelectedItem().toString())
                        || !colunaStorage.getTipo().equals(cmbTipo.getSelectedItem().toString())) {
                    numero = colStorageDAO.checkNumeroColunaStorage(ComboBox.getKeyForValue(cmbSetor.getSelectedItem().toString(), categoryMapSetor),
                            cmbTipo.getSelectedItem().toString(),
                            (Integer) txtNumero.getValue());
                }
            }
        } catch (Exception e) {
            numero = false;
        }
        try {
            if (cmbSetor.getSelectedItem().toString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Setor invÃ¡lido");
                cmbSetor.requestFocus();
            } else if (cmbTipo.getSelectedItem().toString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Tipo invÃ¡lido");
                cmbTipo.requestFocus();
            } else if (numero) {
                JOptionPane.showMessageDialog(null, "NÃºmero de Storage jÃ¡ existe!");
                txtNumero.requestFocus();
            } else if (novo) {
                if (senha.Salvar()) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    criar();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    dispose();
                }
            } else {
                if (senha.Salvar()) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    atulizar();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    dispose();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar dados: " + e);
        }
    }

    private void criar() {
        try {
            ColunaStorage colStorage = new ColunaStorage();
            ColunaStorageDAO colStorageDAO = new ColunaStorageDAO();
            colStorage.setSetor(new SetorDAO().findById(Setor.class, ComboBox.getKeyForValue(cmbSetor.getSelectedItem().toString(), categoryMapSetor)));
            colStorage.setTipo(cmbTipo.getSelectedItem().toString());
            colStorage.setObs(txtObs.getText().toUpperCase().trim());
            colStorage.setNumero((Integer) txtNumero.getValue());
            colStorage.setVersion(0);
            colStorageDAO.salvar(colStorage);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao criar dados: " + ex);
        }
    }

    private void atulizar() {
        try {
            ColunaStorageDAO colStorageDAO = new ColunaStorageDAO();
            colunaStorage.setSetor(new SetorDAO().findById(Setor.class, ComboBox.getKeyForValue(cmbSetor.getSelectedItem().toString(), categoryMapSetor)));
            colunaStorage.setObs(txtObs.getText().toUpperCase().trim());
            colunaStorage.setNumero((Integer) txtNumero.getValue());
            colunaStorage.setTipo(cmbTipo.getSelectedItem().toString());
            colunaStorage.setVersion(colunaStorage.getVersion() + 1);
            colStorageDAO.salvar(colunaStorage);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao criar dados: " + ex);
        }
    }

    private void fechar() {
        Frames.fecharFrame(this);
    }
}
