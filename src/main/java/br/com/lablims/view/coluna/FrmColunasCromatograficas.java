/*
 * Copyright (C) 2019 rafael.lopes
 *
 * Este programa é um software livre: você pode redistribuí-lo e / ou modificar
 * sob os termos da GNU General Public License, conforme publicado pela
 * a Free Software Foundation, seja a versão 3 da Licença, quanto
 * qualquer versão posterior.
 *
 * Este programa é distribuído na esperança de que seja útil,
 * mas SEM QUALQUER GARANTIA; sem a garantia implícita de
 * COMERCIALIZAÇÃO OU APTIDÃO PARA UM PROPÓSITO PARTICULAR. Veja o
 * GNU General Public License para obter mais detalhes.
 *
 * Você deve ter recebido uma cópia da GNU General Public License
 *  juntamente com este programa. Caso contrário, veja <http://www.gnu.org/licenses/>.
 */
package br.com.lablims.view.coluna;

import br.com.lablims.dao.ColunaUtilDAO;
import br.com.lablims.dao.ColunaVagaDAO;
import br.com.lablims.enumeration.ColunaStatus;
import br.com.lablims.model.ColunaUtil;
import br.com.lablims.model.ColunaVaga;
import br.com.lablims.util.AcessoSistema;
import br.com.lablims.util.DataHora;
import br.com.lablims.util.Frames;
import br.com.lablims.util.Pdf;
import br.com.lablims.util.Reports;
import br.com.lablims.util.Senha;
import br.com.lablims.util.TableSorter;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafael.lopes
 */
public class FrmColunasCromatograficas extends javax.swing.JFrame {

    private String ACESSO = new AcessoSistema().getAcessoSistema(this);
    final String zeros = "0000";

    /**
     * Creates new form NewJDialog
     */
    public FrmColunasCromatograficas() {
        initComponents();
        Frames.setUpFrame(this, "Coluna em Utilização", false);
        carregarColunaStatus();
        read();
        btnNovo.setEnabled(AcessoSistema.criarDados(ACESSO));
        btnEditar.setEnabled(AcessoSistema.editarDados(ACESSO));
        btnExcluir.setEnabled(AcessoSistema.deletarDados(ACESSO));
        btnDescarte.setEnabled(AcessoSistema.editarDados(ACESSO));
        btnReativar.setEnabled(AcessoSistema.editarDados(ACESSO));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tblColunas = new javax.swing.JTabbedPane();
        pnlColunas = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblColuna = new javax.swing.JTable();
        txtPesquisar = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        btnNovo = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        btnEditar = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        btnExcluir = new javax.swing.JButton();
        jSeparator12 = new javax.swing.JToolBar.Separator();
        btnAtualizar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnDescarte = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        btnReativar = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        btnRelatorio = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        btnEtiqueta = new javax.swing.JButton();
        jSeparator11 = new javax.swing.JToolBar.Separator();
        btnCertificado = new javax.swing.JButton();
        jSeparator13 = new javax.swing.JToolBar.Separator();
        btnVaga = new javax.swing.JButton();
        jSeparator14 = new javax.swing.JToolBar.Separator();
        btnLog = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        cmbColunaStatus = new javax.swing.JComboBox<>();
        pnlAuditTrail = new javax.swing.JPanel();
        pnlAuditoriaGrupos = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAuditoria = new javax.swing.JTable();
        txtPesquisarAuditoria = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Colunas"));

        tblColuna.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Col_Id", "Código Coluna", "Coluna", "Localização", "Certificado", "Método", "n° Sistema", "Part Number", "Serial Number", "Setor", "Ativação", "Obs", "Version"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblColuna.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblColuna.setSurrendersFocusOnKeystroke(true);
        tblColuna.getTableHeader().setReorderingAllowed(false);
        tblColuna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblColunaMouseClicked(evt);
            }
        });
        tblColuna.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblColunaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblColuna);
        if (tblColuna.getColumnModel().getColumnCount() > 0) {
            tblColuna.getColumnModel().getColumn(0).setMinWidth(50);
            tblColuna.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblColuna.getColumnModel().getColumn(0).setMaxWidth(50);
            tblColuna.getColumnModel().getColumn(1).setMinWidth(140);
            tblColuna.getColumnModel().getColumn(1).setPreferredWidth(140);
            tblColuna.getColumnModel().getColumn(1).setMaxWidth(140);
            tblColuna.getColumnModel().getColumn(2).setMinWidth(300);
            tblColuna.getColumnModel().getColumn(2).setPreferredWidth(500);
            tblColuna.getColumnModel().getColumn(3).setMinWidth(200);
            tblColuna.getColumnModel().getColumn(3).setPreferredWidth(400);
            tblColuna.getColumnModel().getColumn(4).setMinWidth(80);
            tblColuna.getColumnModel().getColumn(4).setPreferredWidth(80);
            tblColuna.getColumnModel().getColumn(4).setMaxWidth(80);
            tblColuna.getColumnModel().getColumn(5).setMinWidth(120);
            tblColuna.getColumnModel().getColumn(5).setPreferredWidth(120);
            tblColuna.getColumnModel().getColumn(5).setMaxWidth(120);
            tblColuna.getColumnModel().getColumn(6).setMinWidth(80);
            tblColuna.getColumnModel().getColumn(6).setPreferredWidth(80);
            tblColuna.getColumnModel().getColumn(6).setMaxWidth(80);
            tblColuna.getColumnModel().getColumn(7).setMinWidth(120);
            tblColuna.getColumnModel().getColumn(7).setPreferredWidth(120);
            tblColuna.getColumnModel().getColumn(8).setMinWidth(150);
            tblColuna.getColumnModel().getColumn(8).setPreferredWidth(150);
            tblColuna.getColumnModel().getColumn(9).setMinWidth(120);
            tblColuna.getColumnModel().getColumn(9).setPreferredWidth(120);
            tblColuna.getColumnModel().getColumn(9).setMaxWidth(120);
            tblColuna.getColumnModel().getColumn(10).setMinWidth(140);
            tblColuna.getColumnModel().getColumn(10).setPreferredWidth(140);
            tblColuna.getColumnModel().getColumn(11).setMinWidth(300);
            tblColuna.getColumnModel().getColumn(11).setPreferredWidth(300);
            tblColuna.getColumnModel().getColumn(12).setMinWidth(80);
            tblColuna.getColumnModel().getColumn(12).setPreferredWidth(80);
            tblColuna.getColumnModel().getColumn(12).setMaxWidth(80);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 987, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
        );

        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyReleased(evt);
            }
        });

        jLabel4.setText("Pesquisar:");

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_add.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.setFocusable(false);
        btnNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNovo);
        jToolBar1.add(jSeparator6);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_edit.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setFocusable(false);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditar);
        jToolBar1.add(jSeparator7);

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_close.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setFocusable(false);
        btnExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExcluir.setPreferredSize(new java.awt.Dimension(60, 60));
        btnExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnExcluir);
        jToolBar1.add(jSeparator12);

        btnAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_atualizar.png"))); // NOI18N
        btnAtualizar.setText("Atualizar");
        btnAtualizar.setFocusable(false);
        btnAtualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAtualizar.setPreferredSize(new java.awt.Dimension(60, 60));
        btnAtualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAtualizar);
        jToolBar1.add(jSeparator1);

        btnDescarte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_lixo_reciclar_32.png"))); // NOI18N
        btnDescarte.setText("Descarte");
        btnDescarte.setFocusable(false);
        btnDescarte.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDescarte.setPreferredSize(new java.awt.Dimension(60, 60));
        btnDescarte.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDescarte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescarteActionPerformed(evt);
            }
        });
        jToolBar1.add(btnDescarte);
        jToolBar1.add(jSeparator8);

        btnReativar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_return_32.png"))); // NOI18N
        btnReativar.setText("Reativar");
        btnReativar.setFocusable(false);
        btnReativar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReativar.setPreferredSize(new java.awt.Dimension(60, 60));
        btnReativar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnReativar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReativarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnReativar);
        jToolBar1.add(jSeparator9);

        btnRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_print.png"))); // NOI18N
        btnRelatorio.setText("Relatório");
        btnRelatorio.setFocusable(false);
        btnRelatorio.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRelatorio.setPreferredSize(new java.awt.Dimension(60, 60));
        btnRelatorio.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelatorioActionPerformed(evt);
            }
        });
        jToolBar1.add(btnRelatorio);
        jToolBar1.add(jSeparator10);

        btnEtiqueta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_barcode.png"))); // NOI18N
        btnEtiqueta.setText("Etiqueta");
        btnEtiqueta.setFocusable(false);
        btnEtiqueta.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEtiqueta.setPreferredSize(new java.awt.Dimension(60, 60));
        btnEtiqueta.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEtiqueta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEtiquetaActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEtiqueta);
        jToolBar1.add(jSeparator11);

        btnCertificado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_certificado_32.png"))); // NOI18N
        btnCertificado.setText("Cetificado");
        btnCertificado.setFocusable(false);
        btnCertificado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCertificado.setPreferredSize(new java.awt.Dimension(60, 60));
        btnCertificado.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCertificado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCertificadoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCertificado);
        jToolBar1.add(jSeparator13);

        btnVaga.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_arquivo.png"))); // NOI18N
        btnVaga.setText("Vagas");
        btnVaga.setFocusable(false);
        btnVaga.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVaga.setPreferredSize(new java.awt.Dimension(60, 60));
        btnVaga.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnVaga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVagaActionPerformed(evt);
            }
        });
        jToolBar1.add(btnVaga);
        jToolBar1.add(jSeparator14);

        btnLog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_historico.png"))); // NOI18N
        btnLog.setText("Log");
        btnLog.setFocusable(false);
        btnLog.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLog.setPreferredSize(new java.awt.Dimension(60, 60));
        btnLog.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogActionPerformed(evt);
            }
        });
        jToolBar1.add(btnLog);

        jLabel13.setText("Status:");

        cmbColunaStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbColunaStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlColunasLayout = new javax.swing.GroupLayout(pnlColunas);
        pnlColunas.setLayout(pnlColunasLayout);
        pnlColunasLayout.setHorizontalGroup(
            pnlColunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlColunasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlColunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlColunasLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbColunaStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlColunasLayout.setVerticalGroup(
            pnlColunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlColunasLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(pnlColunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlColunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGroup(pnlColunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbColunaStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tblColunas.addTab("Colunas", pnlColunas);

        pnlAuditTrail.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Auditoria Material"));

        tblAuditoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Col_Id", "Versão", "MOD", "Analise_Id", "Analise_Id_MOD", "Codigo_Coluna", "Codigo_Coluna_MOD", "Coluna_Id", "Coluna_Id_MOD", "Data_Ativacao", "Data_Ativacao_MOD", "Data_Descarte", "Data_Descarte_MOD", "Data_Verificacao", "Data_Verificacao_MOD", "Metodologia_Id", "Metodologia_Id_MOD", "Serial_Number", "Serial_Number_MOD", "Setor_Id", "Setor_Id_MOD", "Vaga_Id", "Vaga_Id_MOD", "Obs", "Obs_MOD", "Arquivo_Id", "Arquivo_Id_MOD", "Computador / AD_User ", "Usuario", "Data Modificação", "Motivo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAuditoria.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(tblAuditoria);
        if (tblAuditoria.getColumnModel().getColumnCount() > 0) {
            tblAuditoria.getColumnModel().getColumn(0).setMinWidth(120);
            tblAuditoria.getColumnModel().getColumn(0).setPreferredWidth(120);
            tblAuditoria.getColumnModel().getColumn(1).setMinWidth(80);
            tblAuditoria.getColumnModel().getColumn(1).setPreferredWidth(80);
            tblAuditoria.getColumnModel().getColumn(1).setMaxWidth(80);
            tblAuditoria.getColumnModel().getColumn(2).setMinWidth(100);
            tblAuditoria.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblAuditoria.getColumnModel().getColumn(2).setMaxWidth(100);
            tblAuditoria.getColumnModel().getColumn(3).setMinWidth(150);
            tblAuditoria.getColumnModel().getColumn(3).setPreferredWidth(150);
            tblAuditoria.getColumnModel().getColumn(4).setMinWidth(100);
            tblAuditoria.getColumnModel().getColumn(4).setPreferredWidth(100);
            tblAuditoria.getColumnModel().getColumn(5).setMinWidth(500);
            tblAuditoria.getColumnModel().getColumn(5).setPreferredWidth(500);
            tblAuditoria.getColumnModel().getColumn(6).setMinWidth(100);
            tblAuditoria.getColumnModel().getColumn(6).setPreferredWidth(100);
            tblAuditoria.getColumnModel().getColumn(7).setMinWidth(400);
            tblAuditoria.getColumnModel().getColumn(7).setPreferredWidth(400);
            tblAuditoria.getColumnModel().getColumn(8).setMinWidth(100);
            tblAuditoria.getColumnModel().getColumn(8).setPreferredWidth(100);
            tblAuditoria.getColumnModel().getColumn(27).setMinWidth(200);
            tblAuditoria.getColumnModel().getColumn(27).setPreferredWidth(200);
            tblAuditoria.getColumnModel().getColumn(28).setMinWidth(150);
            tblAuditoria.getColumnModel().getColumn(28).setPreferredWidth(150);
            tblAuditoria.getColumnModel().getColumn(29).setMinWidth(120);
            tblAuditoria.getColumnModel().getColumn(29).setPreferredWidth(120);
            tblAuditoria.getColumnModel().getColumn(30).setMinWidth(800);
            tblAuditoria.getColumnModel().getColumn(30).setPreferredWidth(800);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 973, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );

        txtPesquisarAuditoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarAuditoriaKeyReleased(evt);
            }
        });

        jLabel5.setText("Pesquisar:");

        javax.swing.GroupLayout pnlAuditoriaGruposLayout = new javax.swing.GroupLayout(pnlAuditoriaGrupos);
        pnlAuditoriaGrupos.setLayout(pnlAuditoriaGruposLayout);
        pnlAuditoriaGruposLayout.setHorizontalGroup(
            pnlAuditoriaGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAuditoriaGruposLayout.createSequentialGroup()
                .addGroup(pnlAuditoriaGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlAuditoriaGruposLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarAuditoria)))
                .addContainerGap())
        );
        pnlAuditoriaGruposLayout.setVerticalGroup(
            pnlAuditoriaGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAuditoriaGruposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAuditoriaGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisarAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlAuditTrailLayout = new javax.swing.GroupLayout(pnlAuditTrail);
        pnlAuditTrail.setLayout(pnlAuditTrailLayout);
        pnlAuditTrailLayout.setHorizontalGroup(
            pnlAuditTrailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAuditTrailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlAuditoriaGrupos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlAuditTrailLayout.setVerticalGroup(
            pnlAuditTrailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAuditTrailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlAuditoriaGrupos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tblColunas.addTab("Audit Trail", pnlAuditTrail);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tblColunas)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tblColunas)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased
        TableSorter.TableSorter(tblColuna, txtPesquisar);
    }//GEN-LAST:event_txtPesquisarKeyReleased

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        abrir();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (tblColuna.getSelectedRow() != -1) {
            atualizar();
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        if (tblColuna.getSelectedRow() != -1) {
            deletar();
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        read();
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void txtPesquisarAuditoriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarAuditoriaKeyReleased
        TableSorter.TableSorter(tblAuditoria, txtPesquisarAuditoria);
    }//GEN-LAST:event_txtPesquisarAuditoriaKeyReleased

    private void tblColunaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblColunaMouseClicked
        if (evt.getClickCount() == 2) {
            atualizar();
        }
    }//GEN-LAST:event_tblColunaMouseClicked

    private void tblColunaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblColunaKeyReleased
        if (tblColuna.getSelectedRow() != -1) {
            if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                deletar();
            }
        }
    }//GEN-LAST:event_tblColunaKeyReleased

    private void btnRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelatorioActionPerformed
        new FrmImprimirRelatorio(this, true).setVisible(true);
    }//GEN-LAST:event_btnRelatorioActionPerformed

    private void btnEtiquetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEtiquetaActionPerformed
        if (tblColuna.getSelectedRow() != -1) {
            HashMap map = new HashMap();
            try {
                map.put("id_coluna", (Long) tblColuna.getValueAt(tblColuna.getSelectedRow(), 0));
                map.put("img", Thread.currentThread().getClass().getResourceAsStream("/Reports/ArrowUp.png"));
                Reports.imprimir("EtiquetaColuna.jasper", map);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + ex);
            }
        }
    }//GEN-LAST:event_btnEtiquetaActionPerformed

    private void btnVagaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVagaActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        new FrmProcurarVaga(this, true).setVisible(true);
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnVagaActionPerformed

    private void btnReativarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReativarActionPerformed
        if (tblColuna.getSelectedRow() != -1) {
            reativar();
        }
    }//GEN-LAST:event_btnReativarActionPerformed

    private void btnDescarteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescarteActionPerformed
        if (tblColuna.getSelectedRow() != -1) {
            descartar();
        }
    }//GEN-LAST:event_btnDescarteActionPerformed

    private void cmbColunaStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbColunaStatusActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        read();
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_cmbColunaStatusActionPerformed

    private void btnCertificadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCertificadoActionPerformed
        if (tblColuna.getSelectedRow() != -1) {
            try {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                ColunaUtil colUtil = new ColunaUtilDAO().findById(ColunaUtil.class, (Long) tblColuna.getValueAt(tblColuna.getSelectedRow(), 0));
                if (colUtil.getCertificado() != null) {
                    Pdf.view(colUtil.getCertificado().getId());
                } else {
                    JOptionPane.showMessageDialog(this, "Esse registro não possui certificado anexado!",
                            "Erro de Certificado", JOptionPane.WARNING_MESSAGE);
                }
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
            } finally {
                read();
            }
        }
    }//GEN-LAST:event_btnCertificadoActionPerformed

    private void btnLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogActionPerformed
        if (tblColuna.getSelectedRow() != -1) {
            try {
                new FrmColunaHistorico(this, true, (Long) tblColuna.getValueAt(tblColuna.getSelectedRow(), 0)).setVisible(true);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + ex);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selecione a Coluna!");
        }
    }//GEN-LAST:event_btnLogActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmColunasCromatograficas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FrmColunasCromatograficas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnCertificado;
    private javax.swing.JButton btnDescarte;
    public static javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEtiqueta;
    public static javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLog;
    public static javax.swing.JButton btnNovo;
    private javax.swing.JButton btnReativar;
    private javax.swing.JButton btnRelatorio;
    private javax.swing.JButton btnVaga;
    private javax.swing.JComboBox<String> cmbColunaStatus;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JToolBar.Separator jSeparator11;
    private javax.swing.JToolBar.Separator jSeparator12;
    private javax.swing.JToolBar.Separator jSeparator13;
    private javax.swing.JToolBar.Separator jSeparator14;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel pnlAuditTrail;
    private javax.swing.JPanel pnlAuditoriaGrupos;
    private javax.swing.JPanel pnlColunas;
    private javax.swing.JTable tblAuditoria;
    private javax.swing.JTable tblColuna;
    private javax.swing.JTabbedPane tblColunas;
    private javax.swing.JTextField txtPesquisar;
    private javax.swing.JTextField txtPesquisarAuditoria;
    // End of variables declaration//GEN-END:variables

    private void read() {
        DefaultTableModel model = (DefaultTableModel) tblColuna.getModel();
        ColunaUtilDAO colUtilDAO = new ColunaUtilDAO();
        model.setNumRows(0);
        try {
            for (ColunaUtil colUtil : colUtilDAO.findListColunaUtil(null, cmbColunaStatus.getSelectedItem().toString())) {
                model.addRow(new Object[]{
                    colUtil.getId(),
                    colUtil.getSetor().getDepartamento().getSiglaDepartamento()
                    + "-" + colUtil.getColuna().getTipoColuna().getConfiguracao()
                    + "-" + zeros.substring(String.valueOf(colUtil.getCodigoColuna()).length())
                    + String.valueOf(colUtil.getCodigoColuna()),
                    colUtil.getColuna().getFabricanteColuna().getConfiguracao() + " "
                    + colUtil.getColuna().getMarcaColuna().getConfiguracao() + " - "
                    + colUtil.getColuna().getTipoColuna().getConfiguracao() + " "
                    + colUtil.getColuna().getTamanhoColuna().getConfiguracao() + "mm x "
                    + colUtil.getColuna().getDiametroColuna().getConfiguracao() + "mm x "
                    + colUtil.getColuna().getParticulaColuna().getConfiguracao() + "µm ",
                    colUtil.getDataDescarte() == null
                    ? colUtil.getVaga().getColunaStorage().getSetor().getSetor()
                    + " - " + colUtil.getVaga().getColunaStorage().getTipo()
                    + " - " + colUtil.getVaga().getColunaStorage().getNumero()
                    + "  Vaga: " + colUtil.getVaga().getVaga()
                    : "Inativa",
                    colUtil.getCertificado() != null,
                    colUtil.getMetodologia().getCodMetodo(),
                    colUtil.getColuna().getCodigo(),
                    colUtil.getColuna().getPartNumber(),
                    colUtil.getSerialNumber(),
                    colUtil.getSetor().getSiglaSetor(),
                    DataHora.getStringDateTime(colUtil.getDataAtivacao()),
                    colUtil.getObs(),
                    colUtil.getVersion()
                });
            }
            carregarAuditoria();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        }
    }

    private void carregarColunaStatus() {
        cmbColunaStatus.removeAllItems();
        for (ColunaStatus tipo : ColunaStatus.values()) {
            cmbColunaStatus.addItem(tipo.getTipo());
        }
    }

    private void abrir() {
        if (AcessoSistema.criarDados(ACESSO)) {
            try {
                new FrmColunasCromatograficasDados(null, true).setVisible(true);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
            } finally {
                read();
            }
        }
    }

    private void atualizar() {
        if (AcessoSistema.editarDados(ACESSO)) {
            ColunaUtilDAO colUtilDAO = new ColunaUtilDAO();
            try {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                ColunaUtil colUtil = colUtilDAO.findById(ColunaUtil.class, (Long) tblColuna.getValueAt(tblColuna.getSelectedRow(), 0));
                new FrmColunasCromatograficasDados(null, true, colUtil).setVisible(true);
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
            } finally {
                read();
            }
        }
    }

    private void deletar() {
        if (AcessoSistema.deletarDados(ACESSO)) {
            ColunaUtilDAO colUtilDAO = new ColunaUtilDAO();
            Senha senha = new Senha();
            try {
                int dialogResult = JOptionPane.showConfirmDialog(null,
                        "Realmente deseja Excluir essa coluna?", "Aviso", JOptionPane.YES_NO_OPTION);
                if (dialogResult == 0) {
                    if (senha.Salvar()) {
                        ColunaUtil colUtil = colUtilDAO.findById(ColunaUtil.class, (Long) tblColuna.getValueAt(tblColuna.getSelectedRow(), 0));
                        colUtilDAO.remover(ColunaUtil.class, colUtil.getId());
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atulalizar dados: " + e);
            } finally {
                read();
            }
        }
    }

    private void descartar() {
        if (AcessoSistema.editarDados(ACESSO)) {
            ColunaUtilDAO colUtilDAO = new ColunaUtilDAO();
            ColunaVaga colVaga = new ColunaVaga();
            ColunaVagaDAO colVagaDAO = new ColunaVagaDAO();
            Senha senha = new Senha();
            try {
                int dialogResult = JOptionPane.showConfirmDialog(null,
                        "Realmente deseja Descartar essa coluna?", "Aviso", JOptionPane.YES_NO_OPTION);
                if (dialogResult == 0) {
                    if (senha.Salvar()) {
                        ColunaUtil colUtil = colUtilDAO.findById(ColunaUtil.class, (Long) tblColuna.getValueAt(tblColuna.getSelectedRow(), 0));
                        colUtil.setDataDescarte(new Date());
                        Long vaga = colUtil.getVaga().getId();
                        colUtil.setVaga(null);
                        colUtil.setVersion(colUtil.getVersion() + 1);
                        colUtilDAO.salvar(colUtil);
                        if (vaga != null) {
                            colVaga = colVagaDAO.findById(ColunaVaga.class, vaga);
                            colVaga.setColunaUtil(null);
                            colVagaDAO.salvar(colVaga);
                        }
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atulalizar dados: " + e);
            } finally {
                read();
            }
        }
    }

    private void reativar() {
        if (AcessoSistema.editarDados(ACESSO)) {
            ColunaUtilDAO colUtilDAO = new ColunaUtilDAO();
            ColunaVagaDAO colVagaDAO = new ColunaVagaDAO();
            Senha senha = new Senha();
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            try {
                ColunaUtil colUtil = colUtilDAO.findById(ColunaUtil.class, (Long) tblColuna.getValueAt(tblColuna.getSelectedRow(), 0));
                if (colUtil.getDataDescarte() != null) {
                    int dialogResult = JOptionPane.showConfirmDialog(null,
                            "Realmente deseja Reativar essa coluna?", "Aviso", JOptionPane.YES_NO_OPTION);
                    if (dialogResult == 0) {
                        colUtil.setDataDescarte(null);
                        //abrir selecionar vaga
                        ColunaVaga colVaga = new ColunaVaga();
                        FrmProcurarVaga frm = new FrmProcurarVaga(null, true, colVaga);
                        frm.setVisible(true);
                        if (colVaga != null) {
                            if (senha.Salvar()) {
                                colVaga = new ColunaVagaDAO().findById(ColunaVaga.class, colVaga.getId());
                                colUtil.setVaga(colVaga);
                                colUtil.setVersion(colUtil.getVersion() + 1);
                                colUtilDAO.salvar(colUtil);
                                colVaga.setColunaUtil(colUtil);
                                colVagaDAO.salvar(colVaga);
                            }
                        }
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atulalizar dados: " + e);
            } finally {
                read();
            }
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }

    private void carregarAuditoria() {
        DefaultTableModel model = (DefaultTableModel) tblAuditoria.getModel();
        ColunaUtilDAO colUtilDAO = new ColunaUtilDAO();
        model.setNumRows(0);
        try {
            for (ColunaUtil colUtil : colUtilDAO.readAuditoria()) {
                model.addRow(new Object[]{
                    colUtil.getId(),
                    colUtil.getVersion(),
                    colUtil.getAudit().getMOD() == 0 ? "Criado"
                    : (colUtil.getAudit().getMOD() == 1 ? "Modificado" : "Removido"),
                    colUtil.getAnalise().getId(),
                    colUtil.getAnalise_MOD() == false ? "Não Alterado" : "Alterado",
                    colUtil.getCodigoColuna(),
                    colUtil.getCodigoColuna_MOD() == false ? "Não Alterado" : "Alterado",
                    colUtil.getColuna().getId(),
                    colUtil.getColuna_MOD() == false ? "Não Alterado" : "Alterado",
                    colUtil.getDataAtivacao(),
                    colUtil.getDataAtivacao_MOD() == false ? "Não Alterado" : "Alterado",
                    colUtil.getDataDescarte(),
                    colUtil.getDataDescarte_MOD() == false ? "Não Alterado" : "Alterado",
                    colUtil.getDataVerificacao(),
                    colUtil.getDataVerificacao_MOD() == false ? "Não Alterado" : "Alterado",
                    colUtil.getMetodologia().getId(),
                    colUtil.getMetodologia_MOD() == false ? "Não Alterado" : "Alterado",
                    colUtil.getSerialNumber(),
                    colUtil.getSerialNumber_MOD() == false ? "Não Alterado" : "Alterado",
                    colUtil.getSetor().getId(),
                    colUtil.getSetor_MOD() == false ? "Não Alterado" : "Alterado",
                    colUtil.getVaga().getId(),
                    colUtil.getVaga_MOD() == false ? "Não Alterado" : "Alterado",
                    colUtil.getCertificado().getId(),
                    colUtil.getCertificado_MOD() == false ? "Não Alterado" : "Alterado",
                    colUtil.getObs(),
                    colUtil.getObs_MOD() == false ? "Não Alterado" : "Alterado",
                    colUtil.getAudit().getComputador() + " / "
                    + colUtil.getAudit().getUserComputador(),
                    colUtil.getAudit().getUltimaModificacaoPor(),
                    DataHora.getStringDateTime(colUtil.getAudit().getUltimaModificacao()),
                    colUtil.getAudit().getMotivo()
                });
            }
        } catch (Exception e) {
        }
    }

}
