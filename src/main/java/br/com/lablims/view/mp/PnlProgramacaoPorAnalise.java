/*
 * Copyright (C) 2019 rafael.lopes
 *
 * Este programa é um software livre: você pode redistribuí-lo e / ou modificar
 * sob os termos da GNU General Public License, conforme publicado pela
 * a Free Software Foundation, seja a versão 3 da Licença, quanto
 * qualquer versão posterior.
 *
 * Este programa é distribuído na esperança de que seja útil,
 * mas SEM QUALQUER GARANTIA; sem a garantia implícita de
 * COMERCIALIZAÇÃO OU APTIDÃO PARA UM PROPÓSITO PARTICULAR. Veja o
 * GNU General Public License para obter mais detalhes.
 *
 * Você deve ter recebido uma cópia da GNU General Public License
 *  juntamente com este programa. Caso contrário, veja <http://www.gnu.org/licenses/>.
 */
package br.com.lablims.view.mp;

import br.com.lablims.dao.AnaliseStatusDAO;
import br.com.lablims.dao.LoteMateriaPrimaDAO;
import br.com.lablims.dao.LoteMateriaPrimaStatusDAO;
import br.com.lablims.dao.SetorDAO;
import br.com.lablims.model.AnaliseStatus;
import br.com.lablims.model.LoteMateriaPrima;
import br.com.lablims.model.LoteMateriaPrimaStatus;
import br.com.lablims.model.Setor;
import br.com.lablims.util.AcessoSistema;
import br.com.lablims.util.DataHora;
import br.com.lablims.util.GridlineCellRendererStatus;
import br.com.lablims.util.Senha;
import br.com.lablims.util.TableSorter;
import java.awt.Cursor;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafael.lopes
 */
public class PnlProgramacaoPorAnalise extends javax.swing.JPanel {

    private String ACESSO = new AcessoSistema().getAcessoSistema(this);
    private String title;

    /**
     * Creates new form PnlProgramacaoLaboratorio
     */
    public PnlProgramacaoPorAnalise(String nome) {
        initComponents();
        title = nome;
        readLoteStatus();
        btnProgramar.setEnabled(AcessoSistema.editarDados(ACESSO));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMetodologia = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLoteMateriaPrima = new javax.swing.JTable();
        txtPesquisarMetodologia = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cmbLimitPorPagina = new javax.swing.JComboBox<String>();
        btnAtualizar = new javax.swing.JButton();
        btnProgramar = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Lotes"));

        tblLoteMateriaPrima.setAutoCreateRowSorter(true);
        tblLoteMateriaPrima.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "pa_id", "Programado", "Lote_Id", "Lote", "Produto", "Data Necessidade", "Analise", "Status", "Data Previsão Lab", "Data Previsão SAP", "lote_status_id", "Status SAP"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLoteMateriaPrima.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblLoteMateriaPrima.setSurrendersFocusOnKeystroke(true);
        tblLoteMateriaPrima.getTableHeader().setReorderingAllowed(false);
        tblLoteMateriaPrima.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLoteMateriaPrimaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblLoteMateriaPrima);
        if (tblLoteMateriaPrima.getColumnModel().getColumnCount() > 0) {
            tblLoteMateriaPrima.getColumnModel().getColumn(0).setMinWidth(25);
            tblLoteMateriaPrima.getColumnModel().getColumn(0).setPreferredWidth(25);
            tblLoteMateriaPrima.getColumnModel().getColumn(0).setMaxWidth(25);
            tblLoteMateriaPrima.getColumnModel().getColumn(1).setMinWidth(0);
            tblLoteMateriaPrima.getColumnModel().getColumn(1).setPreferredWidth(0);
            tblLoteMateriaPrima.getColumnModel().getColumn(1).setMaxWidth(0);
            tblLoteMateriaPrima.getColumnModel().getColumn(2).setMinWidth(120);
            tblLoteMateriaPrima.getColumnModel().getColumn(2).setPreferredWidth(120);
            tblLoteMateriaPrima.getColumnModel().getColumn(2).setMaxWidth(120);
            tblLoteMateriaPrima.getColumnModel().getColumn(3).setMinWidth(80);
            tblLoteMateriaPrima.getColumnModel().getColumn(3).setPreferredWidth(80);
            tblLoteMateriaPrima.getColumnModel().getColumn(3).setMaxWidth(80);
            tblLoteMateriaPrima.getColumnModel().getColumn(4).setMinWidth(80);
            tblLoteMateriaPrima.getColumnModel().getColumn(4).setPreferredWidth(80);
            tblLoteMateriaPrima.getColumnModel().getColumn(4).setMaxWidth(80);
            tblLoteMateriaPrima.getColumnModel().getColumn(5).setPreferredWidth(400);
            tblLoteMateriaPrima.getColumnModel().getColumn(6).setMinWidth(130);
            tblLoteMateriaPrima.getColumnModel().getColumn(6).setPreferredWidth(130);
            tblLoteMateriaPrima.getColumnModel().getColumn(6).setMaxWidth(130);
            tblLoteMateriaPrima.getColumnModel().getColumn(7).setMinWidth(400);
            tblLoteMateriaPrima.getColumnModel().getColumn(7).setPreferredWidth(400);
            tblLoteMateriaPrima.getColumnModel().getColumn(8).setMinWidth(250);
            tblLoteMateriaPrima.getColumnModel().getColumn(8).setPreferredWidth(250);
            tblLoteMateriaPrima.getColumnModel().getColumn(8).setMaxWidth(250);
            tblLoteMateriaPrima.getColumnModel().getColumn(9).setMinWidth(140);
            tblLoteMateriaPrima.getColumnModel().getColumn(9).setPreferredWidth(140);
            tblLoteMateriaPrima.getColumnModel().getColumn(9).setMaxWidth(140);
            tblLoteMateriaPrima.getColumnModel().getColumn(10).setMinWidth(150);
            tblLoteMateriaPrima.getColumnModel().getColumn(10).setPreferredWidth(150);
            tblLoteMateriaPrima.getColumnModel().getColumn(10).setMaxWidth(150);
            tblLoteMateriaPrima.getColumnModel().getColumn(11).setMinWidth(0);
            tblLoteMateriaPrima.getColumnModel().getColumn(11).setPreferredWidth(0);
            tblLoteMateriaPrima.getColumnModel().getColumn(11).setMaxWidth(0);
            tblLoteMateriaPrima.getColumnModel().getColumn(12).setMinWidth(300);
            tblLoteMateriaPrima.getColumnModel().getColumn(12).setPreferredWidth(300);
            tblLoteMateriaPrima.getColumnModel().getColumn(12).setMaxWidth(300);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 799, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );

        txtPesquisarMetodologia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarMetodologiaKeyReleased(evt);
            }
        });

        jLabel4.setText("Pesquisar:");

        jLabel11.setText("Visualizar:");

        cmbLimitPorPagina.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1000", "10000", "100000", "1000000", "10000000" }));
        cmbLimitPorPagina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLimitPorPaginaActionPerformed(evt);
            }
        });

        btnAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_analise_16.png"))); // NOI18N
        btnAtualizar.setText("Atualizar");
        btnAtualizar.setFocusable(false);
        btnAtualizar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnAtualizar.setPreferredSize(new java.awt.Dimension(60, 60));
        btnAtualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnProgramar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_programacao_16.png"))); // NOI18N
        btnProgramar.setToolTipText("Programar");
        btnProgramar.setFocusable(false);
        btnProgramar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnProgramar.setPreferredSize(new java.awt.Dimension(60, 60));
        btnProgramar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnProgramar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProgramarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMetodologiaLayout = new javax.swing.GroupLayout(pnlMetodologia);
        pnlMetodologia.setLayout(pnlMetodologiaLayout);
        pnlMetodologiaLayout.setHorizontalGroup(
            pnlMetodologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMetodologiaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMetodologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlMetodologiaLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarMetodologia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbLimitPorPagina, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProgramar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlMetodologiaLayout.setVerticalGroup(
            pnlMetodologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMetodologiaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMetodologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlMetodologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPesquisarMetodologia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(cmbLimitPorPagina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11))
                    .addComponent(btnAtualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(btnProgramar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMetodologia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMetodologia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblLoteMateriaPrimaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLoteMateriaPrimaMouseClicked
        if (AcessoSistema.editarDados(ACESSO)) {
            if (evt.getClickCount() == 2) {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                try {
                    new FrmProgramacaoMateriaPrimaStatus(new LoteMateriaPrimaDAO().findById(LoteMateriaPrima.class,
                            (Long) tblLoteMateriaPrima.getValueAt(tblLoteMateriaPrima.getSelectedRow(), 3)),
                            (Long) tblLoteMateriaPrima.getValueAt(tblLoteMateriaPrima.getSelectedRow(), 1))
                            .setVisible(true);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Erro ao carregar dados!");
                }
                readLoteStatus();
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
        }
    }//GEN-LAST:event_tblLoteMateriaPrimaMouseClicked

    private void txtPesquisarMetodologiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarMetodologiaKeyReleased
        TableSorter.TableSorter(tblLoteMateriaPrima, txtPesquisarMetodologia);
    }//GEN-LAST:event_txtPesquisarMetodologiaKeyReleased

    private void cmbLimitPorPaginaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLimitPorPaginaActionPerformed
        readLoteStatus();
    }//GEN-LAST:event_cmbLimitPorPaginaActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        readLoteStatus();
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnProgramarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProgramarActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        LoteMateriaPrimaStatus celula = new LoteMateriaPrimaStatus();
        new FrmSelecionarCelulaMateriaPrima(null, true, celula).setVisible(true);
        int[] rows = tblLoteMateriaPrima.getSelectedRows();
        try {
            Senha senha = new Senha();
            if (senha.Salvar()) {
                if (tblLoteMateriaPrima.getSelectedRow() != -1) {
                    LoteMateriaPrimaStatusDAO loteStatusDAO = new LoteMateriaPrimaStatusDAO();
                    for (int num : rows) {
                        LoteMateriaPrimaStatus loteStatus = loteStatusDAO.findById(LoteMateriaPrimaStatus.class,
                                (Long) tblLoteMateriaPrima.getValueAt(num, 11));
                        loteStatus.setProgramado(!celula.getCelula().isEmpty());
                        loteStatus.setCelula(celula.getCelula());
                        loteStatus.setVersion(loteStatus.getVersion() + 1);
                        loteStatusDAO.salvar(loteStatus);
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao programar Lotes: ");
        }
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        readLoteStatus();
    }//GEN-LAST:event_btnProgramarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnProgramar;
    private javax.swing.JComboBox<String> cmbLimitPorPagina;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlMetodologia;
    private javax.swing.JTable tblLoteMateriaPrima;
    private javax.swing.JTextField txtPesquisarMetodologia;
    // End of variables declaration//GEN-END:variables

    private void readLoteStatus() {
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        DefaultTableModel model = (DefaultTableModel) tblLoteMateriaPrima.getModel();
        LoteMateriaPrimaStatusDAO loteStatusDAO = new LoteMateriaPrimaStatusDAO();
        int[] rowsASC = {6, 10, 9};
        int[] rowsDESC = {2};
        TableSorter.RowSorter(tblLoteMateriaPrima, rowsASC, rowsDESC);
        GridlineCellRendererStatus r = new GridlineCellRendererStatus();
        tblLoteMateriaPrima.setDefaultRenderer(Object.class, r);
        model.setNumRows(0);
        try {
            AnaliseStatus anslStatus = new AnaliseStatusDAO().findByStatus("FINALIZADO");
            Setor setor = new SetorDAO().findBySiglaSetor(title);
            for (Object[] objects : loteStatusDAO.findLoteStatusByAnalise(anslStatus.getId(), setor.getId())) {
                model.addRow(new Object[]{
                    (Date) objects[5] == null ? ""
                    : ((Date) objects[5]).before(new Date()) ? "Vermelho" : "", //Cor
                    (Long) objects[8], //Plano Anlalise
                    objects[11], //Programado
                    (Long) objects[6], //Lote Id
                    objects[0], //Note
                    objects[1] + " - " + objects[2], //Produto
                    (Date) objects[5] == null ? "X" : (Date) objects[5], //Data Necessidade
                    objects[16] + " - " + objects[3] + " - " + objects[4], //Analise
                    objects[10] + " - " + DataHora.getStringDateTime((Date) objects[13]), //Status + DataAtualizaçao
                    (Date) objects[7], //Prev. Lab
                    (Date) objects[9], //Prev. SAP
                    objects[12], //Status_id
                    DataHora.getStringDateTime((Date) objects[15]) + " - " + objects[14].toString() //Status SAP
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        }
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }

}
