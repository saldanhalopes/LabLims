/*
 * Copyright (C) 2019 rafael.lopes
 *
 * Este programa é um software livre: você pode redistribuí-lo e / ou modificar
 * sob os termos da GNU General Public License, conforme publicado pela
 * a Free Software Foundation, seja a versão 3 da Licença, quanto
 * qualquer versão posterior.
 *
 * Este programa é distribuído na esperança de que seja útil,
 * mas SEM QUALQUER GARANTIA; sem a garantia implícita de
 * COMERCIALIZAÇÃO OU APTIDÃO PARA UM PROPÓSITO PARTICULAR. Veja o
 * GNU General Public License para obter mais detalhes.
 *
 * Você deve ter recebido uma cópia da GNU General Public License
 *  juntamente com este programa. Caso contrário, veja <http://www.gnu.org/licenses/>.
 */
package br.com.lablims.view.mp;

import br.com.lablims.dao.AnaliseStatusDAO;
import br.com.lablims.dao.LoteMateriaPrimaDAO;
import br.com.lablims.dao.LoteMateriaPrimaStatusDAO;
import br.com.lablims.dao.PlanoAnaliseDAO;
import br.com.lablims.dao.MaterialDAO;
import br.com.lablims.dao.MetodologiaDAO;
import br.com.lablims.model.AnaliseStatus;
import br.com.lablims.model.LoteMateriaPrima;
import br.com.lablims.model.LoteMateriaPrimaStatus;
import br.com.lablims.model.Material;
import br.com.lablims.model.Metodologia;
import br.com.lablims.model.PlanoAnalise;
import br.com.lablims.util.Senha;
import br.com.lablims.util.ComboBox;
import br.com.lablims.util.DataHora;
import br.com.lablims.util.Frames;
import br.com.lablims.util.GridlineCellRendererStatus;
import br.com.lablims.util.TableSorter;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import java.util.List;
import java.util.TreeMap;
import javax.swing.AbstractButton;
import javax.swing.DefaultCellEditor;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author rafael.lopes
 */
public class FrmProgramacaoMateriaPrimaStatus extends javax.swing.JFrame {

    private LoteMateriaPrima lote;
    private Long planoAnlaise_id;
    private final TreeMap<Long, String> categoryMapAnaliseStatus = new TreeMap<>();

    /**
     * Creates new form NewJDialog
     *
     * @param parent
     * @param modal
     * @param prd
     */
    public FrmProgramacaoMateriaPrimaStatus(LoteMateriaPrima lot) {
        initComponents();
        Frames.setUpFrame(this, "Lote de Matéria-Prima", true);
        lote = lot;
        limparRegistro();
        carregar();
        carregarStatus();
    }

    public FrmProgramacaoMateriaPrimaStatus(LoteMateriaPrima lot, Long pa_id) {
        initComponents();
        Frames.setUpFrame(this, "Lote de Matéria-Prima", true);
        lote = lot;
        planoAnlaise_id = pa_id;
        limparRegistro();
        carregar();
        carregarStatus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalvar = new javax.swing.JButton();
        btnFCancelar = new javax.swing.JButton();
        pnlDadosProduto1 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtCodMaterial = new javax.swing.JTextField();
        txtMaterial = new javax.swing.JTextField();
        txtMetodo = new javax.swing.JTextField();
        txtTipo = new javax.swing.JTextField();
        txtCodMetodo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtLote = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtObs = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtDataNecessidade = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlStatusLote = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblAnaliseStatus = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtPesquisar = new javax.swing.JTextField();
        cmbStatus = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        pnlAuditTrail = new javax.swing.JPanel();
        pnlAuditoriaGrupos = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAuditoria = new javax.swing.JTable();
        txtPesquisarAuditoria = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnFCancelar.setText("Cancelar");
        btnFCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFCancelarActionPerformed(evt);
            }
        });

        pnlDadosProduto1.setBorder(javax.swing.BorderFactory.createTitledBorder("Produto"));

        jLabel16.setText("Método:");

        jLabel18.setText("Material:");

        txtCodMaterial.setEditable(false);
        txtCodMaterial.setBackground(new java.awt.Color(204, 204, 204));

        txtMaterial.setEditable(false);
        txtMaterial.setBackground(new java.awt.Color(204, 204, 204));

        txtMetodo.setEditable(false);
        txtMetodo.setBackground(new java.awt.Color(204, 204, 204));

        txtTipo.setEditable(false);
        txtTipo.setBackground(new java.awt.Color(204, 204, 204));

        txtCodMetodo.setEditable(false);
        txtCodMetodo.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setText("Lote:");

        txtLote.setEditable(false);
        txtLote.setBackground(new java.awt.Color(204, 204, 204));

        jLabel4.setText("Obs:");

        txtObs.setEditable(false);
        txtObs.setBackground(new java.awt.Color(204, 204, 204));

        jLabel26.setText("Data de Necessidade:");

        txtDataNecessidade.setEditable(false);
        txtDataNecessidade.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout pnlDadosProduto1Layout = new javax.swing.GroupLayout(pnlDadosProduto1);
        pnlDadosProduto1.setLayout(pnlDadosProduto1Layout);
        pnlDadosProduto1Layout.setHorizontalGroup(
            pnlDadosProduto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosProduto1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosProduto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDadosProduto1Layout.createSequentialGroup()
                        .addGroup(pnlDadosProduto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDadosProduto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtObs, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlDadosProduto1Layout.createSequentialGroup()
                                .addComponent(txtLote, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDataNecessidade, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlDadosProduto1Layout.createSequentialGroup()
                        .addGroup(pnlDadosProduto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDadosProduto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCodMetodo, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(txtCodMaterial))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDadosProduto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDadosProduto1Layout.createSequentialGroup()
                                .addComponent(txtMaterial)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtMetodo))))
                .addContainerGap())
        );
        pnlDadosProduto1Layout.setVerticalGroup(
            pnlDadosProduto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosProduto1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnlDadosProduto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtCodMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosProduto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosProduto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtLote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDataNecessidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosProduto1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtObs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblAnaliseStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Analise_Id", "Descrição da Análise ", "Setor", "Status", "Data/Hora", "1° Check", "Data/Hora", "Obs", "Data/Hora Previsão"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, true, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAnaliseStatus.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblAnaliseStatus.setRowHeight(24);
        tblAnaliseStatus.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(tblAnaliseStatus);
        if (tblAnaliseStatus.getColumnModel().getColumnCount() > 0) {
            tblAnaliseStatus.getColumnModel().getColumn(0).setMinWidth(80);
            tblAnaliseStatus.getColumnModel().getColumn(0).setPreferredWidth(80);
            tblAnaliseStatus.getColumnModel().getColumn(0).setMaxWidth(80);
            tblAnaliseStatus.getColumnModel().getColumn(1).setMinWidth(500);
            tblAnaliseStatus.getColumnModel().getColumn(1).setPreferredWidth(500);
            tblAnaliseStatus.getColumnModel().getColumn(2).setMinWidth(220);
            tblAnaliseStatus.getColumnModel().getColumn(2).setPreferredWidth(220);
            tblAnaliseStatus.getColumnModel().getColumn(3).setMinWidth(120);
            tblAnaliseStatus.getColumnModel().getColumn(3).setPreferredWidth(120);
            tblAnaliseStatus.getColumnModel().getColumn(4).setMinWidth(150);
            tblAnaliseStatus.getColumnModel().getColumn(4).setPreferredWidth(150);
            tblAnaliseStatus.getColumnModel().getColumn(4).setMaxWidth(150);
            tblAnaliseStatus.getColumnModel().getColumn(5).setMinWidth(100);
            tblAnaliseStatus.getColumnModel().getColumn(5).setPreferredWidth(100);
            tblAnaliseStatus.getColumnModel().getColumn(5).setMaxWidth(100);
            tblAnaliseStatus.getColumnModel().getColumn(6).setMinWidth(150);
            tblAnaliseStatus.getColumnModel().getColumn(6).setPreferredWidth(150);
            tblAnaliseStatus.getColumnModel().getColumn(6).setMaxWidth(150);
            tblAnaliseStatus.getColumnModel().getColumn(7).setMinWidth(600);
            tblAnaliseStatus.getColumnModel().getColumn(7).setPreferredWidth(600);
            tblAnaliseStatus.getColumnModel().getColumn(8).setMinWidth(200);
            tblAnaliseStatus.getColumnModel().getColumn(8).setPreferredWidth(200);
            tblAnaliseStatus.getColumnModel().getColumn(8).setMaxWidth(200);
        }

        jLabel5.setText("Pesquisar:");

        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyReleased(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_update_16.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlStatusLoteLayout = new javax.swing.GroupLayout(pnlStatusLote);
        pnlStatusLote.setLayout(pnlStatusLoteLayout);
        pnlStatusLoteLayout.setHorizontalGroup(
            pnlStatusLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStatusLoteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlStatusLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 905, Short.MAX_VALUE)
                    .addGroup(pnlStatusLoteLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        pnlStatusLoteLayout.setVerticalGroup(
            pnlStatusLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlStatusLoteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlStatusLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlStatusLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addGroup(pnlStatusLoteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Status do Lote", pnlStatusLote);

        tblAuditoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Analise_ID", "Versão", "MOD", "Data_Necessidade", "Data_Necessidade_MOD", "Data_Status", "Data_Status_MOD", "Data_Venciamento", "Data_Venciamento_MOD", "Observação", "Observação_MOD", "Data_Previsão", "Data_Previsão_MOD", "Qtd_Estoque", "Qtd_Estoque_MOD", "Qtd_Necessaria", "Qtd_Necessaria_MOD", "Qtd_Volumes", "Qtd_Volumes_MOD", "Status_SAP", "Status_SAP_MOD", "Tempo_Liberação", "Tempo_Liberação_MOD", "Unid_Medida", "Unid_Medida_MOD", "Computador / AD_User ", "Usuario", "Data Modificação", "Motivo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAuditoria.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(tblAuditoria);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 895, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addContainerGap())
        );

        txtPesquisarAuditoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarAuditoriaKeyReleased(evt);
            }
        });

        jLabel6.setText("Pesquisar:");

        javax.swing.GroupLayout pnlAuditoriaGruposLayout = new javax.swing.GroupLayout(pnlAuditoriaGrupos);
        pnlAuditoriaGrupos.setLayout(pnlAuditoriaGruposLayout);
        pnlAuditoriaGruposLayout.setHorizontalGroup(
            pnlAuditoriaGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAuditoriaGruposLayout.createSequentialGroup()
                .addGroup(pnlAuditoriaGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlAuditoriaGruposLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarAuditoria)))
                .addContainerGap())
        );
        pnlAuditoriaGruposLayout.setVerticalGroup(
            pnlAuditoriaGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAuditoriaGruposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAuditoriaGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisarAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlAuditTrailLayout = new javax.swing.GroupLayout(pnlAuditTrail);
        pnlAuditTrail.setLayout(pnlAuditTrailLayout);
        pnlAuditTrailLayout.setHorizontalGroup(
            pnlAuditTrailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAuditoriaGrupos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlAuditTrailLayout.setVerticalGroup(
            pnlAuditTrailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAuditoriaGrupos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Audit Trail", pnlAuditTrail);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlDadosProduto1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDadosProduto1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnFCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        Senha senha = new Senha();
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if (senha.Salvar()) {
            atualizar();
            dispose();
        }
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnFCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFCancelarActionPerformed
        fechar();
    }//GEN-LAST:event_btnFCancelarActionPerformed

    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased
        TableSorter.TableSorter(tblAnaliseStatus, txtPesquisar);
    }//GEN-LAST:event_txtPesquisarKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!cmbStatus.getSelectedItem().toString().equals("")) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            int[] rows = tblAnaliseStatus.getSelectedRows();
            try {
                if (tblAnaliseStatus.getSelectedRow() != -1) {
                    for (int num : rows) {
                        tblAnaliseStatus.setValueAt(cmbStatus.getSelectedItem().toString(), num, 3);
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao atualizar Lotes: ");
            }
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtPesquisarAuditoriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarAuditoriaKeyReleased
        TableSorter.TableSorter(tblAuditoria, txtPesquisarAuditoria);
    }//GEN-LAST:event_txtPesquisarAuditoriaKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmProgramacaoMateriaPrimaStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmProgramacaoMateriaPrimaStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmProgramacaoMateriaPrimaStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmProgramacaoMateriaPrimaStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FrmProgramacaoMateriaPrimaStatus(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFCancelar;
    public static javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cmbStatus;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel pnlAuditTrail;
    private javax.swing.JPanel pnlAuditoriaGrupos;
    private javax.swing.JPanel pnlDadosProduto1;
    private javax.swing.JPanel pnlStatusLote;
    private javax.swing.JTable tblAnaliseStatus;
    private javax.swing.JTable tblAuditoria;
    private javax.swing.JTextField txtCodMaterial;
    private javax.swing.JTextField txtCodMetodo;
    private javax.swing.JTextField txtDataNecessidade;
    public static javax.swing.JTextField txtLote;
    private javax.swing.JTextField txtMaterial;
    private javax.swing.JTextField txtMetodo;
    private javax.swing.JTextField txtObs;
    private javax.swing.JTextField txtPesquisar;
    private javax.swing.JTextField txtPesquisarAuditoria;
    private javax.swing.JTextField txtTipo;
    // End of variables declaration//GEN-END:variables

    private void carregar() {
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        try {
            LoteMateriaPrima loteMP = new LoteMateriaPrimaDAO().findById(LoteMateriaPrima.class, lote.getId());
            Material mat = new MaterialDAO().findMaterialMetodologiaById(loteMP.getMaterial().getId());
            txtCodMaterial.setText(mat.getCodMaterial().toString());
            txtMaterial.setText(mat.getMaterial());
            txtTipo.setText(mat.getTipoMaterial().getSigla());
            try {
                Metodologia mtd = new MetodologiaDAO().findById(Metodologia.class, loteMP.getMetodologia().getId());
                txtCodMetodo.setText(mtd.getCodMetodo());
                txtMetodo.setText(mtd.getMetodo());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Esse Lote não possui metodologia vinculada!",
                        "Metodologia não vinculada", JOptionPane.INFORMATION_MESSAGE);
                dispose();
            }
            txtLote.setText(loteMP.getLote());
            txtDataNecessidade.setText(DataHora.getStringDateTime(loteMP.getLoteInfo().getDataNecessidade()));
            txtObs.setText(loteMP.getLoteInfo().getObsCq());
            readStatus();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + ex);
        }
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }

    private void readStatus() {
        try {
            DefaultTableModel model = (DefaultTableModel) tblAnaliseStatus.getModel();
            model.setNumRows(0);
            GridlineCellRendererStatus r = new GridlineCellRendererStatus();
            tblAnaliseStatus.setDefaultRenderer(Object.class, r);
            JComboBox comboAnaliseStatus = new JComboBox();
            comboAnaliseStatus.addItem("");
            categoryMapAnaliseStatus.clear();
            AnaliseStatusDAO analiseStatusDAO = new AnaliseStatusDAO();
            for (AnaliseStatus analiseStatus : analiseStatusDAO.findEntities(AnaliseStatus.class)) {
                Long id = analiseStatus.getId();
                String name = analiseStatus.getAnaliseStatus();
                comboAnaliseStatus.addItem(name);
                categoryMapAnaliseStatus.put(id, name);
            }
            TableColumn colAnaliseSetor = tblAnaliseStatus.getColumnModel().getColumn(3);
            colAnaliseSetor.setCellEditor(new DefaultCellEditor(comboAnaliseStatus));
            TableColumn colHoraPrevisao = tblAnaliseStatus.getColumnModel().getColumn(8);
            MaskFormatter maskFormatter = new MaskFormatter("##/##/#### ##:##");
            maskFormatter.setPlaceholderCharacter('_');
            colHoraPrevisao.setCellEditor(new DefaultCellEditor(new JFormattedTextField(maskFormatter)));
            JCheckBox checkConfere = new JCheckBox();
            checkConfere.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    AbstractButton abstractButton = (AbstractButton) e.getSource();
                    boolean selected = abstractButton.getModel().isSelected();
                    tblAnaliseStatus.setValueAt(selected ? "FINALIZADO" : "EM ANALISE", tblAnaliseStatus.getSelectedRow(), 3);
                }
            });
            TableColumn colCheck = tblAnaliseStatus.getColumnModel().getColumn(5);
            colCheck.setCellEditor(new DefaultCellEditor(checkConfere));
            LoteMateriaPrimaStatusDAO loteStatusDAO = new LoteMateriaPrimaStatusDAO();
            List<LoteMateriaPrimaStatus> list;
            if (planoAnlaise_id == null) {
                list = loteStatusDAO.findLotesByStatus(lote.getId());
            } else {
                list = loteStatusDAO.findLotesByStatusAndAnalise(lote.getId(),
                        new PlanoAnaliseDAO().findById(PlanoAnalise.class, planoAnlaise_id).getAnalise().getId());
            }
            for (LoteMateriaPrimaStatus loteStatus : list) {
                model.addRow(new Object[]{
                    loteStatus.getId(),
                    loteStatus.getPlanoAnalise().getDescricao(),
                    loteStatus.getPlanoAnalise().getSetor().getSetor(),
                    loteStatus.getAnaliseStatus().getAnaliseStatus(),
                    loteStatus.getStatusDataHora(),
                    loteStatus.getConferido(),
                    loteStatus.getConferidoDataHora(),
                    loteStatus.getObs(),
                    DataHora.getStringDateTimeShort(loteStatus.getPrevisaoDataHora())
                });
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + ex);
        }
    }

    private void atualizar() {
        try {
            int rows = tblAnaliseStatus.getRowCount();
            for (int row = 0; row < rows; row++) {
                String campo = (String) tblAnaliseStatus.getModel().getValueAt(row, 3);
                Boolean check = (Boolean) tblAnaliseStatus.getModel().getValueAt(row, 5);
                String obs = (String) tblAnaliseStatus.getModel().getValueAt(row, 7);
                String dataPrevisao = (String) tblAnaliseStatus.getModel().getValueAt(row, 8);
                if (ComboBox.getKeyForValue(campo, categoryMapAnaliseStatus) > 0) {
                    LoteMateriaPrimaStatusDAO loteStatusDAO = new LoteMateriaPrimaStatusDAO();
                    AnaliseStatus analiseStatus = new AnaliseStatusDAO()
                            .findById(AnaliseStatus.class, ComboBox.getKeyForValue((String) tblAnaliseStatus.getModel()
                                            .getValueAt(row, 3), categoryMapAnaliseStatus));
                    LoteMateriaPrimaStatus loteStatus = loteStatusDAO.findById(LoteMateriaPrimaStatus.class,
                            (Long) tblAnaliseStatus.getModel().getValueAt(row, 0));
                    if (!campo.equals(loteStatus.getAnaliseStatus().getAnaliseStatus())) {
                        loteStatus.setAnaliseStatus(analiseStatus);
                        loteStatus.setStatusDataHora(new Date());
                    }
                    try {
                        loteStatus.setConferido(check);
                        if (check) {
                            loteStatus.setConferidoDataHora(new Date());
                            loteStatus.setAnaliseStatus(new AnaliseStatusDAO().findByStatus("FINALIZADO"));
                            loteStatus.setStatusDataHora(new Date());
                        } else {
                            loteStatus.setConferidoDataHora(null);
                        }
                    } catch (Exception e) {
                        loteStatus.setConferido(false);
                        loteStatus.setConferidoDataHora(null);
                    }
                    try {
                        loteStatus.setPrevisaoDataHora(DataHora.getDateTimeBySimpleTexto(dataPrevisao));
                    } catch (Exception e) {
                        loteStatus.setPrevisaoDataHora(null);
                    }
                    loteStatus.setObs(obs);
                    loteStatus.setVersion(loteStatus.getVersion() + 1);
                    loteStatusDAO.salvar(loteStatus);
                } else {
                    JOptionPane.showMessageDialog(null, "Analise_id: "
                            + tblAnaliseStatus.getModel().getValueAt(row, 0)
                            + "Status inválido");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        }
    }

    private void limparRegistro() {
        txtCodMaterial.setText(null);
        txtMaterial.setText(null);
        txtTipo.setText(null);
        txtCodMetodo.setText(null);
        txtMetodo.setText(null);
        txtLote.setText(null);
        txtObs.setText(null);
        txtDataNecessidade.setText(null);
    }

    private void fechar() {
        Frames.fecharFrame(this);
    }

    private void carregarStatus() {
        try {
            AnaliseStatusDAO analiseStatusDAO = new AnaliseStatusDAO();
            cmbStatus.addItem("");
            for (AnaliseStatus analiseStatus : analiseStatusDAO.findEntities(AnaliseStatus.class)) {
                cmbStatus.addItem(analiseStatus.getAnaliseStatus());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        }
    }
}
