package br.com.lablims.view.cadastro;

import javax.swing.JOptionPane;
import br.com.lablims.dao.MetodologiaDAO;
import br.com.lablims.model.Metodologia;
import br.com.lablims.util.Senha;
import br.com.lablims.util.FieldFormatLimit;
import br.com.lablims.util.Frames;
import java.awt.Cursor;

/**
 *
 * @author rafael.lopes
 */
public class FrmMetodologiaDados extends javax.swing.JDialog {

    private Metodologia metodo;
    private boolean novo = false;

    /**
     * Creates new form FrmConfigAcesso
     *
     * @param parent
     * @param modal
     */
    public FrmMetodologiaDados(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Frames.setUpFrame(this, "Dados da Metodologia", true);
        limparCampos();
        novo = true;
        readCategoria();
    }

    public FrmMetodologiaDados(java.awt.Frame parent, boolean modal, Metodologia mtd) {
        super(parent, modal);
        initComponents();
        Frames.setUpFrame(this, "Dados da Metodologia", true);
        limparCampos();
        metodo = mtd;
        txtCodMetodo.setEditable(false);
        readCategoria();
        carregarDados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalvarMetodo = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        pnlMetodo = new javax.swing.JPanel();
        txtCodMetodo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMetodo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmbCategoria = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObs = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnSalvarMetodo.setText("Ok");
        btnSalvarMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarMetodoActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        pnlMetodo.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("Código:");

        jLabel5.setText("Método:");

        jLabel6.setText("Categoria:");

        jLabel9.setText("Obs:");

        txtObs.setColumns(20);
        txtObs.setRows(3);
        jScrollPane1.setViewportView(txtObs);

        javax.swing.GroupLayout pnlMetodoLayout = new javax.swing.GroupLayout(pnlMetodo);
        pnlMetodo.setLayout(pnlMetodoLayout);
        pnlMetodoLayout.setHorizontalGroup(
            pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMetodoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMetodoLayout.createSequentialGroup()
                        .addComponent(txtCodMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtMetodo)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        pnlMetodoLayout.setVerticalGroup(
            pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMetodoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 442, Short.MAX_VALUE)
                        .addComponent(btnSalvarMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlMetodo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarMetodo)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarMetodoActionPerformed
        MetodologiaDAO mtdDAO = new MetodologiaDAO();
        Senha senha = new Senha();
        try {
            if (txtCodMetodo.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Código inválido");
                txtCodMetodo.requestFocus();
            } else if (txtMetodo.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Método inválido");
                txtMetodo.requestFocus();
            } else if (cmbCategoria.getSelectedItem().toString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Categoria inválida");
                cmbCategoria.requestFocus();
            }else {
                if (novo) {
                    if (mtdDAO.checkCodMetodoIsExits(txtCodMetodo.getText().trim())) {
                        JOptionPane.showMessageDialog(null, "Método já existente");
                        txtCodMetodo.requestFocus();
                    } else {
                        if (senha.Salvar()) {
                            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                            criarMetodologia();
                            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                            dispose();
                        }
                    }
                } else {
                    if (senha.Salvar()) {
                        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                        atulizarMetodologia();
                        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                        dispose();
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        }
    }//GEN-LAST:event_btnSalvarMetodoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        fechar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMetodologiaDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FrmMetodologiaDados dialog = new FrmMetodologiaDados(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    public static javax.swing.JButton btnSalvarMetodo;
    private javax.swing.JComboBox cmbCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlMetodo;
    private javax.swing.JTextField txtCodMetodo;
    private javax.swing.JTextField txtMetodo;
    private javax.swing.JTextArea txtObs;
    // End of variables declaration//GEN-END:variables

    private void criarMetodologia() {
        Metodologia mtd = new Metodologia();
        MetodologiaDAO mtdDAO = new MetodologiaDAO();
        try {
            mtd.setCodMetodo(txtCodMetodo.getText().trim().toUpperCase());
            mtd.setMetodo(txtMetodo.getText().trim().toUpperCase());
            mtd.setCategoria(cmbCategoria.getSelectedItem().toString());
            mtd.setObs(txtObs.getText().trim().toUpperCase());
            mtd.setVersion(0);
            mtdDAO.salvar(mtd);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        }
    }

    private void readCategoria() {
        cmbCategoria.removeAll();
        cmbCategoria.addItem("");
        cmbCategoria.addItem("MANUAL");
        cmbCategoria.addItem("METODOLOGIA DE ANÁLISE DE PRODUTOS DE DEGRADAÇÃO");
        cmbCategoria.addItem("METODOLOGIA DE CONTROLE DE PROCESSO");
        cmbCategoria.addItem("METODOLOGIA DE ESTUDO DE ESTABILIDADE");
        cmbCategoria.addItem("METODOLOGIA DE MATÉRIA-PRIMA - ATIVO");
        cmbCategoria.addItem("METODOLOGIA DE MATÉRIA-PRIMA - EXCIPIENTE");
        cmbCategoria.addItem("METODOLOGIA DE MATERIAL DE EMBALAGEM");
        cmbCategoria.addItem("METODOLOGIA DE PRODUTO ACABADO");
        cmbCategoria.addItem("METODOLOGIA DE PRODUTO GRANEL");
        cmbCategoria.addItem("METODOLOGIA DE PRODUTO SEMI-ACABADO");
        cmbCategoria.addItem("METODOLOGIA DE RESÍDUO DE LIMPEZA");
        cmbCategoria.addItem("MÉTODOS GERAIS");
        cmbCategoria.addItem("MÉTODOS GERAL DE SOLUÇÕES REAGENTES");
        cmbCategoria.addItem("PROCEDIMENTO OPERACIONAL PADRÃO");
        cmbCategoria.addItem("PROTOCOLO DE TRANSFERÊNCIA DE MÉTODO ANALÍTICO DE RESÍDUO DE LIMPEZA");
    }

    private void limparCampos() {
        txtCodMetodo.setDocument(new FieldFormatLimit(15, FieldFormatLimit.TUDO));
        txtCodMetodo.setText(null);
        txtMetodo.setText(null);
    }

    private void atulizarMetodologia() {
        MetodologiaDAO mtdDAO = new MetodologiaDAO();
        try {
            metodo.setMetodo(txtMetodo.getText().trim().toUpperCase());
            metodo.setCategoria(cmbCategoria.getSelectedItem().toString());
            metodo.setObs(txtObs.getText().trim().toUpperCase());
            metodo.setVersion(metodo.getVersion() + 1);
            mtdDAO.salvar(metodo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar dados: " + e);
        }
    }

    private void carregarDados() {
        try {
            txtCodMetodo.setText(metodo.getCodMetodo().toUpperCase());
            txtMetodo.setText(metodo.getMetodo().toUpperCase());
            String[] categoria = {metodo.getCategoria()};
            cmbCategoria.setSelectedItem(categoria[0]);
            txtObs.setText(metodo.getObs());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + ex);
        }
    }

    private void fechar() {
        Frames.fecharFrame(this);
    }
}
