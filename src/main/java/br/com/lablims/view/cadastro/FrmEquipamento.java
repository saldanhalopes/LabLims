/*
 * Copyright (C) 2019 rafael.lopes
 *
 * Este programa é um software livre: você pode redistribuí-lo e / ou modificar
 * sob os termos da GNU General Public License, conforme publicado pela
 * a Free Software Foundation, seja a versão 3 da Licença, quanto
 * qualquer versão posterior.
 *
 * Este programa é distribuído na esperança de que seja útil,
 * mas SEM QUALQUER GARANTIA; sem a garantia implícita de
 * COMERCIALIZAÇÃO OU APTIDÃO PARA UM PROPÓSITO PARTICULAR. Veja o
 * GNU General Public License para obter mais detalhes.
 *
 * Você deve ter recebido uma cópia da GNU General Public License
 *  juntamente com este programa. Caso contrário, veja <http://www.gnu.org/licenses/>.
 */
package br.com.lablims.view.cadastro;

import br.com.lablims.dao.EquipamentoDAO;
import br.com.lablims.model.Equipamento;
import br.com.lablims.util.AcessoSistema;
import br.com.lablims.util.Senha;
import br.com.lablims.util.Frames;
import br.com.lablims.util.TableSorter;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafael.lopes
 */
public class FrmEquipamento extends javax.swing.JFrame {

    private String ACESSO = new AcessoSistema().getAcessoSistema(this);

    /**
     * Creates new form NewJDialog
     */
    public FrmEquipamento() {
        initComponents();
        Frames.setUpFrame(this, "Equipamentos", false);
        readEquipamentos();
        btnNovo.setEnabled(AcessoSistema.criarDados(ACESSO));
        btnEditar.setEnabled(AcessoSistema.editarDados(ACESSO));
        btnExcluir.setEnabled(AcessoSistema.deletarDados(ACESSO));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tblPaneCromatografo = new javax.swing.JTabbedPane();
        pnlCromatografo = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEquipamentos = new javax.swing.JTable();
        txtPesquisar = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        btnNovo = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        btnEditar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnExcluir = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        btnAtualizar = new javax.swing.JButton();
        pnlDados = new javax.swing.JPanel();
        pnlAuditoria = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblGruposAuditoria = new javax.swing.JTable();
        txtPesquisarAuditoria = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Equipamentos"));

        tblEquipamentos.setAutoCreateRowSorter(true);
        tblEquipamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Descrição", "Tag", "Tipo", "Setor", "Ativo", "Versão"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEquipamentos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblEquipamentos.setSurrendersFocusOnKeystroke(true);
        tblEquipamentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEquipamentosMouseClicked(evt);
            }
        });
        tblEquipamentos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblEquipamentosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblEquipamentos);
        if (tblEquipamentos.getColumnModel().getColumnCount() > 0) {
            tblEquipamentos.getColumnModel().getColumn(0).setMinWidth(50);
            tblEquipamentos.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblEquipamentos.getColumnModel().getColumn(0).setMaxWidth(50);
            tblEquipamentos.getColumnModel().getColumn(2).setPreferredWidth(200);
            tblEquipamentos.getColumnModel().getColumn(3).setPreferredWidth(80);
            tblEquipamentos.getColumnModel().getColumn(4).setPreferredWidth(120);
            tblEquipamentos.getColumnModel().getColumn(6).setMinWidth(50);
            tblEquipamentos.getColumnModel().getColumn(6).setPreferredWidth(50);
            tblEquipamentos.getColumnModel().getColumn(6).setMaxWidth(50);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 987, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
        );

        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyReleased(evt);
            }
        });

        jLabel4.setText("Pesquisar:");

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_add.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.setFocusable(false);
        btnNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNovo);
        jToolBar1.add(jSeparator6);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_edit.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setFocusable(false);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditar);
        jToolBar1.add(jSeparator1);

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_close.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setFocusable(false);
        btnExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExcluir.setPreferredSize(new java.awt.Dimension(60, 60));
        btnExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnExcluir);
        jToolBar1.add(jSeparator8);

        btnAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_atualizar.png"))); // NOI18N
        btnAtualizar.setText("Atualizar");
        btnAtualizar.setFocusable(false);
        btnAtualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAtualizar.setPreferredSize(new java.awt.Dimension(60, 60));
        btnAtualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAtualizar);

        javax.swing.GroupLayout pnlCromatografoLayout = new javax.swing.GroupLayout(pnlCromatografo);
        pnlCromatografo.setLayout(pnlCromatografoLayout);
        pnlCromatografoLayout.setHorizontalGroup(
            pnlCromatografoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCromatografoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCromatografoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCromatografoLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisar))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlCromatografoLayout.setVerticalGroup(
            pnlCromatografoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCromatografoLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCromatografoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tblPaneCromatografo.addTab("Equipamentos", pnlCromatografo);

        pnlDados.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Auditoria Material"));

        tblGruposAuditoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Equipamento_Id", "Versão", "MOD", "Descrição", "Descrição_MOD", "Tag", "Tag_MOD", "Tipo", "Tipo_MOD", "Setor_Id", "Setor_MOD", "Fabricante", "Fabricantel_MOD", "Modelo", "Modelo_MOD", "Ultima_Calibração", "Ultima_Calibração_MOD", "Proxima_Calibração", "Proxima_Calibração_MOD", "Serial_Number", "Serial_Number_MOD", "Certificado", "Certificado_MOD", "Manual", "Manual_MOD", "Escala", "Escala_MOD", "Procedimento", "Procedimento_MOD", "Ativo", "Ativo_MOD", "Obs", "Obs_MOD", "Computador / AD_User ", "Usuario", "Data Modificação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGruposAuditoria.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(tblGruposAuditoria);
        if (tblGruposAuditoria.getColumnModel().getColumnCount() > 0) {
            tblGruposAuditoria.getColumnModel().getColumn(0).setMinWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(0).setPreferredWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(1).setMinWidth(80);
            tblGruposAuditoria.getColumnModel().getColumn(1).setPreferredWidth(80);
            tblGruposAuditoria.getColumnModel().getColumn(1).setMaxWidth(80);
            tblGruposAuditoria.getColumnModel().getColumn(2).setMinWidth(100);
            tblGruposAuditoria.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblGruposAuditoria.getColumnModel().getColumn(2).setMaxWidth(100);
            tblGruposAuditoria.getColumnModel().getColumn(3).setMinWidth(500);
            tblGruposAuditoria.getColumnModel().getColumn(3).setPreferredWidth(500);
            tblGruposAuditoria.getColumnModel().getColumn(4).setMinWidth(100);
            tblGruposAuditoria.getColumnModel().getColumn(4).setPreferredWidth(100);
            tblGruposAuditoria.getColumnModel().getColumn(5).setMinWidth(150);
            tblGruposAuditoria.getColumnModel().getColumn(5).setPreferredWidth(150);
            tblGruposAuditoria.getColumnModel().getColumn(6).setMinWidth(100);
            tblGruposAuditoria.getColumnModel().getColumn(6).setPreferredWidth(100);
            tblGruposAuditoria.getColumnModel().getColumn(8).setMinWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(8).setPreferredWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(9).setMinWidth(400);
            tblGruposAuditoria.getColumnModel().getColumn(9).setPreferredWidth(400);
            tblGruposAuditoria.getColumnModel().getColumn(10).setMinWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(10).setPreferredWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(12).setMinWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(12).setPreferredWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(14).setMinWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(14).setPreferredWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(16).setMinWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(16).setPreferredWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(18).setMinWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(18).setPreferredWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(20).setMinWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(20).setPreferredWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(22).setMinWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(22).setPreferredWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(24).setMinWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(24).setPreferredWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(26).setMinWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(26).setPreferredWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(28).setPreferredWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(30).setMinWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(30).setPreferredWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(32).setMinWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(32).setPreferredWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(32).setMaxWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(33).setMinWidth(200);
            tblGruposAuditoria.getColumnModel().getColumn(33).setPreferredWidth(200);
            tblGruposAuditoria.getColumnModel().getColumn(34).setMinWidth(150);
            tblGruposAuditoria.getColumnModel().getColumn(34).setPreferredWidth(150);
            tblGruposAuditoria.getColumnModel().getColumn(35).setMinWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(35).setPreferredWidth(120);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 973, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );

        txtPesquisarAuditoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarAuditoriaKeyReleased(evt);
            }
        });

        jLabel5.setText("Pesquisar:");

        javax.swing.GroupLayout pnlAuditoriaLayout = new javax.swing.GroupLayout(pnlAuditoria);
        pnlAuditoria.setLayout(pnlAuditoriaLayout);
        pnlAuditoriaLayout.setHorizontalGroup(
            pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAuditoriaLayout.createSequentialGroup()
                .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlAuditoriaLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarAuditoria)))
                .addContainerGap())
        );
        pnlAuditoriaLayout.setVerticalGroup(
            pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAuditoriaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisarAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlDadosLayout = new javax.swing.GroupLayout(pnlDados);
        pnlDados.setLayout(pnlDadosLayout);
        pnlDadosLayout.setHorizontalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlAuditoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDadosLayout.setVerticalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlAuditoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tblPaneCromatografo.addTab("Audit Trail", pnlDados);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tblPaneCromatografo)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tblPaneCromatografo)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblEquipamentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEquipamentosMouseClicked
        if (evt.getClickCount() == 2) {
            atualizar();
        }
    }//GEN-LAST:event_tblEquipamentosMouseClicked

    private void tblEquipamentosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblEquipamentosKeyReleased
        if (tblEquipamentos.getSelectedRow() != -1) {
            if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                deletar();
            }
        }
    }//GEN-LAST:event_tblEquipamentosKeyReleased

    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased
        TableSorter.TableSorter(tblEquipamentos, txtPesquisar);
    }//GEN-LAST:event_txtPesquisarKeyReleased

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        abrir();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (tblEquipamentos.getSelectedRow() != -1) {
            atualizar();
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        if (tblEquipamentos.getSelectedRow() != -1) {
            deletar();
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        readEquipamentos();
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void txtPesquisarAuditoriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarAuditoriaKeyReleased
        TableSorter.TableSorter(tblGruposAuditoria, txtPesquisarAuditoria);
    }//GEN-LAST:event_txtPesquisarAuditoriaKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmEquipamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FrmEquipamento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    public static javax.swing.JButton btnEditar;
    public static javax.swing.JButton btnExcluir;
    public static javax.swing.JButton btnNovo;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel pnlAuditoria;
    private javax.swing.JPanel pnlCromatografo;
    private javax.swing.JPanel pnlDados;
    private javax.swing.JTable tblEquipamentos;
    private javax.swing.JTable tblGruposAuditoria;
    private javax.swing.JTabbedPane tblPaneCromatografo;
    private javax.swing.JTextField txtPesquisar;
    private javax.swing.JTextField txtPesquisarAuditoria;
    // End of variables declaration//GEN-END:variables

    public final void readEquipamentos() {
        DefaultTableModel model = (DefaultTableModel) tblEquipamentos.getModel();
        EquipamentoDAO equipDAO = new EquipamentoDAO();
        model.setNumRows(0);
        try {
            for (Equipamento equip : equipDAO.findAll()) {
                model.addRow(new Object[]{
                    equip.getId(),
                    equip.getDescricao(),
                    equip.getTag(),
                    equip.getTipo().getTipo(),
                    equip.getSetor().getSiglaSetor(),
                    equip.getAtivo(),
                    equip.getVersion()
                });
            }
           // carregarAuditoria();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        }
    }

    private void abrir() {
        try {
            new FrmEquipamentoDados(null, true).setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        } finally {
            readEquipamentos();
        }
    }

    private void atualizar() {
        if (AcessoSistema.editarDados(ACESSO)) {
            EquipamentoDAO equipDAO = new EquipamentoDAO();
            try {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                Equipamento equip = equipDAO.findById(Equipamento.class, (Long) tblEquipamentos.getValueAt(tblEquipamentos.getSelectedRow(), 0));
                new FrmEquipamentoDados(null, true, equip).setVisible(true);
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
            } finally {
                readEquipamentos();
            }
        }
    }

    private void deletar() {
        if (AcessoSistema.deletarDados(ACESSO)) {
            EquipamentoDAO equipDAO = new EquipamentoDAO();
            Senha senha = new Senha();
            try {
                int dialogResult = JOptionPane.showConfirmDialog(null, "Realmente deseja Excluir esse registro?", "Aviso", JOptionPane.YES_NO_OPTION);
                if (dialogResult == 0) {
                    if (senha.Salvar()) {
                        Equipamento equip = equipDAO.findById(Equipamento.class, (Long) tblEquipamentos.getValueAt(tblEquipamentos.getSelectedRow(), 0));
                        equipDAO.remover(Equipamento.class, equip.getId());
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao excuir o dado: " + e.getMessage(), "Erro ao Excluir", JOptionPane.ERROR_MESSAGE);
            } finally {
                readEquipamentos();
            }
        }
    }

    private void carregarAuditoria() {
        DefaultTableModel model = (DefaultTableModel) tblGruposAuditoria.getModel();
        EquipamentoDAO equipDAO = new EquipamentoDAO();
        model.setNumRows(0);
//        try {
//            for (Equipamento equip : equipDAO.readAuditoria()) {
//                model.addRow(new Object[]{
//                    equip.getId(),
//                    equip.getVersion(),
//                    equip.getAudit().getMOD() == 0 ? "Criado" : (equip.getAudit().getMOD() == 1 ? "Modificado" : "Removido"),
//                    equip.getDescricao(),
//                    equip.getDescricao_MOD()== false ? "Não Alterado" : "Alterado",
//                    equip.getTag(),
//                    equip.getTag_MOD()== false ? "Não Alterado" : "Alterado",
//                    equip.getTipo(),
//                    equip.getTipo_MOD()== false ? "Não Alterado" : "Alterado",
//                    equip.getSetor().getId(),
//                    equip.getSetor_MOD() == false ? "Não Alterado" : "Alterado",
//                    equip.getFabricante(),
//                    equip.getFabricante_MOD()== false ? "Não Alterado" : "Alterado",
//                    equip.getModelo(),
//                    equip.getModelo_MOD()== false ? "Não Alterado" : "Alterado",
//                    equip.getUltimaCalibracao(),
//                    equip.getUltimaCalibracao_MOD()== false ? "Não Alterado" : "Alterado",
//                    equip.getProximaCalibracao(),
//                    equip.getProximaCalibracao_MOD()== false ? "Não Alterado" : "Alterado",
//                    equip.getSerialNumber(),
//                    equip.getSerial_Number_MOD()== false ? "Não Alterado" : "Alterado",
//                    equip.getCertificado(),
//                    equip.getCertificado_MOD()== false ? "Não Alterado" : "Alterado",
//                    equip.getManual(),
//                    equip.getManual_MOD()== false ? "Não Alterado" : "Alterado",
//                    equip.getEscala(),
//                    equip.getEscala_MOD()== false ? "Não Alterado" : "Alterado",
//                    equip.getProcedimento(),
//                    equip.getProcedimento_MOD()== false ? "Não Alterado" : "Alterado",
//                    equip.getAtivo(),
//                    equip.getAtivo_MOD()== false ? "Não Alterado" : "Alterado",
//                    equip.getObs(),
//                    equip.getObs_MOD()== false ? "Não Alterado" : "Alterado",
//                    equip.getAudit().getComputador() + " / " + equip.getAudit().getUserComputador(),
//                    equip.getAudit().getUltimaModificacaoPor(),
//                    DataHora.getStringDateTime(equip.getAudit().getUltimaModificacao()),
//                    equip.getAudit().getMotivo()
//                });
//            }
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Erro ao carregar o dados de auditoria: " + e.getMessage(), "Erro ao Carregar", JOptionPane.ERROR_MESSAGE);
//        }
    }
}
