/*
 * Copyright (C) 2018 rafael.lopes
 *
 * Este programa é um software livre: você pode redistribuí-lo e / ou modificar
 * sob os termos da GNU General Public License, conforme publicado pela
 * a Free Software Foundation, seja a versão 3 da Licença, quanto
 * qualquer versão posterior.
 *
 * Este programa é distribuído na esperança de que seja útil,
 * mas SEM QUALQUER GARANTIA; sem a garantia implícita de
 * COMERCIALIZAÇÃO OU APTIDÃO PARA UM PROPÓSITO PARTICULAR. Veja o
 * GNU General Public License para obter mais detalhes.
 *
 * Você deve ter recebido uma cópia da GNU General Public License
 *  juntamente com este programa. Caso contrário, veja <http://www.gnu.org/licenses/>.
 */
package br.com.lablims.view.cadastro;

import br.com.lablims.dao.MetodologiaDAO;
import br.com.lablims.model.Metodologia;
import br.com.lablims.util.Frames;
import br.com.lablims.util.TableSorter;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafael.lopes
 */
public class FrmProcurarMetodologia extends javax.swing.JDialog {

    private Metodologia metodologia;

    /**
     * Creates new form FrmProcurarProduto
     *
     * @param parent
     * @param modal
     * @param prd
     */
    public FrmProcurarMetodologia(java.awt.Frame parent, boolean modal, Metodologia metodo) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Procurar Metodologia");
        setIconImage(new Frames().getIcon());
        setResizable(false);
        metodologia = metodo;
        readProduto();
    }

    public FrmProcurarMetodologia(java.awt.Frame parent, boolean modal, 
            Metodologia metodo, HashSet<Metodologia> ids) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Procurar Metodologia");
        setIconImage(new Frames().getIcon());
        setResizable(false);
        metodologia = metodo;
        readProduto(ids);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        txtPesquisar = new javax.swing.JTextField();
        btnSelecionar = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMetodologia = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel4.setText("Pesquisar:");

        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyReleased(evt);
            }
        });

        btnSelecionar.setText("Selecionar");
        btnSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarActionPerformed(evt);
            }
        });

        btnFechar.setText("Cancelar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Metodologias"));

        tblMetodologia.setAutoCreateRowSorter(true);
        tblMetodologia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Metodologia_Id", "Código", "Método", "Versão_Mtd", "Categoria", "Versão"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMetodologia.setSurrendersFocusOnKeystroke(true);
        tblMetodologia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMetodologiaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMetodologia);
        if (tblMetodologia.getColumnModel().getColumnCount() > 0) {
            tblMetodologia.getColumnModel().getColumn(0).setMinWidth(100);
            tblMetodologia.getColumnModel().getColumn(0).setPreferredWidth(100);
            tblMetodologia.getColumnModel().getColumn(0).setMaxWidth(100);
            tblMetodologia.getColumnModel().getColumn(1).setMinWidth(150);
            tblMetodologia.getColumnModel().getColumn(1).setPreferredWidth(150);
            tblMetodologia.getColumnModel().getColumn(1).setMaxWidth(150);
            tblMetodologia.getColumnModel().getColumn(3).setMinWidth(80);
            tblMetodologia.getColumnModel().getColumn(3).setPreferredWidth(80);
            tblMetodologia.getColumnModel().getColumn(3).setMaxWidth(80);
            tblMetodologia.getColumnModel().getColumn(5).setMinWidth(80);
            tblMetodologia.getColumnModel().getColumn(5).setPreferredWidth(80);
            tblMetodologia.getColumnModel().getColumn(5).setMaxWidth(80);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 674, Short.MAX_VALUE)
                        .addComponent(btnSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelecionar)
                    .addComponent(btnFechar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased
        TableSorter.TableSorter(tblMetodologia, txtPesquisar);
    }//GEN-LAST:event_txtPesquisarKeyReleased

    private void btnSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarActionPerformed
        if (tblMetodologia.getSelectedRow() != -1) {
            selecionar();
        }
    }//GEN-LAST:event_btnSelecionarActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void tblMetodologiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMetodologiaMouseClicked
        if (evt.getClickCount() == 2) {
            selecionar();
        }
    }//GEN-LAST:event_tblMetodologiaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmProcurarMetodologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmProcurarMetodologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmProcurarMetodologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmProcurarMetodologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FrmProcurarMetodologia dialog = new FrmProcurarMetodologia(new javax.swing.JFrame(), true, null, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnSelecionar;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMetodologia;
    private javax.swing.JTextField txtPesquisar;
    // End of variables declaration//GEN-END:variables

    private void readProduto() {
        DefaultTableModel model = (DefaultTableModel) tblMetodologia.getModel();
        model.setNumRows(0);
        try {
            for (Metodologia mtd : new MetodologiaDAO().findEntities(Metodologia.class)) {
                model.addRow(new Object[]{
                    mtd.getId(),
                    mtd.getCodMetodo(),
                    mtd.getMetodo(),
                    mtd.getVersao(),
                    mtd.getCategoria(),
                    mtd.getVersion()
                });
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmProcurarMetodologia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void readProduto(HashSet<Metodologia> ids) {
        DefaultTableModel model = (DefaultTableModel) tblMetodologia.getModel();
        model.setNumRows(0);
        try {
            for (Metodologia mtd : ids) {
                model.addRow(new Object[]{
                    mtd.getId(),
                    mtd.getCodMetodo(),
                    mtd.getMetodo(),
                    mtd.getVersao(),
                    mtd.getCategoria(),
                    mtd.getVersion()
                });
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmProcurarMetodologia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void selecionar() {
        metodologia.setId((Long) tblMetodologia.getValueAt(tblMetodologia.getSelectedRow(), 0));
        metodologia.setCodMetodo(tblMetodologia.getValueAt(tblMetodologia.getSelectedRow(), 1).toString());
        metodologia.setMetodo(tblMetodologia.getValueAt(tblMetodologia.getSelectedRow(), 2).toString());
        dispose();
    }

}
