/*
 * Copyright (C) 2019 rafael.lopes
 *
 * Este programa é um software livre: você pode redistribuí-lo e / ou modificar
 * sob os termos da GNU General Public License, conforme publicado pela
 * a Free Software Foundation, seja a versão 3 da Licença, quanto
 * qualquer versão posterior.
 *
 * Este programa é distribuído na esperança de que seja útil,
 * mas SEM QUALQUER GARANTIA; sem a garantia implícita de
 * COMERCIALIZAÇÃO OU APTIDÃO PARA UM PROPÓSITO PARTICULAR. Veja o
 * GNU General Public License para obter mais detalhes.
 *
 * Você deve ter recebido uma cópia da GNU General Public License
 *  juntamente com este programa. Caso contrário, veja <http://www.gnu.org/licenses/>.
 */
package br.com.lablims.view.cadastro;

import br.com.lablims.dao.PlanoAnaliseDAO;
import br.com.lablims.dao.MetodologiaDAO;
import br.com.lablims.model.Metodologia;
import br.com.lablims.model.PlanoAnalise;
import br.com.lablims.util.Senha;
import br.com.lablims.util.Frames;
import java.awt.Cursor;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafael.lopes
 */
public class FrmPlanoAnaliseVisualizar extends javax.swing.JDialog {

    private List<Long> metodo_ids;

    /**
     * Creates new form FrmMetodologiaAnaliseDados
     */
    public FrmPlanoAnaliseVisualizar(java.awt.Frame parent, boolean modal, List<Long> mtd_ids) {
        super(parent, modal);
        metodo_ids = mtd_ids;
        initComponents();
        Frames.setUpFrame(this, "Plano de Análise", false);
        readPlanoAnalise();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblMetodologiaAnalise = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Analises"));

        tblMetodologiaAnalise.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod_Analise_Id", "Descrição", "Análise", "Tipo", "Setor", "Temp Mín", "Temp Médio", "Temp Máx", "Versão"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMetodologiaAnalise.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblMetodologiaAnalise.getTableHeader().setReorderingAllowed(false);
        tblMetodologiaAnalise.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMetodologiaAnaliseMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblMetodologiaAnalise);
        if (tblMetodologiaAnalise.getColumnModel().getColumnCount() > 0) {
            tblMetodologiaAnalise.getColumnModel().getColumn(0).setMinWidth(100);
            tblMetodologiaAnalise.getColumnModel().getColumn(0).setPreferredWidth(100);
            tblMetodologiaAnalise.getColumnModel().getColumn(0).setMaxWidth(100);
            tblMetodologiaAnalise.getColumnModel().getColumn(1).setMinWidth(400);
            tblMetodologiaAnalise.getColumnModel().getColumn(1).setPreferredWidth(400);
            tblMetodologiaAnalise.getColumnModel().getColumn(2).setMinWidth(300);
            tblMetodologiaAnalise.getColumnModel().getColumn(2).setPreferredWidth(300);
            tblMetodologiaAnalise.getColumnModel().getColumn(3).setMinWidth(300);
            tblMetodologiaAnalise.getColumnModel().getColumn(3).setPreferredWidth(300);
            tblMetodologiaAnalise.getColumnModel().getColumn(4).setMinWidth(150);
            tblMetodologiaAnalise.getColumnModel().getColumn(4).setPreferredWidth(150);
            tblMetodologiaAnalise.getColumnModel().getColumn(4).setMaxWidth(150);
            tblMetodologiaAnalise.getColumnModel().getColumn(5).setMinWidth(80);
            tblMetodologiaAnalise.getColumnModel().getColumn(5).setPreferredWidth(80);
            tblMetodologiaAnalise.getColumnModel().getColumn(5).setMaxWidth(80);
            tblMetodologiaAnalise.getColumnModel().getColumn(6).setMinWidth(80);
            tblMetodologiaAnalise.getColumnModel().getColumn(6).setPreferredWidth(80);
            tblMetodologiaAnalise.getColumnModel().getColumn(6).setMaxWidth(80);
            tblMetodologiaAnalise.getColumnModel().getColumn(7).setMinWidth(80);
            tblMetodologiaAnalise.getColumnModel().getColumn(7).setPreferredWidth(80);
            tblMetodologiaAnalise.getColumnModel().getColumn(7).setMaxWidth(80);
            tblMetodologiaAnalise.getColumnModel().getColumn(8).setMinWidth(80);
            tblMetodologiaAnalise.getColumnModel().getColumn(8).setPreferredWidth(80);
            tblMetodologiaAnalise.getColumnModel().getColumn(8).setMaxWidth(80);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 848, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblMetodologiaAnaliseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMetodologiaAnaliseMouseClicked
        if (evt.getClickCount() == 2) {
            if (tblMetodologiaAnalise.getSelectedRow() != -1) {
                editar();
            }
        }
    }//GEN-LAST:event_tblMetodologiaAnaliseMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPlanoAnaliseVisualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPlanoAnaliseVisualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPlanoAnaliseVisualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPlanoAnaliseVisualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FrmPlanoAnaliseVisualizar dialog = new FrmPlanoAnaliseVisualizar(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable tblMetodologiaAnalise;
    // End of variables declaration//GEN-END:variables

    private void readPlanoAnalise() {
        DefaultTableModel model = (DefaultTableModel) tblMetodologiaAnalise.getModel();
        PlanoAnaliseDAO paDAO = new PlanoAnaliseDAO();
        model.setNumRows(0);
        try {
            List<Metodologia> mtds = new MetodologiaDAO().findMetodologias(metodo_ids);
            for (PlanoAnalise pa : paDAO.readPlanoAnaliseTodosMetodos(mtds)) {
                model.addRow(new Object[]{
                    pa.getId(),
                    pa.getDescricao(),
                    pa.getAnalise().getAnalise(),
                    pa.getAnaliseTipo().getAnaliseTipo(),
                    pa.getSetor().getSiglaSetor(),
                    pa.getLeadTimeMin(),
                    pa.getLeadTimeMedio(),
                    pa.getLeadTimeMax(),
                    pa.getVersion()
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        }
    }

    private void remover() {
        Senha senha = new Senha();
        DefaultTableModel model = (DefaultTableModel) tblMetodologiaAnalise.getModel();
        PlanoAnaliseDAO mtdAnaliseDAO = new PlanoAnaliseDAO();
        try {
            int dialogResult = JOptionPane.showConfirmDialog(null,
                    "Realmente deseja excluir essa Registro?", "Aviso", JOptionPane.YES_NO_OPTION);
            if (dialogResult == 0) {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                if (senha.Salvar()) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    mtdAnaliseDAO.remover(PlanoAnalise.class,
                            (Long) tblMetodologiaAnalise.getValueAt(tblMetodologiaAnalise.getSelectedRow(), 0));
                    model.removeRow(tblMetodologiaAnalise.getSelectedRow());
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao excuir o dado: " + e.getMessage(), "Erro ao Excluir", JOptionPane.ERROR_MESSAGE);
        } finally {
            readPlanoAnalise();
        }
    }

    public void editar() {
        PlanoAnaliseDAO mtdAnaliseDAO = new PlanoAnaliseDAO();
        try {
            PlanoAnalise mtdAnalise = mtdAnaliseDAO.findById(PlanoAnalise.class,
                    (Long) tblMetodologiaAnalise.getValueAt(tblMetodologiaAnalise.getSelectedRow(), 0));
            new FrmPlanoAnaliseDados(null, true, mtdAnalise).setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        } finally {
            readPlanoAnalise();
        }

    }
}
