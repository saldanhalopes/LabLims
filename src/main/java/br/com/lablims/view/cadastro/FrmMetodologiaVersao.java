package br.com.lablims.view.cadastro;

import javax.swing.JOptionPane;
import br.com.lablims.dao.MetodologiaDAO;
import br.com.lablims.model.Metodologia;
import br.com.lablims.util.Senha;
import br.com.lablims.util.FieldFormatLimit;
import br.com.lablims.util.Frames;
import br.com.lablims.util.Pdf;
import br.com.lablims.util.TableSorter;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author rafael.lopes
 */
public class FrmMetodologiaVersao extends javax.swing.JDialog {

    private Metodologia metodo;
    private boolean novo = false;

    /**
     * Creates new form FrmConfigAcesso
     *
     * @param parent
     * @param modal
     */
    public FrmMetodologiaVersao(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Frames.setUpFrame(this, "Dados da Metodologia", true);
        limparCampos();
        novo = true;
        readCategoria();
        readStatus();
    }

    public FrmMetodologiaVersao(java.awt.Frame parent, boolean modal, Metodologia mtd) {
        super(parent, modal);
        initComponents();
        Frames.setUpFrame(this, "Dados da Metodologia", true);
        limparCampos();
        metodo = mtd;
        txtCodMetodo.setEditable(false);
        readCategoria();
        readStatus();
        carregarDados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalvarMetodo = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlAnexos = new javax.swing.JPanel();
        btnAdicionar1 = new javax.swing.JButton();
        btnRemover1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblAnexos = new javax.swing.JTable();
        btnRemover2 = new javax.swing.JButton();
        pnlAuditTrail = new javax.swing.JPanel();
        pnlAuditoria = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblAuditoria = new javax.swing.JTable();
        txtPesquisarAuditoria = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        pnlMetodo = new javax.swing.JPanel();
        txtCodMetodo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtMetodo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnSalvarMetodo.setText("Ok");
        btnSalvarMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarMetodoActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnAdicionar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_plus_24.png"))); // NOI18N
        btnAdicionar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionar1ActionPerformed(evt);
            }
        });

        btnRemover1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_minus_24.png"))); // NOI18N
        btnRemover1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemover1ActionPerformed(evt);
            }
        });

        tblAnexos.setAutoCreateRowSorter(true);
        tblAnexos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Versão_Id", "Versão", "Status", "Última Atualização", "Data Versionamento", "Próxima Revisão", "Anexo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAnexos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblAnexos.setSurrendersFocusOnKeystroke(true);
        tblAnexos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAnexosMouseClicked(evt);
            }
        });
        tblAnexos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblAnexosKeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(tblAnexos);

        btnRemover2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_view_32.png"))); // NOI18N
        btnRemover2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemover2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAnexosLayout = new javax.swing.GroupLayout(pnlAnexos);
        pnlAnexos.setLayout(pnlAnexosLayout);
        pnlAnexosLayout.setHorizontalGroup(
            pnlAnexosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAnexosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 906, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAnexosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAnexosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnRemover2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRemover1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAdicionar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlAnexosLayout.setVerticalGroup(
            pnlAnexosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAnexosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAnexosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                    .addGroup(pnlAnexosLayout.createSequentialGroup()
                        .addComponent(btnAdicionar1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemover1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemover2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Versões", pnlAnexos);

        pnlAuditTrail.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Auditoria"));

        tblAuditoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Plano_Analise_Coluna_Id", "Versão", "MOD", "Reagente_Id", "Reagente_Id_MOD", "Qtd", "Qtd_MOD", "Unidade", "Unidade_MOD", "Obs", "Obs_MOD", "Computador / AD_User ", "Usuario", "Data Modificação", "Motivo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAuditoria.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane3.setViewportView(tblAuditoria);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 939, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
        );

        txtPesquisarAuditoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarAuditoriaKeyReleased(evt);
            }
        });

        jLabel8.setText("Pesquisar:");

        javax.swing.GroupLayout pnlAuditoriaLayout = new javax.swing.GroupLayout(pnlAuditoria);
        pnlAuditoria.setLayout(pnlAuditoriaLayout);
        pnlAuditoriaLayout.setHorizontalGroup(
            pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAuditoriaLayout.createSequentialGroup()
                .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAuditoriaLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarAuditoria))
                    .addGroup(pnlAuditoriaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlAuditoriaLayout.setVerticalGroup(
            pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAuditoriaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisarAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlAuditTrailLayout = new javax.swing.GroupLayout(pnlAuditTrail);
        pnlAuditTrail.setLayout(pnlAuditTrailLayout);
        pnlAuditTrailLayout.setHorizontalGroup(
            pnlAuditTrailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAuditoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlAuditTrailLayout.setVerticalGroup(
            pnlAuditTrailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAuditoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Audit Trail", pnlAuditTrail);

        pnlMetodo.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        txtCodMetodo.setEditable(false);
        txtCodMetodo.setBackground(new java.awt.Color(204, 204, 204));

        jLabel5.setText("Método:");

        txtMetodo.setEditable(false);
        txtMetodo.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout pnlMetodoLayout = new javax.swing.GroupLayout(pnlMetodo);
        pnlMetodo.setLayout(pnlMetodoLayout);
        pnlMetodoLayout.setHorizontalGroup(
            pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMetodoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCodMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMetodo)
                .addContainerGap())
        );
        pnlMetodoLayout.setVerticalGroup(
            pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMetodoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtCodMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSalvarMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlMetodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarMetodo)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarMetodoActionPerformed
        MetodologiaDAO mtdDAO = new MetodologiaDAO();
        Senha senha = new Senha();
        try {
            if (txtCodMetodo.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Código inválido");
                txtCodMetodo.requestFocus();
            } else if (txtMetodo.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Método inválido");
                txtMetodo.requestFocus();
            } else if (cmbCategoria.getSelectedItem().toString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Categoria inválida");
                cmbCategoria.requestFocus();
            } else if (cmbStatus.getSelectedItem().toString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Status inválido");
                cmbStatus.requestFocus();
            }else {
                if (novo) {
                    if (mtdDAO.checkCodMetodoIsExits(txtCodMetodo.getText().trim())) {
                        JOptionPane.showMessageDialog(null, "Método já existente");
                        txtCodMetodo.requestFocus();
                    } else {
                        if (senha.Salvar()) {
                            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                            criarMetodologia();
                            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                            dispose();
                        }
                    }
                } else {
                    if (senha.Salvar()) {
                        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                        atulizarMetodologia();
                        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                        dispose();
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        }
    }//GEN-LAST:event_btnSalvarMetodoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        fechar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtPesquisarAuditoriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarAuditoriaKeyReleased
        TableSorter.TableSorter(tblAuditoria, txtPesquisarAuditoria);
    }//GEN-LAST:event_txtPesquisarAuditoriaKeyReleased

    private void btnAdicionar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionar1ActionPerformed
        addVersao();
    }//GEN-LAST:event_btnAdicionar1ActionPerformed

    private void btnRemover1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemover1ActionPerformed
        if (tblAnexos.getSelectedRow() != -1) {
            removerVersao();
        }
    }//GEN-LAST:event_btnRemover1ActionPerformed

    private void tblAnexosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAnexosMouseClicked

    }//GEN-LAST:event_tblAnexosMouseClicked

    private void tblAnexosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblAnexosKeyReleased
        if (tblAnexos.getSelectedRow() != -1) {
            if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                removerAnexo();
            }
        }
    }//GEN-LAST:event_tblAnexosKeyReleased

    private void btnRemover2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemover2ActionPerformed
        if (tblAnexos.getSelectedRow() != -1) {
            try {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                Pdf.view((Long) tblAnexos.getValueAt(tblAnexos.getSelectedRow(), 0), this);
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
            }
        }
    }//GEN-LAST:event_btnRemover2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMetodologiaVersao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FrmMetodologiaVersao dialog = new FrmMetodologiaVersao(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar1;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnRemover1;
    private javax.swing.JButton btnRemover2;
    public static javax.swing.JButton btnSalvarMetodo;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel pnlAnexos;
    private javax.swing.JPanel pnlAuditTrail;
    private javax.swing.JPanel pnlAuditoria;
    private javax.swing.JPanel pnlMetodo;
    private javax.swing.JTable tblAnexos;
    private javax.swing.JTable tblAuditoria;
    private javax.swing.JTextField txtCodMetodo;
    private javax.swing.JTextField txtMetodo;
    private javax.swing.JTextField txtPesquisarAuditoria;
    // End of variables declaration//GEN-END:variables

    private void criarMetodologia() {
        Metodologia mtd = new Metodologia();
        MetodologiaDAO mtdDAO = new MetodologiaDAO();
        try {
            mtd.setCodMetodo(txtCodMetodo.getText().trim().toUpperCase());
            mtd.setVersao((Integer) txtVersao.getValue());
            mtd.setMetodo(txtMetodo.getText().trim().toUpperCase());
            mtd.setCategoria(cmbCategoria.getSelectedItem().toString());
            mtd.setObs(txtObs.getText().trim().toUpperCase());
            mtd.setStatus(cmbStatus.getSelectedItem().toString());
            mtd.setDataRevisao(txtDataRevisao.getDate());
            mtd.setDataVencimento(txtDataVencimento.getDate());
            mtd.setVersion(0);
            mtdDAO.salvar(mtd);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        }
    }

    private void readCategoria() {
        cmbCategoria.removeAll();
        cmbCategoria.addItem("");
        cmbCategoria.addItem("MANUAL");
        cmbCategoria.addItem("METODOLOGIA DE ANÁLISE DE PRODUTOS DE DEGRADAÇÃO");
        cmbCategoria.addItem("METODOLOGIA DE CONTROLE DE PROCESSO");
        cmbCategoria.addItem("METODOLOGIA DE ESTUDO DE ESTABILIDADE");
        cmbCategoria.addItem("METODOLOGIA DE MATÉRIA-PRIMA - ATIVO");
        cmbCategoria.addItem("METODOLOGIA DE MATÉRIA-PRIMA - EXCIPIENTE");
        cmbCategoria.addItem("METODOLOGIA DE MATERIAL DE EMBALAGEM");
        cmbCategoria.addItem("METODOLOGIA DE PRODUTO ACABADO");
        cmbCategoria.addItem("METODOLOGIA DE PRODUTO GRANEL");
        cmbCategoria.addItem("METODOLOGIA DE PRODUTO SEMI-ACABADO");
        cmbCategoria.addItem("METODOLOGIA DE RESÍDUO DE LIMPEZA");
        cmbCategoria.addItem("MÉTODOS GERAIS");
        cmbCategoria.addItem("MÉTODOS GERAL DE SOLUÇÕES REAGENTES");
        cmbCategoria.addItem("PROCEDIMENTO OPERACIONAL PADRÃO");
        cmbCategoria.addItem("PROTOCOLO DE TRANSFERÊNCIA DE MÉTODO ANALÍTICO DE RESÍDUO DE LIMPEZA");
    }

    private void readStatus() {
        cmbStatus.removeAll();
        cmbStatus.addItem("");
        cmbStatus.addItem("Aprovada");
        cmbStatus.addItem("Bloqueada");
        cmbStatus.addItem("Cancelada");
        cmbStatus.addItem("Em Elaboração");
        cmbStatus.addItem("Em Revisão");
        cmbStatus.addItem("Obsoleta");
        cmbStatus.addItem("Pend. Aprovação");
        cmbStatus.addItem("Pend. Revalidação");
        cmbStatus.addItem("Vigente");
    }

    private void limparCampos() {
        txtCodMetodo.setDocument(new FieldFormatLimit(15, FieldFormatLimit.TUDO));
        txtCodMetodo.setText(null);
        txtMetodo.setText(null);
        txtVersao.setModel(new SpinnerNumberModel(0, 0, 250, 1));
    }

    private void atulizarMetodologia() {
        MetodologiaDAO mtdDAO = new MetodologiaDAO();
        try {
            metodo.setVersao((Integer) txtVersao.getValue());
            metodo.setMetodo(txtMetodo.getText().trim().toUpperCase());
            metodo.setCategoria(cmbCategoria.getSelectedItem().toString());
            metodo.setObs(txtObs.getText().trim().toUpperCase());
            metodo.setStatus(cmbStatus.getSelectedItem().toString());
            metodo.setDataVencimento(txtDataVencimento.getDate());
            metodo.setDataRevisao(txtDataRevisao.getDate());
            metodo.setVersion(metodo.getVersion() + 1);
            mtdDAO.salvar(metodo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar dados: " + e);
        }
    }

    private void carregarDados() {
        try {
            txtCodMetodo.setText(metodo.getCodMetodo().toUpperCase());
            txtVersao.setValue(metodo.getVersao());
            txtMetodo.setText(metodo.getMetodo().toUpperCase());
            String[] categoria = {metodo.getCategoria()};
            cmbCategoria.setSelectedItem(categoria[0]);
            String[] status = {metodo.getStatus()};
            cmbStatus.setSelectedItem(status[0]);
            txtObs.setText(metodo.getObs());
            txtDataVencimento.setDate(metodo.getDataVencimento());
            txtDataRevisao.setDate(metodo.getDataRevisao());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + ex);
        }
    }
private void addVersao() {

    }

    private void removerVersao() {
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        Senha senha = new Senha();
        try {
            ColunaUtilDAO colUtilDAO = new ColunaUtilDAO();
            ColunaUtil colUtil = colUtilDAO.findById(ColunaUtil.class, col_id);
            if (senha.Salvar()) {
                Arquivos arq = new ArquivosDAO().findById(Arquivos.class,
                        (Long) tblAnexos.getValueAt(tblAnexos.getSelectedRow(), 0));
                colUtil.getAnexos().remove(arq);
                colUtil.setVersion(colUtil.getVersion() + 1);
                colUtilDAO.salvar(colUtil);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao remover Anexo: " + ex);
        } finally {
            readAnexos();
        }
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }
    private void fechar() {
        Frames.fecharFrame(this);
    }
}
