package br.com.lablims.view.cadastro;

import br.com.lablims.dao.ColunaConfigDAO;
import javax.swing.JOptionPane;
import br.com.lablims.dao.ColunaDAO;
import br.com.lablims.model.Coluna;
import br.com.lablims.model.ColunaConfig;
import br.com.lablims.util.ComboBox;
import br.com.lablims.util.Senha;
import br.com.lablims.util.FieldFormatLimit;
import br.com.lablims.util.Frames;
import java.awt.Cursor;
import java.util.TreeMap;

/**
 *
 * @author rafael.lopes
 */
public class FrmColunaDados extends javax.swing.JDialog {

    private Coluna coluna;
    private boolean novoColuna = false;
    private final TreeMap<Long, String> categoryMapFabricante = new TreeMap<>();
    private final TreeMap<Long, String> categoryMapMarca = new TreeMap<>();
    private final TreeMap<Long, String> categoryMapTipo = new TreeMap<>();
    private final TreeMap<Long, String> categoryMapTamanho = new TreeMap<>();
    private final TreeMap<Long, String> categoryMapDiametro = new TreeMap<>();
    private final TreeMap<Long, String> categoryMapParticula = new TreeMap<>();
    private final TreeMap<Long, String> categoryMapFase = new TreeMap<>();

    /**
     * Creates new form FrmConfigAcesso
     *
     * @param parent
     * @param modal
     */
    public FrmColunaDados(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Frames.setUpFrame(this, "Dados da Coluna", true);
        limparCampos();
        readConfig();
        novoColuna = true;
    }

    public FrmColunaDados(java.awt.Frame parent, boolean modal, Coluna col) {
        super(parent, modal);
        initComponents();
        Frames.setUpFrame(this, "Dados da Coluna", true);
        coluna = col;
        limparCampos();
        readConfig();
        carregarDados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalvarMetodo = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        cmbFabricante = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        cmbMarca = new javax.swing.JComboBox();
        jLabel40 = new javax.swing.JLabel();
        txtPartNumber = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        btnProcurarFabricante = new javax.swing.JButton();
        btnProcurarMarca = new javax.swing.JButton();
        jLabel48 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtObs = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        cmbTamanho = new javax.swing.JComboBox();
        jLabel43 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        cmbDiametro = new javax.swing.JComboBox();
        jLabel44 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        cmbParticula = new javax.swing.JComboBox();
        jLabel45 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        cmbTipoColuna = new javax.swing.JComboBox();
        jLabel46 = new javax.swing.JLabel();
        cmbFase = new javax.swing.JComboBox();
        btnProcurarFase = new javax.swing.JButton();
        btnProcurarTipoColuna = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnSalvarMetodo.setText("Ok");
        btnSalvarMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarMetodoActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Informações da Coluna"));

        jLabel27.setText("Fabricante:");

        jLabel32.setText("Marca:");

        jLabel40.setText("Part Number:");

        jLabel47.setText("Código:");

        btnProcurarFabricante.setText("Buscar");
        btnProcurarFabricante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarFabricanteActionPerformed(evt);
            }
        });

        btnProcurarMarca.setText("Buscar");
        btnProcurarMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarMarcaActionPerformed(evt);
            }
        });

        jLabel48.setText("Obs:");

        txtObs.setColumns(20);
        txtObs.setRows(5);
        jScrollPane3.setViewportView(txtObs);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel47, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel40, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmbMarca, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbFabricante, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnProcurarFabricante, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnProcurarMarca, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(txtPartNumber)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbFabricante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27)
                    .addComponent(btnProcurarFabricante))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(btnProcurarMarca))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(txtPartNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel48)
                        .addGap(0, 37, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Propriedades"));

        jLabel29.setText("Tamanho:");

        jLabel43.setText("mm");

        jLabel34.setText("Diâmetro:");

        jLabel44.setText("mm");

        jLabel33.setText("Partícula:");

        jLabel45.setText("µm");

        jLabel39.setText("Tipo:");

        jLabel46.setText("Fase:");

        cmbFase.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));

        btnProcurarFase.setText("Buscar");
        btnProcurarFase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarFaseActionPerformed(evt);
            }
        });

        btnProcurarTipoColuna.setText("Buscar");
        btnProcurarTipoColuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarTipoColunaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(cmbFase, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnProcurarFase, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                            .addComponent(btnProcurarTipoColuna, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbParticula, 0, 270, Short.MAX_VALUE)
                                    .addComponent(cmbDiametro, 0, 270, Short.MAX_VALUE)
                                    .addComponent(cmbTamanho, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbTipoColuna, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel44, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                            .addComponent(jLabel43, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbFase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46)
                    .addComponent(btnProcurarFase))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTipoColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39)
                    .addComponent(btnProcurarTipoColuna))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbDiametro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44)
                    .addComponent(jLabel34))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbParticula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45)
                    .addComponent(jLabel33))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSalvarMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarMetodo)
                    .addComponent(btnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarMetodoActionPerformed
        Senha senha = new Senha();
        try {
            if (cmbFabricante.getSelectedItem().toString().isEmpty() || cmbFabricante.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(null, "Fabricante inválido");
                cmbFabricante.requestFocus();
            } else if (cmbMarca.getSelectedItem().toString().isEmpty() || cmbMarca.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(null, "Marca inválida");
                cmbMarca.requestFocus();
            } else if (txtCodigo.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Código inválido");
                txtCodigo.requestFocus();
            } else if (cmbFase.getSelectedItem().toString().isEmpty() || cmbFase.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(null, "Fase Estácionária inválida");
                cmbFase.requestFocus();
            } else if (cmbTipoColuna.getSelectedItem().toString().isEmpty() || cmbTipoColuna.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(null, "Tipo de Fase Estácionária inválida");
                cmbTipoColuna.requestFocus();
            } else if (cmbTamanho.getSelectedItem().toString().isEmpty() || cmbTamanho.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(null, "Tamanho inválido");
                cmbTamanho.requestFocus();
            } else if (cmbDiametro.getSelectedItem().toString().isEmpty() || cmbDiametro.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(null, "Diâmetro inválido");
                cmbDiametro.requestFocus();
            } else if (cmbParticula.getSelectedItem().toString().isEmpty() || cmbParticula.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(null, "Partícula inválido");
                cmbParticula.requestFocus();
            } else if (novoColuna) {
                if (new ColunaDAO().checkIsExits(txtCodigo.getText().trim())) {
                    JOptionPane.showMessageDialog(null, "Código SAP já existente");
                    txtCodigo.requestFocus();
                } else {
                    if (senha.Salvar()) {
                        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                        criarColuna();
                        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                        dispose();
                    }
                }
            } else {
                if (new ColunaDAO().checkIsExits(txtCodigo.getText().trim())) {
                    JOptionPane.showMessageDialog(null, "Código SAP já existente");
                    txtCodigo.requestFocus();
                } else {
                    if (senha.Salvar()) {
                        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                        atulizarColuna();
                        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                        dispose();
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        }
    }//GEN-LAST:event_btnSalvarMetodoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        fechar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnProcurarFabricanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarFabricanteActionPerformed
        ColunaConfig config = new ColunaConfig("Fabricante");
        FrmProcurarColunaConfig frm = new FrmProcurarColunaConfig(null, true, config);
        frm.setVisible(true);
        if (config.getConfiguracao() != null) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            readFabricante();
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            String[] coluna_config = {config.getConfiguracao()};
            cmbFabricante.setSelectedItem(coluna_config[0]);
        }
    }//GEN-LAST:event_btnProcurarFabricanteActionPerformed

    private void btnProcurarMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarMarcaActionPerformed
        ColunaConfig config = new ColunaConfig("Marca");
        FrmProcurarColunaConfig frm = new FrmProcurarColunaConfig(null, true, config);
        frm.setVisible(true);
        if (config.getConfiguracao() != null) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            readMarca();
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            String[] coluna_config = {config.getConfiguracao()};
            cmbMarca.setSelectedItem(coluna_config[0]);
        }
    }//GEN-LAST:event_btnProcurarMarcaActionPerformed

    private void btnProcurarFaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarFaseActionPerformed
        ColunaConfig config = new ColunaConfig("Fase");
        FrmProcurarColunaConfig frm = new FrmProcurarColunaConfig(null, true, config);
        frm.setVisible(true);
        if (config.getConfiguracao() != null) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            readFase();
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            String[] coluna_config = {config.getConfiguracao()};
            cmbFase.setSelectedItem(coluna_config[0]);
        }
    }//GEN-LAST:event_btnProcurarFaseActionPerformed

    private void btnProcurarTipoColunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarTipoColunaActionPerformed
        ColunaConfig config = new ColunaConfig("Tipo Coluna");
        FrmProcurarColunaConfig frm = new FrmProcurarColunaConfig(null, true, config);
        frm.setVisible(true);
        if (config.getConfiguracao() != null) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            readTipo();
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            String[] coluna_config = {config.getConfiguracao()};
            cmbTipoColuna.setSelectedItem(coluna_config[0]);
        }
    }//GEN-LAST:event_btnProcurarTipoColunaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmColunaDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FrmColunaDados dialog = new FrmColunaDados(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnProcurarFabricante;
    private javax.swing.JButton btnProcurarFase;
    private javax.swing.JButton btnProcurarMarca;
    private javax.swing.JButton btnProcurarTipoColuna;
    public static javax.swing.JButton btnSalvarMetodo;
    private javax.swing.JComboBox cmbDiametro;
    private javax.swing.JComboBox cmbFabricante;
    private javax.swing.JComboBox cmbFase;
    private javax.swing.JComboBox cmbMarca;
    private javax.swing.JComboBox cmbParticula;
    private javax.swing.JComboBox cmbTamanho;
    private javax.swing.JComboBox cmbTipoColuna;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextArea txtObs;
    private javax.swing.JTextField txtPartNumber;
    // End of variables declaration//GEN-END:variables

    private void criarColuna() {
        Coluna col = new Coluna();
        ColunaDAO colDAO = new ColunaDAO();
        try {
            col.setCodigo(txtCodigo.getText());
            col.setFabricanteColuna(new ColunaConfigDAO().findById(ColunaConfig.class, ComboBox.getKeyForValue(cmbFabricante.getSelectedItem().toString(), categoryMapFabricante)));
            col.setMarcaColuna(new ColunaConfigDAO().findById(ColunaConfig.class, ComboBox.getKeyForValue(cmbMarca.getSelectedItem().toString(), categoryMapMarca)));
            col.setTipoColuna(new ColunaConfigDAO().findById(ColunaConfig.class, ComboBox.getKeyForValue(cmbTipoColuna.getSelectedItem().toString(), categoryMapTipo)));
            col.setFaseColuna(new ColunaConfigDAO().findById(ColunaConfig.class, ComboBox.getKeyForValue(cmbFase.getSelectedItem().toString(), categoryMapFase)));
            col.setTamanhoColuna(new ColunaConfigDAO().findById(ColunaConfig.class, ComboBox.getKeyForValue(cmbTamanho.getSelectedItem().toString(), categoryMapTamanho)));
            col.setDiametroColuna(new ColunaConfigDAO().findById(ColunaConfig.class, ComboBox.getKeyForValue(cmbDiametro.getSelectedItem().toString(), categoryMapDiametro)));
            col.setParticulaColuna(new ColunaConfigDAO().findById(ColunaConfig.class, ComboBox.getKeyForValue(cmbParticula.getSelectedItem().toString(), categoryMapParticula)));
            col.setPartNumber(txtPartNumber.getText().toUpperCase());
            col.setObs(txtObs.getText().toUpperCase());
            col.setVersion(0);
            System.out.println(col);
            colDAO.salvar(col);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        }
    }

    private void atulizarColuna() {
        ColunaDAO reagDAO = new ColunaDAO();
        try {
            coluna.setCodigo(txtCodigo.getText());
            coluna.setFabricanteColuna(new ColunaConfigDAO().findById(ColunaConfig.class, ComboBox.getKeyForValue(cmbFabricante.getSelectedItem().toString(), categoryMapFabricante)));
            coluna.setMarcaColuna(new ColunaConfigDAO().findById(ColunaConfig.class, ComboBox.getKeyForValue(cmbMarca.getSelectedItem().toString(), categoryMapMarca)));
            coluna.setTipoColuna(new ColunaConfigDAO().findById(ColunaConfig.class, ComboBox.getKeyForValue(cmbTipoColuna.getSelectedItem().toString(), categoryMapTipo)));
            coluna.setFaseColuna(new ColunaConfigDAO().findById(ColunaConfig.class, ComboBox.getKeyForValue(cmbFase.getSelectedItem().toString(), categoryMapFase)));
            coluna.setTamanhoColuna(new ColunaConfigDAO().findById(ColunaConfig.class, ComboBox.getKeyForValue(cmbTamanho.getSelectedItem().toString(), categoryMapTamanho)));
            coluna.setDiametroColuna(new ColunaConfigDAO().findById(ColunaConfig.class, ComboBox.getKeyForValue(cmbDiametro.getSelectedItem().toString(), categoryMapDiametro)));
            coluna.setParticulaColuna(new ColunaConfigDAO().findById(ColunaConfig.class, ComboBox.getKeyForValue(cmbParticula.getSelectedItem().toString(), categoryMapParticula)));
            coluna.setPartNumber(txtPartNumber.getText().toUpperCase());
            coluna.setObs(txtObs.getText().toUpperCase());
            coluna.setVersion(coluna.getVersion() + 1);
            reagDAO.salvar(coluna);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar dados: " + e);
        }
    }

    private void carregarDados() {
        try {
            txtCodigo.setText(String.valueOf(coluna.getCodigo()));
            String[] fab = {coluna.getFabricanteColuna().getConfiguracao()};
            cmbFabricante.setSelectedItem(fab[0]);
            String[] marca = {coluna.getMarcaColuna().getConfiguracao()};
            cmbMarca.setSelectedItem(marca[0]);
            String[] tipocoluna = {coluna.getTipoColuna().getConfiguracao()};
            cmbTipoColuna.setSelectedItem(tipocoluna[0]);
            String[] fase = {coluna.getFaseColuna().getConfiguracao()};
            cmbFase.setSelectedItem(fase[0]);
            String[] tamanho = {coluna.getTamanhoColuna().getConfiguracao()};
            cmbTamanho.setSelectedItem(tamanho[0]);
            String[] diametro = {coluna.getDiametroColuna().getConfiguracao()};
            cmbDiametro.setSelectedItem(diametro[0]);
            String[] particula = {coluna.getParticulaColuna().getConfiguracao()};
            cmbParticula.setSelectedItem(particula[0]);
            txtPartNumber.setText(coluna.getPartNumber().toUpperCase());
            txtObs.setText(coluna.getObs());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + ex);
        }
    }

    private void limparCampos() {
        txtCodigo.setDocument(new FieldFormatLimit(7, FieldFormatLimit.NUMEROS));
        txtPartNumber.setDocument(new FieldFormatLimit(50, FieldFormatLimit.TUDO));
        txtCodigo.setText(null);
        txtPartNumber.setText(null);
        txtObs.setText(null);
    }

    private void fechar() {
        Frames.fecharFrame(this);
    }

    private void readConfig() {
        readFabricante();
        readMarca();
        readTipo();
        readTamanho();
        readDiametro();
        readParticula();
        readFase();
    }

    private void readFabricante() {
        cmbFabricante.removeAllItems();
        cmbFabricante.addItem("");
        categoryMapFabricante.clear();
        ColunaConfigDAO configDAO = new ColunaConfigDAO();
        try {
            for (ColunaConfig config : configDAO.readColunaConfig("Fabricante")) {
                Long id = config.getId();
                String name = config.getConfiguracao();
                cmbFabricante.addItem(name);
                categoryMapFabricante.put(id, name);
            }
        } catch (Exception e) {
        }
    }

    private void readMarca() {
        cmbMarca.removeAllItems();
        cmbMarca.addItem("");
        categoryMapMarca.clear();
        ColunaConfigDAO configDAO = new ColunaConfigDAO();
        try {
            for (ColunaConfig config : configDAO.readColunaConfig("Marca")) {
                Long id = config.getId();
                String name = config.getConfiguracao();
                cmbMarca.addItem(name);
                categoryMapMarca.put(id, name);
            }
        } catch (Exception e) {
        }
    }

    private void readTipo() {
        cmbTipoColuna.removeAllItems();
        cmbTipoColuna.addItem("");
        categoryMapTipo.clear();
        ColunaConfigDAO configDAO = new ColunaConfigDAO();
        try {
            for (ColunaConfig config : configDAO.readColunaConfig("Tipo Coluna")) {
                Long id = config.getId();
                String name = config.getConfiguracao();
                cmbTipoColuna.addItem(name);
                categoryMapTipo.put(id, name);
            }
        } catch (Exception e) {
        }
    }

    private void readTamanho() {
        cmbTamanho.removeAllItems();
        cmbTamanho.addItem("");
        categoryMapTamanho.clear();
        ColunaConfigDAO configDAO = new ColunaConfigDAO();
        try {
            for (ColunaConfig config : configDAO.readColunaConfig("Tamanho")) {
                Long id = config.getId();
                String name = config.getConfiguracao();
                cmbTamanho.addItem(name);
                categoryMapTamanho.put(id, name);
            }
        } catch (Exception e) {
        }
    }

    private void readDiametro() {
        cmbDiametro.removeAllItems();
        cmbDiametro.addItem("");
        categoryMapDiametro.clear();
        ColunaConfigDAO configDAO = new ColunaConfigDAO();
        try {
            for (ColunaConfig config : configDAO.readColunaConfig("Diametro")) {
                Long id = config.getId();
                String name = config.getConfiguracao();
                cmbDiametro.addItem(name);
                categoryMapDiametro.put(id, name);
            }
        } catch (Exception e) {
        }
    }

    private void readParticula() {
        cmbParticula.removeAllItems();
        cmbParticula.addItem("");
        categoryMapParticula.clear();
        ColunaConfigDAO configDAO = new ColunaConfigDAO();
        try {
            for (ColunaConfig config : configDAO.readColunaConfig("Particula")) {
                Long id = config.getId();
                String name = config.getConfiguracao();
                cmbParticula.addItem(name);
                categoryMapParticula.put(id, name);
            }
        } catch (Exception e) {
        }
    }

    private void readFase() {
        cmbFase.removeAllItems();
        cmbFase.addItem("");
        categoryMapFase.clear();
        ColunaConfigDAO configDAO = new ColunaConfigDAO();
        try {
            for (ColunaConfig config : configDAO.readColunaConfig("Fase")) {
                Long id = config.getId();
                String name = config.getConfiguracao();
                cmbFase.addItem(name);
                categoryMapFase.put(id, name);
            }
        } catch (Exception e) {
        }
    }

}
