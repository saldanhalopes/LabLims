package br.com.lablims.view.cadastro;

import br.com.lablims.dao.ArquivosDAO;
import javax.swing.JOptionPane;
import br.com.lablims.dao.ReagenteDAO;
import br.com.lablims.dao.UnidadeMedidaDAO;
import br.com.lablims.model.Arquivos;
import br.com.lablims.model.Reagente;
import br.com.lablims.model.UnidadeMedida;
import br.com.lablims.util.ComboBox;
import br.com.lablims.util.Senha;
import br.com.lablims.util.FieldFormatLimit;
import br.com.lablims.util.Frames;
import java.awt.Cursor;
import java.util.TreeMap;
import javax.swing.SpinnerNumberModel;
import java.io.File;
import br.com.lablims.util.Pdf;

/**
 *
 * @author rafael.lopes
 */
public class FrmReagenteDados extends javax.swing.JDialog {

    private Reagente reagente;
    private boolean novoReagente = false;
    private final TreeMap<Long, String> categoryMapUnidade = new TreeMap<>();
    private File fispq = null;

    /**
     * Creates new form FrmConfigAcesso
     *
     * @param parent
     * @param modal
     */
    public FrmReagenteDados(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Frames.setUpFrame(this, "Dados do Reagente", true);
        limparCampos();
        readUnidade();
        novoReagente = true;
    }

    public FrmReagenteDados(java.awt.Frame parent, boolean modal, Reagente reag) {
        super(parent, modal);
        initComponents();
        Frames.setUpFrame(this, "Dados do Reagente", true);
        reagente = reag;
        limparCampos();
        txtCodReagente.setEditable(false);
        readUnidade();
        carregarDados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalvarMetodo = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        pnlMetodo = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtReagente = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCodReagente = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        txtCas = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtClasse = new javax.swing.JTextField();
        txtPureza = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtGrau = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtFispq = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtObs = new javax.swing.JTextField();
        txtControlado = new javax.swing.JTextField();
        btnAnexar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txtSaude = new javax.swing.JSpinner();
        txtInflamabilidade = new javax.swing.JSpinner();
        txtReatividade = new javax.swing.JSpinner();
        txtEspecifico = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtArmazenamento = new javax.swing.JTextField();
        txtNid = new javax.swing.JTextField();
        txtEnderecamento = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtQtdMin = new javax.swing.JTextField();
        txtQtdMax = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        cmbUnidade = new javax.swing.JComboBox();
        chbCompraUnica = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnSalvarMetodo.setText("Ok");
        btnSalvarMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarMetodoActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        pnlMetodo.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel3.setText("Material:");

        jLabel9.setText("Nome Reagente:");

        jLabel4.setText("Fiscalizado por:");

        jLabel11.setText("CAS Number:");

        jLabel12.setText("Classe:");

        jLabel15.setText("Grau:");

        jLabel16.setText("Pureza:");

        jLabel20.setText("Fispq PDF:");

        txtFispq.setEditable(false);

        jLabel25.setText("Outros Nomes:");

        btnAnexar.setText("Anexar");
        btnAnexar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnexarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMetodoLayout = new javax.swing.GroupLayout(pnlMetodo);
        pnlMetodo.setLayout(pnlMetodoLayout);
        pnlMetodoLayout.setHorizontalGroup(
            pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMetodoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMetodoLayout.createSequentialGroup()
                        .addComponent(txtCodReagente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtReagente)
                    .addComponent(txtControlado)
                    .addComponent(txtObs)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMetodoLayout.createSequentialGroup()
                        .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMetodoLayout.createSequentialGroup()
                                .addComponent(txtCas, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtGrau, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtClasse, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtFispq))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAnexar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtPureza, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnlMetodoLayout.setVerticalGroup(
            pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMetodoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCodReagente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtReagente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtControlado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtCas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(txtGrau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(txtPureza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txtClasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20)
                        .addComponent(txtFispq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAnexar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtObs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Risco"));

        jLabel14.setText("Específico:");

        jLabel21.setText("Saúde:");

        jLabel22.setText("Inflamabilidade:");

        jLabel23.setText("Reatividade:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSaude)
                    .addComponent(txtInflamabilidade, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(txtReatividade, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(txtEspecifico))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSaude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtInflamabilidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtReatividade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEspecifico)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Estoque"));

        jLabel13.setText("Endereçamento:");

        jLabel24.setText("Nº Id:");

        jLabel10.setText("Armazenamento:");

        jLabel18.setText("Qtd Estoque Min:");

        jLabel19.setText("Qtd Estoque Max:");

        jLabel17.setText("Unidade:");

        cmbUnidade.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        chbCompraUnica.setText("Compra Única");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEnderecamento)
                    .addComponent(txtArmazenamento)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNid, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(txtQtdMin))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQtdMax, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(chbCompraUnica)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(txtNid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chbCompraUnica))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtEnderecamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtArmazenamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtQtdMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(txtQtdMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(cmbUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlMetodo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSalvarMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarMetodo)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarMetodoActionPerformed
        Senha senha = new Senha();
        try {
            if (txtCodReagente.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Código inválido");
                txtCodReagente.requestFocus();
            } else if (txtReagente.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Reagente inválido");
                txtReagente.requestFocus();
            } else if (novoReagente) {
                if (senha.Salvar()) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    criarReagente();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    dispose();
                }
            } else {
                if (senha.Salvar()) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    atulizarReagente();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    dispose();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        }
    }//GEN-LAST:event_btnSalvarMetodoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        fechar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAnexarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnexarActionPerformed
        try {
            fispq = Pdf.carregar();
            if (fispq != null) {
                txtFispq.setText(fispq.getName());
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao anexar dados: " + ex);
        }
    }//GEN-LAST:event_btnAnexarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmReagenteDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FrmReagenteDados dialog = new FrmReagenteDados(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnexar;
    private javax.swing.JButton btnCancelar;
    public static javax.swing.JButton btnSalvarMetodo;
    private javax.swing.JCheckBox chbCompraUnica;
    private javax.swing.JComboBox cmbUnidade;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel pnlMetodo;
    private javax.swing.JTextField txtArmazenamento;
    private javax.swing.JTextField txtCas;
    private javax.swing.JTextField txtClasse;
    private javax.swing.JFormattedTextField txtCodReagente;
    private javax.swing.JTextField txtControlado;
    private javax.swing.JTextField txtEnderecamento;
    private javax.swing.JTextField txtEspecifico;
    private javax.swing.JTextField txtFispq;
    private javax.swing.JTextField txtGrau;
    private javax.swing.JSpinner txtInflamabilidade;
    private javax.swing.JTextField txtNid;
    private javax.swing.JTextField txtObs;
    private javax.swing.JTextField txtPureza;
    private javax.swing.JTextField txtQtdMax;
    private javax.swing.JTextField txtQtdMin;
    private javax.swing.JTextField txtReagente;
    private javax.swing.JSpinner txtReatividade;
    private javax.swing.JSpinner txtSaude;
    // End of variables declaration//GEN-END:variables

    private void criarReagente() {
        Reagente reag = new Reagente();
        ReagenteDAO reagDAO = new ReagenteDAO();
        try {
            reag.setCompraUnica(chbCompraUnica.isSelected());
            reag.setCodReagente(Integer.parseInt(txtCodReagente.getText().trim()));
            reag.setReagente(txtReagente.getText().trim().toUpperCase());
            reag.setControlado(txtControlado.getText().trim());
            reag.setCasNumber(txtCas.getText().trim());
            reag.setGrau(txtGrau.getText().trim());
            reag.setClasse(txtClasse.getText().trim());
            reag.setPureza(txtPureza.getText().trim());
            reag.setObs(txtObs.getText().trim());
            reag.setNumeroIdentificacao(txtNid.getText().trim());
            reag.setEnderecamento(txtEnderecamento.getText().trim());
            reag.setArmazenamento(txtArmazenamento.getText().trim());
            reag.setQtdEstoqueMin(txtQtdMin.getText().isEmpty() ? 0 : Integer.parseInt(txtQtdMin.getText()));
            reag.setQtdEstoqueMax(txtQtdMax.getText().isEmpty() ? 0 : Integer.parseInt(txtQtdMax.getText()));
            reag.setUnidade(new UnidadeMedidaDAO().findById(UnidadeMedida.class, 
                    ComboBox.getKeyForValue(cmbUnidade.getSelectedItem().toString(), categoryMapUnidade)));
            reag.setSaude((Integer) txtSaude.getValue());
            reag.setInflamabilidade((Integer) txtInflamabilidade.getValue());
            reag.setReatividade((Integer) txtReatividade.getValue());
            reag.setEspecifico(txtEspecifico.getText().trim());
            reag.setVersion(0);
            if (fispq != null) {
                reag.setFispq(Pdf.salvar(fispq, "FISPQ"));
            }
            reagDAO.salvar(reag);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        }
    }

    private void atulizarReagente() {
        ReagenteDAO reagDAO = new ReagenteDAO();
        try {
            reagente.setCompraUnica(chbCompraUnica.isSelected());
            reagente.setCodReagente(Integer.parseInt(txtCodReagente.getText().trim()));
            reagente.setReagente(txtReagente.getText().trim().toUpperCase());
            reagente.setControlado(txtControlado.getText().trim());
            reagente.setCasNumber(txtCas.getText().trim());
            reagente.setGrau(txtGrau.getText().trim());
            reagente.setClasse(txtClasse.getText().trim());
            reagente.setPureza(txtPureza.getText().trim());
            reagente.setObs(txtObs.getText().trim());
            reagente.setNumeroIdentificacao(txtNid.getText().trim());
            reagente.setEnderecamento(txtEnderecamento.getText().trim());
            reagente.setArmazenamento(txtArmazenamento.getText().trim());
            reagente.setQtdEstoqueMin(txtQtdMin.getText().isEmpty() ? 0 : Integer.parseInt(txtQtdMin.getText()));
            reagente.setQtdEstoqueMax(txtQtdMax.getText().isEmpty() ? 0 : Integer.parseInt(txtQtdMax.getText()));
            reagente.setUnidade(new UnidadeMedidaDAO().findById(UnidadeMedida.class, ComboBox.getKeyForValue(cmbUnidade.getSelectedItem().toString(), categoryMapUnidade)));
            reagente.setSaude((Integer) txtSaude.getValue());
            reagente.setInflamabilidade((Integer) txtInflamabilidade.getValue());
            reagente.setReatividade((Integer) txtReatividade.getValue());
            reagente.setEspecifico(txtEspecifico.getText().trim());
            reagente.setVersion(reagente.getVersion() + 1);
            if (fispq != null) {
                reagente.setFispq(Pdf.salvar(fispq, "Certificado de Coluna"));
            }
            reagDAO.salvar(reagente);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar dados: " + e);
        }
    }

    private void carregarDados() {
        try {
            chbCompraUnica.setSelected(reagente.getCompraUnica());
            txtCodReagente.setText(reagente.getCodReagente().toString());
            txtReagente.setText(reagente.getReagente().toUpperCase());
            txtControlado.setText(reagente.getControlado());
            txtCas.setText(reagente.getCasNumber());
            txtGrau.setText(reagente.getGrau());
            txtClasse.setText(reagente.getClasse());
            txtPureza.setText(reagente.getPureza());
            txtObs.setText(reagente.getObs());
            txtNid.setText(reagente.getNumeroIdentificacao());
            txtEnderecamento.setText(reagente.getEnderecamento());
            txtArmazenamento.setText(reagente.getArmazenamento());
            txtQtdMin.setText(reagente.getQtdEstoqueMin() == null ? "0" : reagente.getQtdEstoqueMin().toString());
            txtQtdMax.setText(reagente.getQtdEstoqueMax() == null ? "0" : reagente.getQtdEstoqueMax().toString());
            String[] unidade = {reagente.getUnidade() == null ? "" : reagente.getUnidade().getUnidade()};
            cmbUnidade.setSelectedItem(unidade[0]);
            txtSaude.setValue(reagente.getSaude() == null ? 0 : reagente.getSaude());
            txtInflamabilidade.setValue(reagente.getInflamabilidade() == null ? 0 : reagente.getInflamabilidade());
            txtReatividade.setValue(reagente.getReatividade() == null ? 0 : reagente.getReatividade());
            txtEspecifico.setText(reagente.getEspecifico());
            try {
                Arquivos arquivo = new ArquivosDAO().findById(Arquivos.class, reagente.getFispq().getId());
                if (arquivo != null) {
                    txtFispq.setText(arquivo.getNome());
                }
            } catch (Exception e) {
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + ex);
        }
    }

    private void limparCampos() {
        txtCodReagente.setDocument(new FieldFormatLimit(9, FieldFormatLimit.NUMEROS));
        txtQtdMin.setDocument(new FieldFormatLimit(9, FieldFormatLimit.NUMEROS));
        txtQtdMax.setDocument(new FieldFormatLimit(9, FieldFormatLimit.NUMEROS));
        txtEspecifico.setDocument(new FieldFormatLimit(5, FieldFormatLimit.LETRAS_NUMEROS_MAIUSCULO));
        txtCas.setDocument(new FieldFormatLimit(14, FieldFormatLimit.TUDO));
        txtGrau.setDocument(new FieldFormatLimit(18, FieldFormatLimit.TUDO));
        txtClasse.setDocument(new FieldFormatLimit(25, FieldFormatLimit.TUDO));
        txtPureza.setDocument(new FieldFormatLimit(14, FieldFormatLimit.TUDO));
        txtNid.setDocument(new FieldFormatLimit(10, FieldFormatLimit.LETRAS_NUMEROS_MAIUSCULO));
        txtSaude.setModel(new SpinnerNumberModel(0, 0, 4, 1));
        txtInflamabilidade.setModel(new SpinnerNumberModel(0, 0, 4, 1));
        txtReatividade.setModel(new SpinnerNumberModel(0, 0, 4, 1));
        txtCodReagente.setText(null);
        txtReagente.setText(null);
        txtControlado.setText(null);
        txtCas.setText(null);
        txtGrau.setText(null);
        txtClasse.setText(null);
        txtPureza.setText(null);
        txtFispq.setText(null);
        txtObs.setText(null);
        txtNid.setText(null);
        txtEnderecamento.setText(null);
        txtArmazenamento.setText(null);
        txtQtdMin.setText(null);
        txtQtdMax.setText(null);
        txtSaude.setValue(0);
        txtInflamabilidade.setValue(0);
        txtReatividade.setValue(0);
        txtEspecifico.setText(null);
        chbCompraUnica.setSelected(false);
    }

    private void fechar() {
        Frames.fecharFrame(this);
    }

    public final void readUnidade() {
        cmbUnidade.removeAllItems();
        cmbUnidade.addItem("");
        categoryMapUnidade.clear();
        try {
            for (UnidadeMedida und : new UnidadeMedidaDAO().findEntities(UnidadeMedida.class)) {
                Long id = und.getId();
                String name = und.getUnidade();
                cmbUnidade.addItem(name);
                categoryMapUnidade.put(id, name);
            }
        } catch (Exception e) {
        }
    }

}
