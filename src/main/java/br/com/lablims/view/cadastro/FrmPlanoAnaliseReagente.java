/*
 * Copyright (C) 2019 rafael.lopes
 *
 * Este programa é um software livre: você pode redistribuí-lo e / ou modificar
 * sob os termos da GNU General Public License, conforme publicado pela
 * a Free Software Foundation, seja a versão 3 da Licença, quanto
 * qualquer versão posterior.
 *
 * Este programa é distribuído na esperança de que seja útil,
 * mas SEM QUALQUER GARANTIA; sem a garantia implícita de
 * COMERCIALIZAÇÃO OU APTIDÃO PARA UM PROPÓSITO PARTICULAR. Veja o
 * GNU General Public License para obter mais detalhes.
 *
 * Você deve ter recebido uma cópia da GNU General Public License
 *  juntamente com este programa. Caso contrário, veja <http://www.gnu.org/licenses/>.
 */
package br.com.lablims.view.cadastro;

import br.com.lablims.dao.MetodologiaDAO;
import br.com.lablims.dao.PlanoAnaliseDAO;
import br.com.lablims.dao.PlanoAnaliseReagenteDAO;
import br.com.lablims.dao.ReagenteDAO;
import br.com.lablims.dao.UnidadeMedidaDAO;
import br.com.lablims.model.Metodologia;
import br.com.lablims.model.PlanoAnalise;
import br.com.lablims.model.PlanoAnaliseReagente;
import br.com.lablims.model.Reagente;
import br.com.lablims.model.UnidadeMedida;
import br.com.lablims.util.AcessoSistema;
import br.com.lablims.util.ComboBox;
import br.com.lablims.util.DataHora;
import br.com.lablims.util.Senha;
import br.com.lablims.util.Frames;
import br.com.lablims.util.TableSorter;
import java.awt.Cursor;
import java.util.TreeMap;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author rafael.lopes
 */
public class FrmPlanoAnaliseReagente extends javax.swing.JDialog {

    private Long metodo_id;
    private Long planoAnalise_id;
    private final TreeMap<Long, String> categoryMapUnidade = new TreeMap<>();
    private String ACESSO = new AcessoSistema().getAcessoSistema(this);

    /**
     * Creates new form FrmMetodologiaAnaliseDados
     */
    public FrmPlanoAnaliseReagente(java.awt.Frame parent, boolean modal, Long mtd_id, Long pa_id) {
        super(parent, modal);
        metodo_id = mtd_id;
        planoAnalise_id = pa_id;
        initComponents();
        Frames.setUpFrame(this, "Vincular Reagente", false);
        readPlanoAnaliseReagenteReagente();
        btnAdicionar.setEnabled(AcessoSistema.criarDados(ACESSO));
        btnRemover.setEnabled(AcessoSistema.deletarDados(ACESSO));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        pnlMetodo = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMetodo = new javax.swing.JTextField();
        txtVersao = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtAnalise = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        btnAdicionar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblReagente = new javax.swing.JTable();
        pnlAuditTrail = new javax.swing.JPanel();
        pnlAuditoria = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAuditoria = new javax.swing.JTable();
        txtPesquisarAuditoria = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlMetodo.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel2.setText("Versão");

        jLabel5.setText("Método:");

        txtMetodo.setEditable(false);

        txtVersao.setEditable(false);

        jLabel6.setText("Análise:");

        txtAnalise.setEditable(false);

        javax.swing.GroupLayout pnlMetodoLayout = new javax.swing.GroupLayout(pnlMetodo);
        pnlMetodo.setLayout(pnlMetodoLayout);
        pnlMetodoLayout.setHorizontalGroup(
            pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMetodoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMetodoLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMetodo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtVersao, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMetodoLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAnalise)))
                .addContainerGap())
        );
        pnlMetodoLayout.setVerticalGroup(
            pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMetodoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(txtVersao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAnalise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("Salvar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_plus_24.png"))); // NOI18N
        btnAdicionar.setToolTipText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_minus_24.png"))); // NOI18N
        btnRemover.setToolTipText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        tblReagente.setAutoCreateRowSorter(true);
        tblReagente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Reagente_Id", "Código", "Reagente", "Quantidade", "Unid", "Observações"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblReagente.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblReagente.setRowHeight(24);
        tblReagente.setSurrendersFocusOnKeystroke(true);
        jScrollPane1.setViewportView(tblReagente);
        if (tblReagente.getColumnModel().getColumnCount() > 0) {
            tblReagente.getColumnModel().getColumn(0).setMinWidth(0);
            tblReagente.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblReagente.getColumnModel().getColumn(0).setMaxWidth(0);
            tblReagente.getColumnModel().getColumn(1).setMinWidth(90);
            tblReagente.getColumnModel().getColumn(1).setPreferredWidth(90);
            tblReagente.getColumnModel().getColumn(1).setMaxWidth(90);
            tblReagente.getColumnModel().getColumn(2).setMinWidth(80);
            tblReagente.getColumnModel().getColumn(2).setPreferredWidth(80);
            tblReagente.getColumnModel().getColumn(2).setMaxWidth(80);
            tblReagente.getColumnModel().getColumn(3).setPreferredWidth(400);
            tblReagente.getColumnModel().getColumn(4).setMinWidth(120);
            tblReagente.getColumnModel().getColumn(4).setPreferredWidth(120);
            tblReagente.getColumnModel().getColumn(4).setMaxWidth(120);
            tblReagente.getColumnModel().getColumn(5).setMinWidth(150);
            tblReagente.getColumnModel().getColumn(5).setPreferredWidth(150);
            tblReagente.getColumnModel().getColumn(5).setMaxWidth(150);
            tblReagente.getColumnModel().getColumn(6).setPreferredWidth(300);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 806, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Reagentes", jPanel1);

        pnlAuditTrail.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Auditoria"));

        tblAuditoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Plano_Analise_Coluna_Id", "Versão", "MOD", "Reagente_Id", "Reagente_Id_MOD", "Qtd", "Qtd_MOD", "Unidade", "Unidade_MOD", "Obs", "Obs_MOD", "Computador / AD_User ", "Usuario", "Data Modificação", "Motivo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAuditoria.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(tblAuditoria);
        if (tblAuditoria.getColumnModel().getColumnCount() > 0) {
            tblAuditoria.getColumnModel().getColumn(0).setMinWidth(160);
            tblAuditoria.getColumnModel().getColumn(0).setPreferredWidth(160);
            tblAuditoria.getColumnModel().getColumn(0).setMaxWidth(160);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 839, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
        );

        txtPesquisarAuditoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarAuditoriaKeyReleased(evt);
            }
        });

        jLabel7.setText("Pesquisar:");

        javax.swing.GroupLayout pnlAuditoriaLayout = new javax.swing.GroupLayout(pnlAuditoria);
        pnlAuditoria.setLayout(pnlAuditoriaLayout);
        pnlAuditoriaLayout.setHorizontalGroup(
            pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAuditoriaLayout.createSequentialGroup()
                .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAuditoriaLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarAuditoria))
                    .addGroup(pnlAuditoriaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlAuditoriaLayout.setVerticalGroup(
            pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAuditoriaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisarAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlAuditTrailLayout = new javax.swing.GroupLayout(pnlAuditTrail);
        pnlAuditTrail.setLayout(pnlAuditTrailLayout);
        pnlAuditTrailLayout.setHorizontalGroup(
            pnlAuditTrailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAuditoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlAuditTrailLayout.setVerticalGroup(
            pnlAuditTrailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAuditoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Audit Trail", pnlAuditTrail);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(pnlMetodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        adicionar();
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        if (tblReagente.getSelectedRow() != -1) {
            remover();
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        salvar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtPesquisarAuditoriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarAuditoriaKeyReleased
        TableSorter.TableSorter(tblAuditoria, txtPesquisarAuditoria);
    }//GEN-LAST:event_txtPesquisarAuditoriaKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPlanoAnaliseReagente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FrmPlanoAnaliseReagente dialog = new FrmPlanoAnaliseReagente(new javax.swing.JFrame(), true, null, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel pnlAuditTrail;
    private javax.swing.JPanel pnlAuditoria;
    private javax.swing.JPanel pnlMetodo;
    private javax.swing.JTable tblAuditoria;
    private javax.swing.JTable tblReagente;
    private javax.swing.JTextField txtAnalise;
    private javax.swing.JTextField txtMetodo;
    private javax.swing.JTextField txtPesquisarAuditoria;
    private javax.swing.JTextField txtVersao;
    // End of variables declaration//GEN-END:variables

    private void readPlanoAnaliseReagenteReagente() {
        DefaultTableModel model = (DefaultTableModel) tblReagente.getModel();
        PlanoAnaliseReagenteDAO paReagenteDAO = new PlanoAnaliseReagenteDAO();
        JTextField txtQtd = new JTextField();
        TableColumn colQtd = tblReagente.getColumnModel().getColumn(3);
        colQtd.setCellEditor(new DefaultCellEditor(txtQtd));
        JComboBox comboUnidade = new JComboBox();
        comboUnidade.addItem("");
        categoryMapUnidade.clear();
        try {
            for (UnidadeMedida und : new UnidadeMedidaDAO().findEntities(UnidadeMedida.class)) {
                Long id = und.getId();
                String name = und.getUnidade();
                comboUnidade.addItem(name);
                categoryMapUnidade.put(id, name);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        }
        TableColumn colUnidade = tblReagente.getColumnModel().getColumn(5);
        colUnidade.setCellEditor(new DefaultCellEditor(comboUnidade));
        model.setNumRows(0);
        try {
            Metodologia mtd = new MetodologiaDAO().findById(Metodologia.class, metodo_id);
            txtMetodo.setText(mtd.getMetodo().toUpperCase());
            txtVersao.setText(mtd.getVersao().toString());
            PlanoAnalise pa = new PlanoAnaliseDAO().findById(PlanoAnalise.class, planoAnalise_id);
            txtAnalise.setText(pa.getDescricao());
            for (PlanoAnaliseReagente paReagente : paReagenteDAO.readPlanoAnaliseReagente(planoAnalise_id)) {
                model.addRow(new Object[]{
                    paReagente.getId(),
                    paReagente.getReagente().getId(),
                    paReagente.getReagente().getCodReagente(),
                    paReagente.getReagente().getReagente(),
                    paReagente.getQtdUtilizada(),
                    paReagente.getUnidade() != null
                    ? paReagente.getUnidade().getUnidade() : "",
                    paReagente.getObs()
                });
            }
            carregarAuditoria();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        }
    }

    private void remover() {
        if (AcessoSistema.deletarDados(ACESSO)) {
            Senha senha = new Senha();
            DefaultTableModel model = (DefaultTableModel) tblReagente.getModel();
            PlanoAnaliseReagenteDAO paReagenteDAO = new PlanoAnaliseReagenteDAO();
            try {
                int dialogResult = JOptionPane.showConfirmDialog(null,
                        "Realmente deseja excluir essa Registro?", "Aviso", JOptionPane.YES_NO_OPTION);
                if (dialogResult == 0) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    if (senha.Salvar()) {
                        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                        paReagenteDAO.remover(PlanoAnaliseReagente.class,
                                (Long) tblReagente.getValueAt(tblReagente.getSelectedRow(), 0));
                        model.removeRow(tblReagente.getSelectedRow());
                        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    }
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao excuir o dado: " + e.getMessage(),
                        "Erro ao Excluir", JOptionPane.ERROR_MESSAGE);
            } finally {
                readPlanoAnaliseReagenteReagente();
            }
        }
    }

    public void adicionar() {
        if (AcessoSistema.criarDados(ACESSO)) {
            Senha senha = new Senha();
            PlanoAnaliseReagenteDAO paReagenteDAO = new PlanoAnaliseReagenteDAO();
            try {
                Reagente reg = new Reagente();
                new FrmProcurarReagente(null, true, reg).setVisible(true);
                if (reg.getId() != null) {
                    if (senha.Salvar()) {
                        PlanoAnaliseReagente paReagente = new PlanoAnaliseReagente();
                        paReagente.setReagente(new ReagenteDAO().findById(Reagente.class, reg.getId()));
                        paReagente.setPlanoAnalise(new PlanoAnaliseDAO().findById(PlanoAnalise.class, planoAnalise_id));
                        paReagente.setVersion(0);
                        paReagenteDAO.salvar(paReagente);
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
            } finally {
                readPlanoAnaliseReagenteReagente();
            }
        }
    }

    private void salvar() {
        int rows = tblReagente.getRowCount();
        Senha senha = new Senha();
        try {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            if (senha.Salvar()) {
                for (int row = 0; row < rows; row++) {
                    PlanoAnaliseReagenteDAO paReagenteDAO = new PlanoAnaliseReagenteDAO();
                    PlanoAnaliseReagente paReagente = paReagenteDAO.findById(PlanoAnaliseReagente.class,
                            (Long) tblReagente.getValueAt(row, 0));
                    Float qtd = (Float) tblReagente.getValueAt(row, 4) > 1000000000 ? 0f
                            : (Float) tblReagente.getValueAt(row, 4);
                    String obs = (String) tblReagente.getValueAt(row, 6);
                    String und = (String) tblReagente.getValueAt(row, 5);
                    paReagente.setQtdUtilizada(qtd != null ? qtd : 0);
                    paReagente.setUnidade(qtd == null ? null : new UnidadeMedidaDAO().findById(UnidadeMedida.class,
                            ComboBox.getKeyForValue(und, categoryMapUnidade)));
                    paReagente.setObs(obs != null ? obs : "");
                    paReagente.setVersion(paReagente.getVersion() + 1);
                    paReagenteDAO.salvar(paReagente);
                }

            }
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        } finally {
            readPlanoAnaliseReagenteReagente();
        }
    }

    private void carregarAuditoria() {
        DefaultTableModel model = (DefaultTableModel) tblAuditoria.getModel();
        PlanoAnaliseReagenteDAO paReagenteDAO = new PlanoAnaliseReagenteDAO();
        model.setNumRows(0);
        try {
            for (PlanoAnaliseReagente paReagente : paReagenteDAO.readAuditoria(planoAnalise_id)) {
                model.addRow(new Object[]{
                    paReagente.getId(),
                    paReagente.getVersion(),
                    paReagente.getAudit().getMOD() == 0 ? "Criado"
                    : (paReagente.getAudit().getMOD() == 1 ? "Modificado" : "Removido"),
                    paReagente.getReagente().getId(),
                    paReagente.getReagente_MOD() == false ? "Não Alterado" : "Alterado",
                    paReagente.getQtdUtilizada(),
                    paReagente.getQtdUtilizada_MOD() == false ? "Não Alterado" : "Alterado",
                    paReagente.getUnidade().getId(),
                    paReagente.getUnidade_MOD() == false ? "Não Alterado" : "Alterado",
                    paReagente.getObs(),
                    paReagente.getObs_MOD() == false ? "Não Alterado" : "Alterado",
                    paReagente.getAudit().getComputador() + " / " + paReagente.getAudit().getUserComputador(),
                    paReagente.getAudit().getUltimaModificacaoPor(),
                    DataHora.getStringDateTime(paReagente.getAudit().getUltimaModificacao()),
                    paReagente.getAudit().getMotivo()
                });
            }
        } catch (Exception e) {
        }
    }
}
