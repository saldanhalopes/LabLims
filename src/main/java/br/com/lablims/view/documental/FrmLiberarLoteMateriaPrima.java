/*
 * Copyright (C) 2019 rafael.lopes
 *
 * Este programa é um software livre: você pode redistribuí-lo e / ou modificar
 * sob os termos da GNU General Public License, conforme publicado pela
 * a Free Software Foundation, seja a versão 3 da Licença, quanto
 * qualquer versão posterior.
 *
 * Este programa é distribuído na esperança de que seja útil,
 * mas SEM QUALQUER GARANTIA; sem a garantia implícita de
 * COMERCIALIZAÇÃO OU APTIDÃO PARA UM PROPÓSITO PARTICULAR. Veja o
 * GNU General Public License para obter mais detalhes.
 *
 * Você deve ter recebido uma cópia da GNU General Public License
 *  juntamente com este programa. Caso contrário, veja <http://www.gnu.org/licenses/>.
 */
package br.com.lablims.view.documental;

//import br.com.lablims.dao.AnaliseStatusDAO;
//import br.com.lablims.dao.LoteMateriaPrimaDAO;
//import br.com.lablims.dao.LoteMateriaPrimaInfoDAO;
//import br.com.lablims.dao.LoteMateriaPrimaStatusDAO;
//import br.com.lablims.model.LoteMateriaPrima;
//import br.com.lablims.model.LoteMateriaPrimaInfo;
//import br.com.lablims.model.LoteMateriaPrimaStatus;
//import br.com.lablims.util.AcessoSistema;
//import br.com.lablims.util.DataHora;
//import br.com.lablims.util.DateCellRenderer;
//import br.com.lablims.util.Frames;
//import br.com.lablims.util.Senha;
//import br.com.lablims.util.TableSorter;
import java.awt.Cursor;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafael.lopes
 */
public class FrmLiberarLoteMateriaPrima extends javax.swing.JFrame {

    //private String ACESSO = new AcessoSistema().getAcessoSistema(this);

    /**
     * Creates new form FrmMetodologiaAnalise
     */
    public FrmLiberarLoteMateriaPrima() {
        initComponents();
//        Frames.setUpFrame(this, "Liberar Lotes de Matéria-Prima", false);
//        readLoteMateriaPrima();
//        btnLiberar.setEnabled(AcessoSistema.editarDados(ACESSO));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMetodologia = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLoteMateriaPrima = new javax.swing.JTable();
        txtPesquisarMetodologia = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        btnLiberar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnDevolver = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnAtualizar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        cmbLimitPorPagina = new javax.swing.JComboBox<String>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Lotes"));

        tblLoteMateriaPrima.setAutoCreateRowSorter(true);
        tblLoteMateriaPrima.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Liberar", "Lote_Id", "Lote", "Cod_Material", "Material", "Data Necessidade", "Status SAP", "Prev. Liberação", "Observações"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLoteMateriaPrima.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblLoteMateriaPrima.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tblLoteMateriaPrima.setSurrendersFocusOnKeystroke(true);
        tblLoteMateriaPrima.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblLoteMateriaPrima);
        if (tblLoteMateriaPrima.getColumnModel().getColumnCount() > 0) {
            tblLoteMateriaPrima.getColumnModel().getColumn(0).setMinWidth(50);
            tblLoteMateriaPrima.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblLoteMateriaPrima.getColumnModel().getColumn(0).setMaxWidth(50);
            tblLoteMateriaPrima.getColumnModel().getColumn(1).setMinWidth(80);
            tblLoteMateriaPrima.getColumnModel().getColumn(1).setPreferredWidth(80);
            tblLoteMateriaPrima.getColumnModel().getColumn(1).setMaxWidth(80);
            tblLoteMateriaPrima.getColumnModel().getColumn(2).setMinWidth(100);
            tblLoteMateriaPrima.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblLoteMateriaPrima.getColumnModel().getColumn(2).setMaxWidth(100);
            tblLoteMateriaPrima.getColumnModel().getColumn(3).setMinWidth(100);
            tblLoteMateriaPrima.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblLoteMateriaPrima.getColumnModel().getColumn(3).setMaxWidth(100);
            tblLoteMateriaPrima.getColumnModel().getColumn(4).setMinWidth(400);
            tblLoteMateriaPrima.getColumnModel().getColumn(4).setPreferredWidth(300);
            tblLoteMateriaPrima.getColumnModel().getColumn(5).setMinWidth(150);
            tblLoteMateriaPrima.getColumnModel().getColumn(5).setPreferredWidth(150);
            tblLoteMateriaPrima.getColumnModel().getColumn(5).setMaxWidth(150);
            tblLoteMateriaPrima.getColumnModel().getColumn(6).setMinWidth(300);
            tblLoteMateriaPrima.getColumnModel().getColumn(6).setPreferredWidth(300);
            tblLoteMateriaPrima.getColumnModel().getColumn(6).setMaxWidth(300);
            tblLoteMateriaPrima.getColumnModel().getColumn(7).setMinWidth(150);
            tblLoteMateriaPrima.getColumnModel().getColumn(7).setPreferredWidth(150);
            tblLoteMateriaPrima.getColumnModel().getColumn(7).setMaxWidth(150);
            tblLoteMateriaPrima.getColumnModel().getColumn(8).setPreferredWidth(500);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 975, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
        );

        txtPesquisarMetodologia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarMetodologiaKeyReleased(evt);
            }
        });

        jLabel4.setText("Pesquisar:");

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnLiberar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_finish_32.png"))); // NOI18N
        btnLiberar.setText("Liberar");
        btnLiberar.setFocusable(false);
        btnLiberar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLiberar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLiberar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLiberarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnLiberar);
        jToolBar1.add(jSeparator1);

        btnDevolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_devolver_32.png"))); // NOI18N
        btnDevolver.setText("Devolver");
        btnDevolver.setFocusable(false);
        btnDevolver.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDevolver.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolverActionPerformed(evt);
            }
        });
        jToolBar1.add(btnDevolver);
        jToolBar1.add(jSeparator2);

        btnAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_atualizar.png"))); // NOI18N
        btnAtualizar.setText("Atualizar");
        btnAtualizar.setFocusable(false);
        btnAtualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAtualizar.setPreferredSize(new java.awt.Dimension(60, 60));
        btnAtualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAtualizar);

        jLabel11.setText("Visualizar:");

        cmbLimitPorPagina.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1000", "10000", "100000", "1000000", "10000000" }));
        cmbLimitPorPagina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLimitPorPaginaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMetodologiaLayout = new javax.swing.GroupLayout(pnlMetodologia);
        pnlMetodologia.setLayout(pnlMetodologiaLayout);
        pnlMetodologiaLayout.setHorizontalGroup(
            pnlMetodologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMetodologiaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMetodologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlMetodologiaLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarMetodologia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbLimitPorPagina, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)))
                .addContainerGap())
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlMetodologiaLayout.setVerticalGroup(
            pnlMetodologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMetodologiaLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(pnlMetodologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMetodologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbLimitPorPagina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11))
                    .addGroup(pnlMetodologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPesquisarMetodologia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addGap(12, 12, 12)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMetodologia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMetodologia, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLiberarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLiberarActionPerformed
        if (tblLoteMateriaPrima.getSelectedRow() != -1) {
            liberar();
        }
    }//GEN-LAST:event_btnLiberarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        readLoteMateriaPrima();
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void cmbLimitPorPaginaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLimitPorPaginaActionPerformed
        readLoteMateriaPrima();
    }//GEN-LAST:event_cmbLimitPorPaginaActionPerformed

    private void txtPesquisarMetodologiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarMetodologiaKeyReleased
        //TableSorter.TableSorter(tblLoteMateriaPrima, txtPesquisarMetodologia);
    }//GEN-LAST:event_txtPesquisarMetodologiaKeyReleased

    private void btnDevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolverActionPerformed
        devolver();
    }//GEN-LAST:event_btnDevolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmLiberarLoteMateriaPrima.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FrmLiberarLoteMateriaPrima().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    public static javax.swing.JButton btnDevolver;
    public static javax.swing.JButton btnLiberar;
    private javax.swing.JComboBox<String> cmbLimitPorPagina;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel pnlMetodologia;
    private javax.swing.JTable tblLoteMateriaPrima;
    private javax.swing.JTextField txtPesquisarMetodologia;
    // End of variables declaration//GEN-END:variables

    public final void readLoteMateriaPrima() {
//        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
//        DefaultTableModel model = (DefaultTableModel) tblLoteMateriaPrima.getModel();
//        LoteMateriaPrimaDAO loteDAO = new LoteMateriaPrimaDAO();
//        model.setNumRows(0);
//        int[] rows = {5, 9, 11};
//        TableSorter.RowSorter(tblLoteMateriaPrima, rows, null);
//        DateCellRenderer r = new DateCellRenderer();
//        tblLoteMateriaPrima.setDefaultRenderer(Object.class, r);
//        Map<String, String> where = new HashMap<>();
//        where.put("dataDoc", "notNull");
//        Integer max = Integer.parseInt(cmbLimitPorPagina.getSelectedItem().toString());
//        try {
//            for (LoteMateriaPrima lote : loteDAO.findListLoteMateriaPrima(max, where)) {
//                model.addRow(new Object[]{
//                    false,
//                    lote.getId(),
//                    lote.getLote(),
//                    lote.getMaterial().getCodMaterial(),
//                    lote.getMaterial().getMaterial(),
//                    lote.getLoteInfo().getDataNecessidade() == null ? "X"
//                    : lote.getLoteInfo().getDataNecessidade(),
//                    DataHora.getStringDateTime(lote.getLoteInfo().getDataStatus())
//                    + " - " + lote.getLoteInfo().getStatus(),
//                    lote.getLoteInfo().getPrevLiberacao(),
//                    lote.getLoteInfo().getObsCq()
//                });
//            }
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
//        }
//        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }

    private void liberar() {
//        if (AcessoSistema.editarDados(ACESSO)) {
//            int dialogResult = JOptionPane.showConfirmDialog(null, "Deseja Liberar esses Lotes",
//                    "Aviso", JOptionPane.YES_NO_OPTION);
//            if (dialogResult == 0) {
//                int rows = tblLoteMateriaPrima.getRowCount();
//                Senha senha = new Senha();
//                try {
//                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
//                    if (senha.Salvar()) {
//                        LoteMateriaPrimaDAO loteDAO = new LoteMateriaPrimaDAO();
//                        LoteMateriaPrimaInfoDAO loteInfoDAO = new LoteMateriaPrimaInfoDAO();
//                        for (int row = 0; row < rows; row++) {
//                            if ((Boolean) tblLoteMateriaPrima.getValueAt(row, 0)) {
//                                LoteMateriaPrima lote = loteDAO.findById(LoteMateriaPrima.class,
//                                        (Long) tblLoteMateriaPrima.getValueAt(row, 1));
//                                lote.setVersion(lote.getVersion() + 1);
//                                loteDAO.salvar(lote);
//                                LoteMateriaPrimaInfo loteInfo = new LoteMateriaPrimaInfoDAO()
//                                        .findById(LoteMateriaPrimaInfo.class, lote.getId());
//                                loteInfo.setStatus("Liberado");
//                                Date date = new Date();
//                                loteInfo.setDataStatus(date);
//                                loteInfo.setDataLiberado(date);
//                                loteInfo.setVersion(loteInfo.getVersion() + 1);
//                                loteInfoDAO.salvar(loteInfo);
//                            }
//                        }
//                        readLoteMateriaPrima();
//                    }
//                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
//                } catch (Exception e) {
//                    JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
//                }
//            }
//        }
    }

    private void devolver() {
//        if (AcessoSistema.editarDados(ACESSO)) {
//            int dialogResult = JOptionPane.showConfirmDialog(null, "Deseja Devolver esses Lotes para o Laboratório?",
//                    "Aviso", JOptionPane.YES_NO_OPTION);
//            if (dialogResult == 0) {
//                int rows = tblLoteMateriaPrima.getRowCount();
//                Senha senha = new Senha();
//                try {
//                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
//                    if (senha.Salvar()) {
//                        LoteMateriaPrimaInfoDAO loteInfoDAO = new LoteMateriaPrimaInfoDAO();
//                        LoteMateriaPrimaStatusDAO loteStatusDAO = new LoteMateriaPrimaStatusDAO();
//                        for (int row = 0; row < rows; row++) {
//                            if ((Boolean) tblLoteMateriaPrima.getValueAt(row, 0)) {
//                                //Atualizar Lote Info
//                                LoteMateriaPrimaInfo loteInfo = new LoteMateriaPrimaInfoDAO()
//                                        .findById(LoteMateriaPrimaInfo.class, (Long) tblLoteMateriaPrima.getValueAt(row, 1));
//                                loteInfo.setDataDoc(null);
//                                loteInfo.setVersion(loteInfo.getVersion() + 1);
//                                loteInfoDAO.salvar(loteInfo);
//                            }
//                        }
//                        readLoteMateriaPrima();
//                    }
//                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
//                } catch (Exception e) {
//                    JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
//                }
//            }
//        }
    }

}
