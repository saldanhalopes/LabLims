/*
 * Copyright (C) 2019 rafael.lopes
 *
 * Este programa é um software livre: você pode redistribuí-lo e / ou modificar
 * sob os termos da GNU General Public License, conforme publicado pela
 * a Free Software Foundation, seja a versão 3 da Licença, quanto
 * qualquer versão posterior.
 *
 * Este programa é distribuído na esperança de que seja útil,
 * mas SEM QUALQUER GARANTIA; sem a garantia implícita de
 * COMERCIALIZAÇÃO OU APTIDÃO PARA UM PROPÓSITO PARTICULAR. Veja o
 * GNU General Public License para obter mais detalhes.
 *
 * Você deve ter recebido uma cópia da GNU General Public License
 *  juntamente com este programa. Caso contrário, veja <http://www.gnu.org/licenses/>.
 */
package br.com.lablims.view.pa;

import br.com.lablims.view.mp.*;
import br.com.lablims.dao.LoteMateriaPrimaDAO;
import br.com.lablims.model.LoteMateriaPrima;
import br.com.lablims.util.AcessoSistema;
import br.com.lablims.util.Senha;
import br.com.lablims.util.DataHora;
import br.com.lablims.util.DateCellRenderer;
import br.com.lablims.util.Frames;
import br.com.lablims.util.TableSorter;
import java.awt.Cursor;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafael.lopes
 */
public class FrmLoteProduto extends javax.swing.JFrame {

    private final String ACESSO = new AcessoSistema().getAcessoSistema(this);

    /**
     * Creates new form FrmLoteProduto
     */
    public FrmLoteProduto() {
        initComponents();
        btnNovo.setEnabled(AcessoSistema.criarDados(ACESSO));
        btnEditar.setEnabled(AcessoSistema.editarDados(ACESSO));
        btnExcluir.setEnabled(AcessoSistema.deletarDados(ACESSO));
        Frames.setUpFrame(this, "Lote de Matéria-Prima", false);
        readLoteMateriaPrima();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlMetodologia = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLoteMateriaPrima = new javax.swing.JTable();
        txtPesquisarMetodologia = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        btnNovo = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        btnEditar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnAtualizar = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        btnExcluir = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jLabel11 = new javax.swing.JLabel();
        cmbLimitPorPagina = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        cmbStatus = new javax.swing.JComboBox<>();
        pnlAuditTrail = new javax.swing.JPanel();
        pnlAuditoriaGrupos = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAuditoria = new javax.swing.JTable();
        txtPesquisarAuditoria = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cmbLimitPorPaginaAuditoria = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Lotes"));

        tblLoteMateriaPrima.setAutoCreateRowSorter(true);
        tblLoteMateriaPrima.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Lote_Id", "Cod_Produto", "Complemento", "Lote", "Produto", "Data Entrada", "Quarentena", "Prev. Liberação", "Observações"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLoteMateriaPrima.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblLoteMateriaPrima.setSurrendersFocusOnKeystroke(true);
        tblLoteMateriaPrima.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLoteMateriaPrimaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblLoteMateriaPrima);
        if (tblLoteMateriaPrima.getColumnModel().getColumnCount() > 0) {
            tblLoteMateriaPrima.getColumnModel().getColumn(0).setMinWidth(50);
            tblLoteMateriaPrima.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblLoteMateriaPrima.getColumnModel().getColumn(0).setMaxWidth(50);
            tblLoteMateriaPrima.getColumnModel().getColumn(1).setMinWidth(80);
            tblLoteMateriaPrima.getColumnModel().getColumn(1).setPreferredWidth(80);
            tblLoteMateriaPrima.getColumnModel().getColumn(1).setMaxWidth(80);
            tblLoteMateriaPrima.getColumnModel().getColumn(2).setMinWidth(100);
            tblLoteMateriaPrima.getColumnModel().getColumn(2).setPreferredWidth(100);
            tblLoteMateriaPrima.getColumnModel().getColumn(2).setMaxWidth(100);
            tblLoteMateriaPrima.getColumnModel().getColumn(3).setMinWidth(80);
            tblLoteMateriaPrima.getColumnModel().getColumn(3).setPreferredWidth(80);
            tblLoteMateriaPrima.getColumnModel().getColumn(3).setMaxWidth(80);
            tblLoteMateriaPrima.getColumnModel().getColumn(4).setMinWidth(100);
            tblLoteMateriaPrima.getColumnModel().getColumn(4).setPreferredWidth(100);
            tblLoteMateriaPrima.getColumnModel().getColumn(4).setMaxWidth(100);
            tblLoteMateriaPrima.getColumnModel().getColumn(5).setMinWidth(400);
            tblLoteMateriaPrima.getColumnModel().getColumn(5).setPreferredWidth(300);
            tblLoteMateriaPrima.getColumnModel().getColumn(6).setMinWidth(150);
            tblLoteMateriaPrima.getColumnModel().getColumn(6).setPreferredWidth(150);
            tblLoteMateriaPrima.getColumnModel().getColumn(6).setMaxWidth(150);
            tblLoteMateriaPrima.getColumnModel().getColumn(7).setMinWidth(100);
            tblLoteMateriaPrima.getColumnModel().getColumn(7).setPreferredWidth(100);
            tblLoteMateriaPrima.getColumnModel().getColumn(7).setMaxWidth(100);
            tblLoteMateriaPrima.getColumnModel().getColumn(8).setMinWidth(150);
            tblLoteMateriaPrima.getColumnModel().getColumn(8).setPreferredWidth(150);
            tblLoteMateriaPrima.getColumnModel().getColumn(8).setMaxWidth(150);
            tblLoteMateriaPrima.getColumnModel().getColumn(9).setPreferredWidth(500);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 963, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
        );

        txtPesquisarMetodologia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarMetodologiaKeyReleased(evt);
            }
        });

        jLabel4.setText("Pesquisar:");

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_add.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.setFocusable(false);
        btnNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNovo);
        jToolBar1.add(jSeparator8);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_edit.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setFocusable(false);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditar);
        jToolBar1.add(jSeparator1);

        btnAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_atualizar.png"))); // NOI18N
        btnAtualizar.setText("Atualizar");
        btnAtualizar.setFocusable(false);
        btnAtualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAtualizar.setPreferredSize(new java.awt.Dimension(60, 60));
        btnAtualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnAtualizar);
        jToolBar1.add(jSeparator6);

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/icon_close.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setFocusable(false);
        btnExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExcluir.setPreferredSize(new java.awt.Dimension(60, 60));
        btnExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnExcluir);
        jToolBar1.add(jSeparator3);

        jLabel11.setText("Visualizar:");

        cmbLimitPorPagina.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1000", "10000", "100000", "1000000", "10000000" }));
        cmbLimitPorPagina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLimitPorPaginaActionPerformed(evt);
            }
        });

        jLabel13.setText("Status:");

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Analisando", "Amostrado", "Controle de Qualidade", "Entrada de Mercadoria", "Liberado" }));
        cmbStatus.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbStatusItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnlMetodologiaLayout = new javax.swing.GroupLayout(pnlMetodologia);
        pnlMetodologia.setLayout(pnlMetodologiaLayout);
        pnlMetodologiaLayout.setHorizontalGroup(
            pnlMetodologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMetodologiaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMetodologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlMetodologiaLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarMetodologia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbLimitPorPagina, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)))
                .addContainerGap())
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlMetodologiaLayout.setVerticalGroup(
            pnlMetodologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMetodologiaLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(pnlMetodologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMetodologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbLimitPorPagina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)
                        .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13))
                    .addGroup(pnlMetodologiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPesquisarMetodologia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addGap(12, 12, 12)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Lotes Produtos", pnlMetodologia);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Auditoria"));

        tblAuditoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lote_ID", "Versão", "MOD", "Lote", "Material_ID", "Material_MOD", "Metodo1_ID", "Metodo1_MOD", "Metodo2_ID", "Metodo2_MOD", "Metodo3_ID", "Metodo3_MOD", "Computador / AD_User ", "Usuario", "Data Modificação", "Motivo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblAuditoria);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 953, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
        );

        txtPesquisarAuditoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarAuditoriaKeyReleased(evt);
            }
        });

        jLabel5.setText("Pesquisar:");

        jLabel12.setText("Visualizar:");

        cmbLimitPorPaginaAuditoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1000", "10000", "100000", "1000000", "10000000" }));
        cmbLimitPorPaginaAuditoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLimitPorPaginaAuditoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAuditoriaGruposLayout = new javax.swing.GroupLayout(pnlAuditoriaGrupos);
        pnlAuditoriaGrupos.setLayout(pnlAuditoriaGruposLayout);
        pnlAuditoriaGruposLayout.setHorizontalGroup(
            pnlAuditoriaGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAuditoriaGruposLayout.createSequentialGroup()
                .addGroup(pnlAuditoriaGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlAuditoriaGruposLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarAuditoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbLimitPorPaginaAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlAuditoriaGruposLayout.setVerticalGroup(
            pnlAuditoriaGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAuditoriaGruposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAuditoriaGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAuditoriaGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbLimitPorPaginaAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12))
                    .addGroup(pnlAuditoriaGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPesquisarAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlAuditTrailLayout = new javax.swing.GroupLayout(pnlAuditTrail);
        pnlAuditTrail.setLayout(pnlAuditTrailLayout);
        pnlAuditTrailLayout.setHorizontalGroup(
            pnlAuditTrailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAuditTrailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlAuditoriaGrupos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlAuditTrailLayout.setVerticalGroup(
            pnlAuditTrailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAuditTrailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlAuditoriaGrupos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        jTabbedPane1.addTab("Audit Trail", pnlAuditTrail);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblLoteMateriaPrimaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLoteMateriaPrimaMouseClicked
        if (evt.getClickCount() == 2) {
            atualizar();
        }
    }//GEN-LAST:event_tblLoteMateriaPrimaMouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (tblLoteMateriaPrima.getSelectedRow() != -1) {
            atualizar();
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        readLoteMateriaPrima();
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        abrir();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        if (tblLoteMateriaPrima.getSelectedRow() != -1) {
            deletar();
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void cmbLimitPorPaginaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLimitPorPaginaActionPerformed
        readLoteMateriaPrima();
    }//GEN-LAST:event_cmbLimitPorPaginaActionPerformed

    private void cmbStatusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbStatusItemStateChanged
        readLoteMateriaPrima();
    }//GEN-LAST:event_cmbStatusItemStateChanged

    private void txtPesquisarMetodologiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarMetodologiaKeyReleased
        TableSorter.TableSorter(tblLoteMateriaPrima, txtPesquisarMetodologia);
    }//GEN-LAST:event_txtPesquisarMetodologiaKeyReleased

    private void txtPesquisarAuditoriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarAuditoriaKeyReleased
        TableSorter.TableSorter(tblAuditoria, txtPesquisarAuditoria);
    }//GEN-LAST:event_txtPesquisarAuditoriaKeyReleased

    private void cmbLimitPorPaginaAuditoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLimitPorPaginaAuditoriaActionPerformed
        carregarAuditoria();
    }//GEN-LAST:event_cmbLimitPorPaginaAuditoriaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmLoteProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FrmLoteProduto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    public static javax.swing.JButton btnEditar;
    public static javax.swing.JButton btnExcluir;
    public static javax.swing.JButton btnNovo;
    private javax.swing.JComboBox<String> cmbLimitPorPagina;
    private javax.swing.JComboBox<String> cmbLimitPorPaginaAuditoria;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel pnlAuditTrail;
    private javax.swing.JPanel pnlAuditoriaGrupos;
    private javax.swing.JPanel pnlMetodologia;
    private javax.swing.JTable tblAuditoria;
    private javax.swing.JTable tblLoteMateriaPrima;
    private javax.swing.JTextField txtPesquisarAuditoria;
    private javax.swing.JTextField txtPesquisarMetodologia;
    // End of variables declaration//GEN-END:variables

    public final void readLoteMateriaPrima() {
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        DefaultTableModel model = (DefaultTableModel) tblLoteMateriaPrima.getModel();
        LoteMateriaPrimaDAO loteDAO = new LoteMateriaPrimaDAO();
        model.setNumRows(0);
        int[] rows = {5, 9, 11};
        TableSorter.RowSorter(tblLoteMateriaPrima, rows, null);
        DateCellRenderer r = new DateCellRenderer();
        tblLoteMateriaPrima.setDefaultRenderer(Object.class, r);
        Map<String, String> where = new HashMap<>();
        where.put("status", cmbStatus.getSelectedItem().toString());
        Integer max = Integer.parseInt(cmbLimitPorPagina.getSelectedItem().toString());
        try {
            for (LoteMateriaPrima lote : loteDAO.findListLoteMateriaPrima(max, where)) {
                model.addRow(new Object[]{
                    lote.getMetodologia() != null,
                    lote.getId(),
                    lote.getLote(),
                    lote.getMaterial().getCodMaterial(),
                    lote.getMaterial().getMaterial(),
                    lote.getLoteInfo().getDataNecessidade() == null ? "X"
                    : lote.getLoteInfo().getDataNecessidade(),
                    lote.getLoteInfo().getQtdEstoque(),
                    DataHora.getStringDateTime(lote.getLoteInfo().getDataStatus())
                    + " - " + lote.getLoteInfo().getStatus(),
                    lote.getLoteInfo().getPrevLiberacao(),
                    lote.getLoteInfo().getDataVenciamento(),
                    lote.getLoteInfo().getQtdVolumes(),
                    lote.getLoteInfo().getObsCq(),
                    lote.getLoteInfo().getVersion()
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        } finally {
            carregarAuditoria();
        }
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }

    private void abrir() {
        try {
            new FrmLoteMateriaPrimaConfig(null, true).setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        } finally {
            readLoteMateriaPrima();
        }
    }

    private void deletar() {
        if (AcessoSistema.deletarDados(ACESSO)) {
            LoteMateriaPrimaDAO loteDAO = new LoteMateriaPrimaDAO();
            Senha senha = new Senha();
            try {
                int dialogResult = JOptionPane.showConfirmDialog(null, "Realmente deseja Excluir esse registro?",
                        "Aviso", JOptionPane.YES_NO_OPTION);
                if (dialogResult == 0) {
                    if (senha.Salvar()) {
                        LoteMateriaPrima lote = loteDAO.findById(LoteMateriaPrima.class,
                                (Long) tblLoteMateriaPrima.getValueAt(tblLoteMateriaPrima.getSelectedRow(), 1));
                        loteDAO.remover(LoteMateriaPrima.class, lote.getId());
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao excuir o dado: " + e.getMessage(), "Erro ao Excluir", JOptionPane.ERROR_MESSAGE);
            } finally {
                readLoteMateriaPrima();
            }
        }
    }

    private void atualizar() {
        if (AcessoSistema.editarDados(ACESSO)) {
            LoteMateriaPrimaDAO loteDAO = new LoteMateriaPrimaDAO();
            try {
                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                LoteMateriaPrima lote = loteDAO.findById(LoteMateriaPrima.class,
                        (Long) tblLoteMateriaPrima.getValueAt(tblLoteMateriaPrima.getSelectedRow(), 1));
                new FrmLoteMateriaPrimaConfig(null, true, lote).setVisible(true);
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
            } finally {
                readLoteMateriaPrima();
            }
        }
    }

    private void carregarAuditoria() {
        DefaultTableModel model = (DefaultTableModel) tblAuditoria.getModel();
        LoteMateriaPrimaDAO loteDAO = new LoteMateriaPrimaDAO();
        Integer max = Integer.parseInt(cmbLimitPorPaginaAuditoria.getSelectedItem().toString());
        model.setNumRows(0);
        try {
            for (LoteMateriaPrima lote : loteDAO.readAuditoria(max)) {
                model.addRow(new Object[]{
                    lote.getId(),
                    lote.getVersion(),
                    lote.getAudit().getMOD() == 0 ? "Criado"
                    : (lote.getAudit().getMOD() == 1 ? "Modificado" : "Removido"),
                    lote.getLote(),
                    lote.getLote_MOD() == false ? "Não Alterado" : "Alterado",
                    lote.getMaterial().getId(),
                    lote.getMaterial_MOD() == false ? "Não Alterado" : "Alterado",
                    lote.getMetodologia().getId(),
                    lote.getMetodologia_MOD() == false ? "Não Alterado" : "Alterado",
                    lote.getMetodologia2().getId(),
                    lote.getMetodologia2_MOD() == false ? "Não Alterado" : "Alterado",
                    lote.getMetodologia3().getId(),
                    lote.getMetodologia3_MOD() == false ? "Não Alterado" : "Alterado",
                    lote.getAudit().getComputador() + " / "
                    + lote.getAudit().getUserComputador(),
                    lote.getAudit().getUltimaModificacaoPor(),
                    DataHora.getStringDateTime(lote.getAudit().getUltimaModificacao()),
                    lote.getAudit().getMotivo()
                });
            }
        } catch (Exception e) {
        }
    }

}
