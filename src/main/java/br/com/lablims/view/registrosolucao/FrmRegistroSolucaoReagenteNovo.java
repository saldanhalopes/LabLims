package br.com.lablims.view.registrosolucao;

import br.com.lablims.dao.RegistroSolucaoReagenteDAO;
import br.com.lablims.dao.UsuarioDAO;
import javax.swing.JOptionPane;
import br.com.lablims.model.RegistroSolucaoReagente;
import br.com.lablims.model.Usuario;
import br.com.lablims.util.ComboBox;
import br.com.lablims.util.Senha;
import br.com.lablims.util.Frames;
import java.awt.Cursor;
import java.awt.HeadlessException;
import java.util.Date;
import java.util.TreeMap;
import javax.persistence.EntityNotFoundException;
import javax.persistence.NoResultException;

/**
 *
 * @author rafael.lopes
 */
public class FrmRegistroSolucaoReagenteNovo extends javax.swing.JDialog {

    private RegistroSolucaoReagente solucaoReagente;
    private boolean novo = false;
    private TreeMap<String, String> categoryMapTipo = new TreeMap<>();
    final String zeros = "0000";

    /**
     * Creates new form FrmConfigAcesso
     *
     * @param parent
     * @param modal
     */
    public FrmRegistroSolucaoReagenteNovo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Frames.setUpFrame(this, "Dados da Solução Reagente", true);
        readTipo();
        readArmazenamento();
        novo = true;
    }

    public FrmRegistroSolucaoReagenteNovo(java.awt.Frame parent, boolean modal, RegistroSolucaoReagente solReagente) {
        super(parent, modal);
        initComponents();
        Frames.setUpFrame(this, "Dados da Solução Reagente", true);
        readTipo();
        readArmazenamento();
        solucaoReagente = solReagente;
        carregarDados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalvarMetodo = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        pnlMetodo = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtReferencia = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObs = new javax.swing.JTextArea();
        jLabel23 = new javax.swing.JLabel();
        cmbTipo = new javax.swing.JComboBox();
        jLabel26 = new javax.swing.JLabel();
        cmbArmazenamento = new javax.swing.JComboBox();
        jLabel42 = new javax.swing.JLabel();
        txtValidade = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnSalvarMetodo.setText("Ok");
        btnSalvarMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarMetodoActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        pnlMetodo.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel5.setText("Descrição:");

        jLabel9.setText("Referência:");

        jLabel14.setText("Observação:");

        txtObs.setColumns(20);
        txtObs.setRows(5);
        jScrollPane1.setViewportView(txtObs);

        jLabel23.setText("Tipo:");

        cmbTipo.setEditable(true);

        jLabel26.setText("Armazenamento:");

        cmbArmazenamento.setEditable(true);

        jLabel42.setText("Validade:");

        javax.swing.GroupLayout pnlMetodoLayout = new javax.swing.GroupLayout(pnlMetodo);
        pnlMetodo.setLayout(pnlMetodoLayout);
        pnlMetodoLayout.setHorizontalGroup(
            pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMetodoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(pnlMetodoLayout.createSequentialGroup()
                        .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMetodoLayout.createSequentialGroup()
                                .addComponent(txtDescricao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlMetodoLayout.createSequentialGroup()
                                .addComponent(cmbTipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel42)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtValidade, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel26)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbArmazenamento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtReferencia, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnlMetodoLayout.setVerticalGroup(
            pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMetodoLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMetodoLayout.createSequentialGroup()
                        .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26)
                            .addComponent(cmbArmazenamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtValidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlMetodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMetodoLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 592, Short.MAX_VALUE)
                        .addComponent(btnSalvarMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlMetodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarMetodo)
                    .addComponent(btnCancelar))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarMetodoActionPerformed
        Senha senha = new Senha();
        try {
            if (txtDescricao.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Descrição inválida");
                txtDescricao.requestFocus();
            } else if (cmbTipo.getSelectedItem().toString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Tipo Inválido!");
                cmbTipo.requestFocus();
            } else if (txtReferencia.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Referência inválida");
                txtReferencia.requestFocus();
            } else if (cmbArmazenamento.getSelectedItem().toString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Armazenamento Inválido!");
                cmbArmazenamento.requestFocus();
            } else if (txtValidade.isValid()) {
                JOptionPane.showMessageDialog(null, "Validade inválida");
                txtValidade.requestFocus();
            } else {
                if (novo) {
                    if (senha.Salvar()) {
                        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                        criar();
                        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                        dispose();
                    }
                } else {
                    if (senha.Salvar()) {
                        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                        atulizar();
                        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                        dispose();
                    }
                }
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        }
    }//GEN-LAST:event_btnSalvarMetodoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        fechar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRegistroSolucaoReagenteNovo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FrmRegistroSolucaoReagenteNovo dialog = new FrmRegistroSolucaoReagenteNovo(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    public static javax.swing.JButton btnSalvarMetodo;
    private javax.swing.JComboBox cmbArmazenamento;
    private javax.swing.JComboBox cmbTipo;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlMetodo;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextArea txtObs;
    private javax.swing.JTextField txtReferencia;
    public static com.toedter.calendar.JDateChooser txtValidade;
    // End of variables declaration//GEN-END:variables

    private void criar() {
        RegistroSolucaoReagente solReagente = new RegistroSolucaoReagente();
        RegistroSolucaoReagenteDAO regsolReagenteDAO = new RegistroSolucaoReagenteDAO();
        try {
            solReagente.setDescricao(txtDescricao.getText().trim().toUpperCase());
            solReagente.setTipo(cmbTipo.getSelectedItem().toString());
            solReagente.setReferencia(txtReferencia.getText().trim().toUpperCase());
            solReagente.setArmazenamento(cmbArmazenamento.getSelectedItem().toString());
            solReagente.setDataPreparo(new Date());
            solReagente.setDataValidade(txtValidade.getDate());
            solReagente.setObs(txtObs.getText().trim().toLowerCase());
            solReagente.setCriador(new UsuarioDAO().findByName(System.getProperty("user")));
            solReagente.setVersion(0);
            Integer numero;
            try {
                numero = regsolReagenteDAO.getUltimaNumeroSolucao(cmbTipo.getSelectedItem().toString()) + 1;
                solReagente.setNumero(numero);
            } catch (Exception e) {
                numero = 1;
                solReagente.setNumero(1);
            }
            solReagente.setLote(ComboBox.getStringForValue(cmbTipo.getSelectedItem().toString(), categoryMapTipo)
                    + "-" + zeros.substring(String.valueOf(numero).length()) + numero);
            regsolReagenteDAO.salvar(solReagente);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        }
    }

    public final void readTipo() {
        cmbTipo.removeAllItems();
        cmbTipo.addItem("");
        categoryMapTipo.clear();
        cmbTipo.addItem("Solução Volumétrica");
        categoryMapTipo.put("SV", "Solução Volumétrica");
        cmbTipo.addItem("Solução Extemporânea");
        categoryMapTipo.put("SE", "Solução Extemporânea");
        cmbTipo.addItem("Solução Padronizada");
        categoryMapTipo.put("SP", "Solução Padronizada");
        cmbTipo.addItem("Solução Microbiológica");
        categoryMapTipo.put("SM", "Solução Microbiológica");
    }

    public final void readArmazenamento() {
        cmbArmazenamento.removeAllItems();
        cmbArmazenamento.addItem("");
        cmbArmazenamento.addItem("Ambiente");
        cmbArmazenamento.addItem("Geladeira");
        cmbArmazenamento.addItem("Freezer");
    }

    private void atulizar() {
        RegistroSolucaoReagenteDAO regsolReagenteDAO = new RegistroSolucaoReagenteDAO();
        try {
            solucaoReagente.setDescricao(txtDescricao.getText().trim().toUpperCase());
            solucaoReagente.setTipo(cmbTipo.getSelectedItem().toString());
            solucaoReagente.setReferencia(txtReferencia.getText().trim().toUpperCase());
            solucaoReagente.setArmazenamento(cmbArmazenamento.getSelectedItem().toString());
            solucaoReagente.setDataValidade(txtValidade.getDate());
            solucaoReagente.setObs(txtObs.getText().trim().toLowerCase());
            solucaoReagente.setVersion(solucaoReagente.getVersion() + 1);
            regsolReagenteDAO.salvar(solucaoReagente);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar dados: " + e);
        }
    }

    private void carregarDados() {
        try {
            txtDescricao.setText(solucaoReagente.getDescricao().toUpperCase());
            String[] tipo = {solucaoReagente.getTipo()};
            cmbTipo.setSelectedItem(tipo[0]);
            txtReferencia.setText(solucaoReagente.getReferencia().toUpperCase());
            String[] armazenamento = {solucaoReagente.getArmazenamento()};
            cmbArmazenamento.setSelectedItem(armazenamento[0]);
            txtValidade.setDate(solucaoReagente.getDataValidade() == null ? null : solucaoReagente.getDataValidade());
            txtObs.setText(solucaoReagente.getObs());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + ex);
        }
    }

    private void fechar() {
        Frames.fecharFrame(this);
    }
}
