/*
 * Copyright (C) 2017 rafael.lopes
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package br.com.lablims.view.cromatografia;

import br.com.lablims.dao.ColunaUtilDAO;
import br.com.lablims.model.ColunaUtil;
import br.com.lablims.util.DataHora;
import br.com.lablims.util.TableSorter;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafael.lopes
 */
public class FrmColunaCromatografo extends javax.swing.JDialog {

    final String zeros = "0000";
    private static String sys_name;
    private static int campanha_id;

    /**
     * Creates new form FrmFaseMovelCromatografo
     *
     * @param parent
     * @param modal
     * @param system_name
     * @param nome_campanha
     */
    public FrmColunaCromatografo(java.awt.Frame parent, boolean modal, String system_name, int campanha) {
        super(parent, modal);
        initComponents();
        sys_name = system_name;
        campanha_id = campanha;
//        setLocationRelativeTo(null);
//        setTitle("Coluna");
//        this.setResizable(false);
//        readColuna();
//        ButtonGroup Sentidogroup = new ButtonGroup();
//        Sentidogroup.add(rbtSentidoDireto);
//        Sentidogroup.add(rbtSentidoInverso);
//        ButtonGroup Filtrogroup = new ButtonGroup();
//        Filtrogroup.add(rbtFiltroSim);
//        Filtrogroup.add(rbtFiltroNao);
//        ButtonGroup PreColunagroup = new ButtonGroup();
//        PreColunagroup.add(rbtPreColunaSim);
//        PreColunagroup.add(rbtPreColunaNao);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCancelar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblColuna = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtPesquisarColuna = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        rbtSentidoDireto = new javax.swing.JRadioButton();
        rbtSentidoInverso = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        rbtFiltroSim = new javax.swing.JRadioButton();
        rbtFiltroNao = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        rbtPreColunaNao = new javax.swing.JRadioButton();
        rbtPreColunaSim = new javax.swing.JRadioButton();
        btnOutra = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtObs = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSalvar.setText("Selecionar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Colunas"));

        tblColuna.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Col_Id", "Código Coluna", "Coluna", "Localização", "Certificado", "Método", "n° Sistema", "Part Number", "Serial Number", "Setor", "Ativação", "Obs", "Version"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblColuna.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblColuna.setSurrendersFocusOnKeystroke(true);
        tblColuna.getTableHeader().setReorderingAllowed(false);
        tblColuna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblColunaMouseClicked(evt);
            }
        });
        tblColuna.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblColunaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblColuna);
        if (tblColuna.getColumnModel().getColumnCount() > 0) {
            tblColuna.getColumnModel().getColumn(0).setMinWidth(50);
            tblColuna.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblColuna.getColumnModel().getColumn(0).setMaxWidth(50);
            tblColuna.getColumnModel().getColumn(1).setMinWidth(140);
            tblColuna.getColumnModel().getColumn(1).setPreferredWidth(140);
            tblColuna.getColumnModel().getColumn(1).setMaxWidth(140);
            tblColuna.getColumnModel().getColumn(2).setMinWidth(300);
            tblColuna.getColumnModel().getColumn(2).setPreferredWidth(500);
            tblColuna.getColumnModel().getColumn(3).setMinWidth(200);
            tblColuna.getColumnModel().getColumn(3).setPreferredWidth(400);
            tblColuna.getColumnModel().getColumn(4).setMinWidth(80);
            tblColuna.getColumnModel().getColumn(4).setPreferredWidth(80);
            tblColuna.getColumnModel().getColumn(4).setMaxWidth(80);
            tblColuna.getColumnModel().getColumn(5).setMinWidth(120);
            tblColuna.getColumnModel().getColumn(5).setPreferredWidth(120);
            tblColuna.getColumnModel().getColumn(5).setMaxWidth(120);
            tblColuna.getColumnModel().getColumn(6).setMinWidth(80);
            tblColuna.getColumnModel().getColumn(6).setPreferredWidth(80);
            tblColuna.getColumnModel().getColumn(6).setMaxWidth(80);
            tblColuna.getColumnModel().getColumn(7).setMinWidth(120);
            tblColuna.getColumnModel().getColumn(7).setPreferredWidth(120);
            tblColuna.getColumnModel().getColumn(7).setMaxWidth(120);
            tblColuna.getColumnModel().getColumn(8).setMinWidth(150);
            tblColuna.getColumnModel().getColumn(8).setPreferredWidth(150);
            tblColuna.getColumnModel().getColumn(8).setMaxWidth(150);
            tblColuna.getColumnModel().getColumn(9).setMinWidth(120);
            tblColuna.getColumnModel().getColumn(9).setPreferredWidth(120);
            tblColuna.getColumnModel().getColumn(10).setMinWidth(140);
            tblColuna.getColumnModel().getColumn(10).setPreferredWidth(140);
            tblColuna.getColumnModel().getColumn(11).setMinWidth(200);
            tblColuna.getColumnModel().getColumn(11).setPreferredWidth(200);
            tblColuna.getColumnModel().getColumn(12).setMinWidth(50);
            tblColuna.getColumnModel().getColumn(12).setPreferredWidth(50);
            tblColuna.getColumnModel().getColumn(12).setMaxWidth(50);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
        );

        jLabel4.setText("Pesquisar:");

        txtPesquisarColuna.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarColunaKeyReleased(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Sentido"));

        rbtSentidoDireto.setText("Direto");

        rbtSentidoInverso.setText("Inverso");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbtSentidoDireto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtSentidoInverso)
                .addContainerGap(149, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtSentidoDireto)
                    .addComponent(rbtSentidoInverso))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Pré-Filtro"));

        rbtFiltroSim.setText("Sim");

        rbtFiltroNao.setText("Não");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(rbtFiltroSim)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtFiltroNao)
                .addContainerGap(185, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtFiltroSim)
                    .addComponent(rbtFiltroNao))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Pré-Coluna"));

        rbtPreColunaNao.setText("Não");

        rbtPreColunaSim.setText("Sim");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbtPreColunaSim)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtPreColunaNao)
                .addContainerGap(179, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtPreColunaNao)
                    .addComponent(rbtPreColunaSim))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        btnOutra.setText("Coluna Genérica");
        btnOutra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutraActionPerformed(evt);
            }
        });

        jLabel10.setText("Obs:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(64, 64, 64)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(66, 66, 66)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarColuna)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOutra))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtObs)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisarColuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(btnOutra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtObs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnSalvar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
//        if (tblColuna.getSelectedRow() != -1) {
//            if (!(rbtSentidoDireto.isSelected() || rbtSentidoInverso.isSelected())) {
//                JOptionPane.showMessageDialog(null, "Sentido inválido");
//            } else if (!(rbtFiltroSim.isSelected() || rbtFiltroNao.isSelected())) {
//                JOptionPane.showMessageDialog(null, "Pré-Filtro inválido");
//            } else if (!(rbtPreColunaSim.isSelected() || rbtPreColunaNao.isSelected())) {
//                JOptionPane.showMessageDialog(null, "Pré-Coluna inválida");
//            } else {
//                setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
//                CromatografoDAO equipDao = new CromatografoDAO();
//                for (Cromatografo equip : equipDao.readProgramacaoCromatografo()) {
//                    if ((equip.getColuna().getColuna_id() == (Integer) tblColuna.getValueAt(tblColuna.getSelectedRow(), 0))) {
//                        if ((Integer) tblColuna.getValueAt(tblColuna.getSelectedRow(), 0) != 1) {
//                            if (!sys_name.equals(equip.getSystem_name())) {
//                                JOptionPane.showMessageDialog(null, "Coluna não Disponível!\nEstá sendo utilizada: " + equip.getSystem_name());
//                                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
//                                return;
//                            }
//                        }
//                    }
//                }
//                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
//                if (tblColuna.getValueAt(tblColuna.getSelectedRow(), 5).toString().isEmpty()) {
//                    JOptionPane.showMessageDialog(null, "Performance desta Coluna não foi Finalizada");
//                } else {
//                    int dialogResult = JOptionPane.showConfirmDialog(null,
//                            "Deseja utilizar esta coluna:\n" + tblColuna.getValueAt(tblColuna.getSelectedRow(), 1),
//                            "Aviso", JOptionPane.YES_NO_OPTION);
//                    if (dialogResult == 0) {
//                        //Envia Codigo de Coluna
//                        Integer analise_status = 3;
//                        //Seleciona o Equipamento
//                        Cromatografo equip = new Cromatografo();
//                        CromatografoDAO equipDAO = new CromatografoDAO();
//                        equip.setSystem_name(sys_name);
//                        equipDAO.selectCromatografoByName(equip);
//                        //Abre Dialog para savar
//                        FrmDialogSalvar frmSalvar = new FrmDialogSalvar(null, true, sys_name,
//                                analise_status, "COLUNA", campanha_id);
//                        frmSalvar.setVisible(true);
//                        if (FrmDialogSalvar.senha()) {
//                            criarColunaCromatografo();
//                            dispose();
//                        }
//                    }
//                }
//            }
//        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void txtPesquisarColunaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarColunaKeyReleased
        TableSorter.TableSorter(tblColuna, txtPesquisarColuna);
    }//GEN-LAST:event_txtPesquisarColunaKeyReleased

    private void btnOutraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutraActionPerformed
//        DefaultTableModel model = (DefaultTableModel) tblColuna.getModel();
//        TableRowSorter sorter = new TableRowSorter<>(model);
//        tblColuna.setRowSorter(sorter);
//        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + "CQ-0-0000"));
    }//GEN-LAST:event_btnOutraActionPerformed

    private void tblColunaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblColunaMouseClicked
        if (evt.getClickCount() == 2) {
           // atualizar();
        }
    }//GEN-LAST:event_tblColunaMouseClicked

    private void tblColunaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblColunaKeyReleased
        if (tblColuna.getSelectedRow() != -1) {
            if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                //deletar();
            }
        }
    }//GEN-LAST:event_tblColunaKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmColunaCromatografo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmColunaCromatografo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmColunaCromatografo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmColunaCromatografo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmColunaCromatografo dialog = new FrmColunaCromatografo(new javax.swing.JFrame(), true, null, 0);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnOutra;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbtFiltroNao;
    private javax.swing.JRadioButton rbtFiltroSim;
    private javax.swing.JRadioButton rbtPreColunaNao;
    private javax.swing.JRadioButton rbtPreColunaSim;
    private javax.swing.JRadioButton rbtSentidoDireto;
    private javax.swing.JRadioButton rbtSentidoInverso;
    private javax.swing.JTable tblColuna;
    private javax.swing.JTextField txtObs;
    private javax.swing.JTextField txtPesquisarColuna;
    // End of variables declaration//GEN-END:variables

    public final void readColuna() {
        DefaultTableModel model = (DefaultTableModel) tblColuna.getModel();
        ColunaUtilDAO colUtilDAO = new ColunaUtilDAO();
        model.setNumRows(0);
        try {
            for (ColunaUtil colUtil : colUtilDAO.findListColunaUtilAtivos()) {
                model.addRow(new Object[]{
                    colUtil.getId(),
                    colUtil.getSetor().getDepartamento().getSiglaDepartamento()
                    + "-" + colUtil.getColuna().getTipoColuna().getConfiguracao()
                    + "-" + zeros.substring(String.valueOf(colUtil.getCodigoColuna()).length())
                    + String.valueOf(colUtil.getCodigoColuna()),
                    colUtil.getColuna().getFabricanteColuna().getConfiguracao() + " "
                    + colUtil.getColuna().getMarcaColuna().getConfiguracao() + " - "
                    + colUtil.getColuna().getTipoColuna().getConfiguracao() + " "
                    + colUtil.getColuna().getTamanhoColuna().getConfiguracao() + "mm x "
                    + colUtil.getColuna().getDiametroColuna().getConfiguracao() + "mm x "
                    + colUtil.getColuna().getParticulaColuna().getConfiguracao() + "µm ",
                    colUtil.getDataDescarte() == null
                    ? colUtil.getVaga().getColunaStorage().getSetor().getSetor()
                    + " - " + colUtil.getVaga().getColunaStorage().getTipo()
                    + " - " + colUtil.getVaga().getColunaStorage().getNumero()
                    + "  Vaga: " + colUtil.getVaga().getVaga()
                    : "Inativa",
                    colUtil.getCertificado() != null,
                    colUtil.getMetodologia().getCodMetodo(),
                    colUtil.getColuna().getCodigo(),
                    colUtil.getColuna().getPartNumber(),
                    colUtil.getSerialNumber(),
                    colUtil.getSetor().getSiglaSetor(),
                    DataHora.getStringDateTime(colUtil.getDataAtivacao()),
                    colUtil.getObs(),
                    colUtil.getVersion()
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        }
    }

}
