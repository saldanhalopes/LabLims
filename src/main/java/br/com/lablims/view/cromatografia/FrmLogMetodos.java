package br.com.lablims.view.cromatografia;

//import Classes.DAO.CampanhaDAO;
//import Classes.DAO.MetodologiaDAO;
//import static Frm.Hplc.PnlLogCromatografo.getValueforKey;
//import Classes.Modelo.Campanha;
//import Classes.Modelo.Cromatografo;
import java.awt.Cursor;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.TreeMap;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author rafael.lopes
 */
public class FrmLogMetodos extends javax.swing.JDialog {

    private TreeMap<Integer, String> categoryMapMetodo = new TreeMap<>();

    /**
     * Creates new form FrmConfigCromatografo
     *
     * @param parent
     * @param modal
     * @param title
     */
    public FrmLogMetodos(java.awt.Frame parent, boolean modal, String system_name) {
        super(parent, modal);
        initComponents();
//        setLocationRelativeTo(null);
//        setTitle("Sistema Cromatográfico - " + system_name + "- Metodos");
//        this.setResizable(false);
//        carregarCampanha(system_name);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnFechar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstMetodos = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Métodos"));

        lstMetodos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lstMetodos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstMetodos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lstMetodos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstMetodosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(lstMetodos);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 649, Short.MAX_VALUE)
                        .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFechar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void lstMetodosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstMetodosMouseClicked
//        if (evt.getClickCount() == 2) {
//            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
//            try {
//                if (getValueforKey(lstMetodos.getSelectedIndex(), categoryMapMetodo) != null) {
//                    if (!getValueforKey(lstMetodos.getSelectedIndex(), categoryMapMetodo).isEmpty()) {
//                        Desktop d = Desktop.getDesktop();
//                        d.browse(new URI(getValueforKey(lstMetodos.getSelectedIndex(), categoryMapMetodo)));
//                    } else {
//                        JOptionPane.showMessageDialog(null, "Esse método não possui manual de ajuda");
//                    }
//                } else {
//                    JOptionPane.showMessageDialog(null, "Esse método não possui manual de ajuda");
//                }
//            } catch (IOException | URISyntaxException | NullPointerException e) {
//                JOptionPane.showMessageDialog(null, "Esse método não possui manual de ajuda");
//            }
//            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
//        }
    }//GEN-LAST:event_lstMetodosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmLogMetodos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmLogMetodos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmLogMetodos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmLogMetodos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmLogMetodos dialog = new FrmLogMetodos(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFechar;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList lstMetodos;
    // End of variables declaration//GEN-END:variables

    private void carregarCampanha(String sys_name) {
//        try {
//            Campanha camp = new Campanha();
//            Cromatografo equip = new Cromatografo();
//            CampanhaDAO campDao = new CampanhaDAO();
//            equip.setSystem_name(sys_name);
//            camp.setCromatografo(equip);
//            campDao.selectCampanhaBySystem(camp);
//
//            String text = camp.getMetodos();
//            String a = "a";
//            String b = "b";
//            String c = "c";
//            String d = "d";
//            DefaultListModel model = new DefaultListModel();
//            MetodologiaDAO mtdDAO = new MetodologiaDAO();
//            Object mtd1 = mtdDAO.selectMetodologiaById(Integer.parseInt(text.substring(text.indexOf(a) + 1, text.indexOf(b))));
//            Object mtd2 = mtdDAO.selectMetodologiaById(Integer.parseInt(text.substring(text.indexOf(b) + 1, text.indexOf(c))));
//            Object mtd3 = mtdDAO.selectMetodologiaById(Integer.parseInt(text.substring(text.indexOf(c) + 1, text.indexOf(d))));
//            Object mtd4 = mtdDAO.selectMetodologiaById(Integer.parseInt(text.substring(text.indexOf(d) + 1, text.length())));
//            model.addElement(mtd1);
//            model.addElement(mtd2);
//            model.addElement(mtd3);
//            model.addElement(mtd4);
//            lstMetodos.setModel(model);
//            categoryMapMetodo.clear();
//            categoryMapMetodo.put(0, mtdDAO.selectMetodologiaLinkById(text.substring(text.indexOf(a) + 1, text.indexOf(b))));
//            categoryMapMetodo.put(1, mtdDAO.selectMetodologiaLinkById(text.substring(text.indexOf(b) + 1, text.indexOf(c))));
//            categoryMapMetodo.put(2, mtdDAO.selectMetodologiaLinkById(text.substring(text.indexOf(c) + 1, text.indexOf(d))));
//            categoryMapMetodo.put(3, mtdDAO.selectMetodologiaLinkById(text.substring(text.indexOf(d) + 1, text.length())));
//        } catch (Exception e) {
//
//        }
    }

}
