/*
 * Copyright (C) 2017 rafael.lopes
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package br.com.lablims.view.cromatografia;

//import Classes.DAO.CampanhaDAO;
//import Classes.DAO.ColunaDAO;
//import Classes.DAO.CromatografoDAO;
//import Classes.DAO.FaseMovelDAO;
//import Classes.DAO.SetorDAO;
//import Frm.Login.FrmSalvarDataHora;
//import Classes.Modelo.Analise;
//import Classes.Modelo.Campanha;
//import Classes.Modelo.Coluna;
//import Classes.Modelo.Cromatografo;
//import Classes.Modelo.FaseMovel;
//import Classes.Modelo.Setor;
//import Classes.Modelo.Usuario;
//import Classes.Util.DataHora;
//import Classes.Util.GridlineCellRenderer;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.sql.Timestamp;
import java.util.Date;
import java.util.TreeMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rafael.lopes
 */
public class FrmSelecionarCampanhaCromatografo extends javax.swing.JDialog {

    private static String sys_name;
    private TreeMap<Integer, String> categoryMapSetorPesquisar = new TreeMap<>();

    /**
     * Creates new form FrmNovoRegistroCromatografo
     *
     * @param parent
     * @param modal
     * @param system_name
     */
    public FrmSelecionarCampanhaCromatografo(java.awt.Frame parent, boolean modal, String system_name) {
        super(parent, modal);
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        setTitle("Selecionar Campanha - " + system_name);
        sys_name = system_name;
        readSetorPesquisar();
        readCampanhas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDados = new javax.swing.JPanel();
        btnSelecionar = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        pnlLotesPreparo = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtPesquisarCampanhas = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblCampanhas = new javax.swing.JTable();
        jLabel27 = new javax.swing.JLabel();
        cmbPesquisarSetorCampanhas = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        cmbCampoPesquisar = new javax.swing.JComboBox();
        btnNovaCampanha = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        pnlDados.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnSelecionar.setText("Selecionar");
        btnSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarActionPerformed(evt);
            }
        });

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        jLabel10.setText("Pesquisar:");

        txtPesquisarCampanhas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarCampanhasKeyReleased(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Campanhas"));

        tblCampanhas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "cor", "Ordem", "Id", "Campanha", "Análise", "Equipamento", "Setor", "Previsao", "Observações"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCampanhas.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblCampanhas.setAutoscrolls(false);
        tblCampanhas.setSurrendersFocusOnKeystroke(true);
        tblCampanhas.getTableHeader().setReorderingAllowed(false);
        tblCampanhas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCampanhasMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(tblCampanhas);
        if (tblCampanhas.getColumnModel().getColumnCount() > 0) {
            tblCampanhas.getColumnModel().getColumn(0).setMinWidth(0);
            tblCampanhas.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblCampanhas.getColumnModel().getColumn(0).setMaxWidth(0);
            tblCampanhas.getColumnModel().getColumn(1).setMinWidth(50);
            tblCampanhas.getColumnModel().getColumn(1).setPreferredWidth(50);
            tblCampanhas.getColumnModel().getColumn(1).setMaxWidth(50);
            tblCampanhas.getColumnModel().getColumn(2).setMinWidth(0);
            tblCampanhas.getColumnModel().getColumn(2).setPreferredWidth(0);
            tblCampanhas.getColumnModel().getColumn(2).setMaxWidth(0);
            tblCampanhas.getColumnModel().getColumn(3).setMinWidth(500);
            tblCampanhas.getColumnModel().getColumn(3).setPreferredWidth(500);
            tblCampanhas.getColumnModel().getColumn(4).setMinWidth(200);
            tblCampanhas.getColumnModel().getColumn(4).setPreferredWidth(200);
            tblCampanhas.getColumnModel().getColumn(4).setMaxWidth(200);
            tblCampanhas.getColumnModel().getColumn(5).setMinWidth(120);
            tblCampanhas.getColumnModel().getColumn(5).setPreferredWidth(120);
            tblCampanhas.getColumnModel().getColumn(5).setMaxWidth(120);
            tblCampanhas.getColumnModel().getColumn(6).setMinWidth(120);
            tblCampanhas.getColumnModel().getColumn(6).setPreferredWidth(120);
            tblCampanhas.getColumnModel().getColumn(6).setMaxWidth(120);
            tblCampanhas.getColumnModel().getColumn(7).setMinWidth(200);
            tblCampanhas.getColumnModel().getColumn(7).setPreferredWidth(200);
            tblCampanhas.getColumnModel().getColumn(7).setMaxWidth(200);
            tblCampanhas.getColumnModel().getColumn(8).setMinWidth(800);
            tblCampanhas.getColumnModel().getColumn(8).setPreferredWidth(800);
        }

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 944, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
        );

        jLabel27.setText("Setor:");

        cmbPesquisarSetorCampanhas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPesquisarSetorCampanhasItemStateChanged(evt);
            }
        });

        jLabel28.setText("Campo:");

        cmbCampoPesquisar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Campanha", "Análise", "Equipamento", "Prioridade" }));

        javax.swing.GroupLayout pnlLotesPreparoLayout = new javax.swing.GroupLayout(pnlLotesPreparo);
        pnlLotesPreparo.setLayout(pnlLotesPreparoLayout);
        pnlLotesPreparoLayout.setHorizontalGroup(
            pnlLotesPreparoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLotesPreparoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLotesPreparoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLotesPreparoLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarCampanhas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbCampoPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbPesquisarSetorCampanhas, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlLotesPreparoLayout.setVerticalGroup(
            pnlLotesPreparoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLotesPreparoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLotesPreparoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLotesPreparoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbCampoPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlLotesPreparoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbPesquisarSetorCampanhas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlLotesPreparoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPesquisarCampanhas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnNovaCampanha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_fluxo_trabalho.png"))); // NOI18N
        btnNovaCampanha.setText("Nova Campanha");
        btnNovaCampanha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovaCampanhaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDadosLayout = new javax.swing.GroupLayout(pnlDados);
        pnlDados.setLayout(pnlDadosLayout);
        pnlDadosLayout.setHorizontalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovaCampanha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(pnlLotesPreparo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlDadosLayout.setVerticalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDadosLayout.createSequentialGroup()
                .addComponent(pnlLotesPreparo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelecionar)
                    .addComponent(btnNovaCampanha)
                    .addComponent(btnFechar))
                .addContainerGap())
        );

        getContentPane().add(pnlDados);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void txtPesquisarCampanhasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarCampanhasKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            readCampanhas();
        }
    }//GEN-LAST:event_txtPesquisarCampanhasKeyReleased

    private void cmbPesquisarSetorCampanhasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPesquisarSetorCampanhasItemStateChanged
        readCampanhas();
    }//GEN-LAST:event_cmbPesquisarSetorCampanhasItemStateChanged

    private void btnNovaCampanhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovaCampanhaActionPerformed
        FrmNovoRegistroCromatografo frmNovo = new FrmNovoRegistroCromatografo(null, true, sys_name);
        frmNovo.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnNovaCampanhaActionPerformed

    private void tblCampanhasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCampanhasMouseClicked
        if (evt.getClickCount() == 2) {
            if (tblCampanhas.getSelectedRow() != -1) {
                salva();
            }
        }
    }//GEN-LAST:event_tblCampanhasMouseClicked

    private void btnSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarActionPerformed
        if (tblCampanhas.getSelectedRow() != -1) {
            salva();
        }
    }//GEN-LAST:event_btnSelecionarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmSelecionarCampanhaCromatografo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmSelecionarCampanhaCromatografo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmSelecionarCampanhaCromatografo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmSelecionarCampanhaCromatografo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FrmSelecionarCampanhaCromatografo dialog = new FrmSelecionarCampanhaCromatografo(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnNovaCampanha;
    public static javax.swing.JButton btnSelecionar;
    private javax.swing.JComboBox cmbCampoPesquisar;
    private javax.swing.JComboBox cmbPesquisarSetorCampanhas;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JPanel pnlDados;
    private javax.swing.JPanel pnlLotesPreparo;
    private javax.swing.JTable tblCampanhas;
    private javax.swing.JTextField txtPesquisarCampanhas;
    // End of variables declaration//GEN-END:variables

    private void readCampanhas() {
//        try {
//            GridlineCellRenderer r = new GridlineCellRenderer(1, 2, 3, 4, 5, 6, 7, 8, 9);
//            DefaultTableModel model = (DefaultTableModel) tblCampanhas.getModel();
//            tblCampanhas.setDefaultRenderer(Object.class, r);
//            CampanhaDAO campDao = new CampanhaDAO();
//            model.setNumRows(0);
//            String setor = cmbPesquisarSetorCampanhas.getSelectedItem().toString();
//            String campo = cmbCampoPesquisar.getSelectedItem().toString();
//            String texto = txtPesquisarCampanhas.getText().trim();
//            for (Campanha camp : campDao.selectCampanhaProgramacao(setor, campo, texto)) {
//                model.addRow(new Object[]{
//                    camp.getCor() == null ? "" : camp.getCor(),
//                    camp.getOrdem(),
//                    camp.getLog_campanha_id(),
//                    camp.getNome_campanha(),
//                    camp.getAnalise().getAnalise(),
//                    camp.getCromatografo().getSystem_name(),
//                    camp.getSetor().getSigla_setor(),
//                    DataHora.getStringDateTime(camp.getPrevisao()),
//                    camp.getObs_campanha()
//                });
//            }
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
//        }
    }

    public final void readSetorPesquisar() {
//        cmbPesquisarSetorCampanhas.removeAllItems();
//        cmbPesquisarSetorCampanhas.addItem("Todos");
//        categoryMapSetorPesquisar.clear();
//        SetorDAO setorDao = new SetorDAO();
//        for (Setor setor : setorDao.readSetor()) {
//            if (setor.getSigla_setor().startsWith("HPLC") || setor.getSigla_setor().startsWith("CG")) {
//                Integer id = setor.getSetor_id();
//                String name = setor.getSigla_setor();
//                cmbPesquisarSetorCampanhas.addItem(name);
//                categoryMapSetorPesquisar.put(id, name);
//            }
//        }
    }

    private void criarCampanha(int id, Timestamp data) {
//        try {
//            Campanha camp = new Campanha();
//            CampanhaDAO campDAO = new CampanhaDAO();
//            Cromatografo equip = new Cromatografo();
//            Usuario user = new Usuario();
//            camp.setLog_campanha_id(id);
//            user.setUser(System.getProperty("user"));
//            equip.setSystem_name(sys_name);
//            camp.setCromatografo(equip);
//            camp.setUser_inicio(user);
//            camp.setData_inicio(data);
//            campDAO.updateInicioCampanha(camp);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
//        }
    }

    private void salvarDados(int campanha_id, String nome_campanha, String obs, Timestamp data) {
//        Cromatografo equip = new Cromatografo();
//        CromatografoDAO equipDAO = new CromatografoDAO();
//        Usuario user = new Usuario();
//        FaseMovel fase = new FaseMovel();
//        Coluna col = new Coluna();
//        FaseMovelDAO faseDAO = new FaseMovelDAO();
//        ColunaDAO colDAO = new ColunaDAO();
//        Analise anls = new Analise();
//        Campanha camp = new Campanha();
//        //busca pelo nome do equipamento
//        equip.setSystem_name(sys_name);
//        equipDAO.selectLogCromatografo(equip);
//        fase.setCromatografo(equip);
//        faseDAO.selectUltimaFaseMovelBySystem(fase);
//        col.setCromatografo(equip);
//        colDAO.selectUltimaColunaBySystem(col);
//        equip.setData_fim(data);
//        equip.setData_registro(DataHora.getTimestampDate(new Date()));
//        user.setUser(System.getProperty("user"));
//        equip.setUsuario(user);
//        //verifica se o registro é uma NOVA ANÁLISE
//        //set FaseMovel e Coluna
//        try {
//            if (equip.getAnalise().getAnalise_status_id() == 1
//                    || equip.getAnalise().getAnalise_status_id() == 2) {
//                fase.setFase_movel_id(0);
//                col.setColuna_id(0);
//            }
//        } catch (Exception e) {
//            fase.setFase_movel_id(0);
//            col.setColuna_id(0);
//        }
//        equip.setFasemovel(fase);
//        equip.setColuna(col);
//        //Atualiza no registro anterior
//        equipDAO.updateLogCromatografo(equip);
//        //Gera no registro
//        fase.setFase_movel_id(0);
//        col.setColuna_id(0);
//        equip.setFasemovel(fase);
//        equip.setColuna(col);
//        anls.setAnalise_status_id(1);
//        equip.setAnalise(anls);
//        equip.setSystem_name(sys_name);
//        equip.setData_inicio(data);
//        equip.setData_registro(DataHora.getTimestampDate(new Date()));
//        equip.setDescricao("NOVA ANÁLISE" + " - "
//                + nome_campanha + " - "
//                + obs);
//        camp.setLog_campanha_id(campanha_id);
//        equip.setCampanha(camp);
//        equip.setObs_log(obs);
//        //Grava dados no banco no registro
//        equipDAO.createLogCromatografo(equip);
    }

    private void salva() {
//        DataHora data_registro = new DataHora();
//        FrmSalvarDataHora frmSalvar = new FrmSalvarDataHora(null, true, sys_name, data_registro);
//        frmSalvar.setVisible(true);
//        Timestamp data_inicio = data_registro.getTimestampdatahora() == null ? DataHora.getTimestampDate(new Date()) : data_registro.getTimestampdatahora();
//        if (frmSalvar.senha()) {
//            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
//            int campanha_id = (Integer) tblCampanhas.getValueAt(tblCampanhas.getSelectedRow(), 2);
//            String nome_campanha = tblCampanhas.getValueAt(tblCampanhas.getSelectedRow(), 3).toString();
//            String obs = tblCampanhas.getValueAt(tblCampanhas.getSelectedRow(), 5).toString();
//            criarCampanha(campanha_id, data_inicio);
//            salvarDados(campanha_id, nome_campanha, obs, data_inicio);
//            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
//            dispose();
//        }
    }

}
