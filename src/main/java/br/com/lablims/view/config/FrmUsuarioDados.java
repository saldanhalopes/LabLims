package br.com.lablims.view.config;

import br.com.lablims.dao.GrupoDAO;
import br.com.lablims.dao.SegurancaDAO;
import br.com.lablims.dao.SetorDAO;
import br.com.lablims.dao.TurnoDAO;
import br.com.lablims.dao.UsuarioDAO;
import br.com.lablims.model.Grupo;
import br.com.lablims.model.Seguranca;
import br.com.lablims.model.Setor;
import br.com.lablims.model.Usuario;
import br.com.lablims.util.ComboBox;
import br.com.lablims.util.Cript;
import javax.swing.JOptionPane;
import br.com.lablims.util.Validate;
import java.awt.Cursor;
import java.util.TreeMap;
import br.com.lablims.util.Senha;
import br.com.lablims.model.Turno;
import br.com.lablims.util.FieldFormatLimit;
import br.com.lablims.util.Frames;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.Date;
import javax.swing.ImageIcon;

/**
 *
 * @author rafael.lopes
 */
public class FrmUsuarioDados extends javax.swing.JDialog {
    
    private Usuario usuario;
    private boolean novoUsuario = false;
    private final TreeMap<Long, String> categoryMapGrupo = new TreeMap<>();
    private final TreeMap<Long, String> categoryMapSetor = new TreeMap<>();
    private final TreeMap<Long, String> categoryMapTurno = new TreeMap<>();
    private Integer tamanho;

    /**
     * Creates new form FrmUsuarioColuna
     *
     * @param parent
     * @param modal
     */
    public FrmUsuarioDados(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        carregar();
        novoUsuario = true;
        ckbAlterarSenha.setSelected(true);
        txtNovaSenha.setText("12345678");
        txtConfirmaSenha.setText("12345678");
    }
    
    public FrmUsuarioDados(java.awt.Frame parent, boolean modal, Usuario user) {
        super(parent, modal);
        initComponents();
        carregar();
        usuario = user;
        carregarDados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalvarUsuario = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        txtUsuario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cmbStatus = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cmbTurno = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        cmbGrupo = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        cmbSetor = new javax.swing.JComboBox();
        txtCracha = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ckbAlterarSenha = new javax.swing.JCheckBox();
        txtNovaSenha = new javax.swing.JPasswordField();
        txtConfirmaSenha = new javax.swing.JPasswordField();
        lblCapslock = new javax.swing.JLabel();
        lblRegraSenha = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnSalvarUsuario.setText("Ok");
        btnSalvarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarUsuarioActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados"));

        jLabel1.setText("Usuário:");

        jLabel2.setText("Nome:");

        jLabel3.setText("E-mail:");

        jLabel10.setText("Crachá:");

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ativo", "Bloqueado" }));
        cmbStatus.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel8.setText("Status:");

        jLabel9.setText("Turno:");

        cmbTurno.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel11.setText("Grupo:");

        cmbGrupo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel28.setText("Setor:");

        txtCracha.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbTurno, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbGrupo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbSetor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                        .addComponent(txtUsuario)
                        .addComponent(txtEmail))
                    .addComponent(txtCracha, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtCracha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(cmbSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Senha"));

        jLabel5.setText("Nova Senha:");

        jLabel6.setText("Confirmar Nova Senha:");

        ckbAlterarSenha.setText("Alterar senha no próximo login");

        txtNovaSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNovaSenhaFocusGained(evt);
            }
        });
        txtNovaSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNovaSenhaKeyReleased(evt);
            }
        });

        txtConfirmaSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtConfirmaSenhaFocusGained(evt);
            }
        });
        txtConfirmaSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtConfirmaSenhaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ckbAlterarSenha)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtConfirmaSenha)
                    .addComponent(txtNovaSenha))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNovaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtConfirmaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ckbAlterarSenha))
        );

        lblCapslock.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        lblCapslock.setForeground(new java.awt.Color(204, 0, 0));

        lblRegraSenha.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        lblRegraSenha.setForeground(new java.awt.Color(255, 0, 0));
        lblRegraSenha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRegraSenha.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCapslock, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalvarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblRegraSenha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRegraSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSalvarUsuario)
                        .addComponent(btnCancelar))
                    .addComponent(lblCapslock, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarUsuarioActionPerformed
        Validate val = new Validate();
        Senha senha = new Senha();
        try {
            if (txtUsuario.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Usuário inválido");
                txtUsuario.requestFocus();
            } else if (txtNome.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Nome inválido");
                txtNome.requestFocus();
            } else if (!val.isEmail(txtEmail.getText())) {
                JOptionPane.showMessageDialog(null, "Email inválido");
                txtEmail.requestFocus();
            } else if (txtCracha.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Crachá inválido");
                txtCracha.requestFocus();
            } else if (cmbTurno.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(null, "Turno inválido");
                cmbTurno.requestFocus();
            } else if (cmbGrupo.getSelectedItem().toString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Grupo inválido");
                cmbGrupo.requestFocus();
            } else if (cmbSetor.getSelectedItem().toString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Setor inválido");
                cmbSetor.requestFocus();
            } else if (!new String(txtNovaSenha.getPassword()).equals(new String(txtConfirmaSenha.getPassword()))) {
                JOptionPane.showMessageDialog(null, "Senhas não conferem: ");
                txtNovaSenha.setText(null);
                txtConfirmaSenha.setText(null);
                txtNovaSenha.requestFocus();
            } else if (!new String(txtNovaSenha.getPassword()).isEmpty() && (new String(txtNovaSenha.getPassword()).length() < tamanho)) {
                JOptionPane.showMessageDialog(null, "Tamanho da senha não atende critério de Segurança!");
                txtNovaSenha.setText(null);
                txtConfirmaSenha.setText(null);
            } else if (novoUsuario) {
                Usuario u = new Usuario();
                u.setUsuario(txtUsuario.getText());
                if (UsuarioDAO.checkUserIsExits(u)) {
                    JOptionPane.showMessageDialog(null, "Usuário já existe!", "Alerta", JOptionPane.ERROR_MESSAGE);
                    txtUsuario.requestFocus();
                } else {
                    if (senha.Salvar()) {
                        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                        criarUsuario();
                        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    }
                }
            } else {
                if (senha.Salvar()) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    atulizarUsuario();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnSalvarUsuarioActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        fechar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtNovaSenhaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNovaSenhaFocusGained
        capslock();
    }//GEN-LAST:event_txtNovaSenhaFocusGained

    private void txtNovaSenhaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNovaSenhaKeyReleased
        capslock();
    }//GEN-LAST:event_txtNovaSenhaKeyReleased

    private void txtConfirmaSenhaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtConfirmaSenhaFocusGained
        capslock();
    }//GEN-LAST:event_txtConfirmaSenhaFocusGained

    private void txtConfirmaSenhaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConfirmaSenhaKeyReleased
        capslock();
    }//GEN-LAST:event_txtConfirmaSenhaKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmUsuarioDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmUsuarioDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmUsuarioDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmUsuarioDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FrmUsuarioDados dialog = new FrmUsuarioDados(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    public static javax.swing.JButton btnSalvarUsuario;
    private javax.swing.JCheckBox ckbAlterarSenha;
    private javax.swing.JComboBox cmbGrupo;
    private javax.swing.JComboBox cmbSetor;
    private javax.swing.JComboBox cmbStatus;
    private javax.swing.JComboBox cmbTurno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JLabel lblCapslock;
    private javax.swing.JLabel lblRegraSenha;
    private javax.swing.JPasswordField txtConfirmaSenha;
    private javax.swing.JTextField txtCracha;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNome;
    private javax.swing.JPasswordField txtNovaSenha;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

    private void carregar() {
        Frames.setUpFrame(this, "Dados do Usuário", true);
        limparCampos();
        txtUsuario.setEditable(true);
        readTurno();
        readGrupo();
        readSetor();
        SegurancaDAO segurancaDAO = new SegurancaDAO();
        try {
            tamanho = segurancaDAO.findByTipo(Seguranca.TAM_SENHA).getNumero();
            lblRegraSenha.setText("A senha deve ter pelo menos " + tamanho + " caracteres");
        } catch (Exception e) {
            
        }
    }
    
    private void criarUsuario() {
        Usuario user = new Usuario();
        UsuarioDAO userDAO = new UsuarioDAO();
        GrupoDAO grupDAO = new GrupoDAO();
        SetorDAO setorDAO = new SetorDAO();
        TurnoDAO turnoDAO = new TurnoDAO();
        try {
            user.setUsuario(txtUsuario.getText().toLowerCase());
            user.setPass(Cript.SHA(new String(txtNovaSenha.getPassword())));
            user.setNome(txtNome.getText().trim().toUpperCase());
            user.setEmail(txtEmail.getText().toLowerCase().trim());
            user.setLock((Integer) cmbStatus.getSelectedIndex() == 1);
            user.setCracha(txtCracha.getText());
            user.setChangePass(ckbAlterarSenha.isSelected());
            user.setLastChangePass(new Date());
            user.setFailedAccessCount(0);
            user.setVersion(0);
            user.setTurno(turnoDAO.findById(Turno.class, ComboBox.getKeyForValue(cmbTurno.getSelectedItem().toString(), categoryMapTurno)));
            user.setGrupo(grupDAO.findById(Grupo.class, ComboBox.getKeyForValue(cmbGrupo.getSelectedItem().toString(), categoryMapGrupo)));
            user.setSetor(setorDAO.findById(Setor.class, ComboBox.getKeyForValue(cmbSetor.getSelectedItem().toString(), categoryMapSetor)));
            userDAO.salvar(user);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        } finally {
            dispose();
        }
    }
    
    private void carregarDados() {
        UsuarioDAO userDAO = new UsuarioDAO();
        try {
            usuario = userDAO.findById(Usuario.class, usuario.getId());
            txtUsuario.setEditable(false);
            txtUsuario.setText(usuario.getUsuario().toLowerCase());
            txtNome.setText(usuario.getNome());
            txtEmail.setText(usuario.getEmail());
            cmbStatus.setSelectedIndex(usuario.getLock() ? 1 : 0);
            txtCracha.setText(usuario.getCracha());
            ckbAlterarSenha.setSelected(usuario.getChangePass());
            String[] turno = {usuario.getTurno().getTurno()};
            cmbTurno.setSelectedItem(turno[0]);
            String[] grupo = {usuario.getGrupo().getGrupoNome()};
            cmbGrupo.setSelectedItem(grupo[0]);
            String[] setor = {usuario.getSetor().getSiglaSetor()};
            cmbSetor.setSelectedItem(setor[0]);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        }
    }
    
    private void atulizarUsuario() {
        UsuarioDAO userDAO = new UsuarioDAO();
        GrupoDAO grupDAO = new GrupoDAO();
        SetorDAO setorDAO = new SetorDAO();
        TurnoDAO turnoDAO = new TurnoDAO();
        try {
            usuario.setNome(txtNome.getText().toUpperCase());
            usuario.setEmail(txtEmail.getText().trim());
            usuario.setLock((Integer) cmbStatus.getSelectedIndex() == 1);
            if (cmbStatus.getSelectedIndex() == 0) {
                usuario.setFailedAccessCount(0);
            }
            usuario.setCracha(txtCracha.getText());
            usuario.setChangePass(ckbAlterarSenha.isSelected());
            if (!new String(txtNovaSenha.getPassword()).trim().isEmpty()) {
                if (!new String(txtNovaSenha.getPassword()).equals(new String(txtConfirmaSenha.getPassword()))) {
                    JOptionPane.showMessageDialog(null, "Senhas não conferem: ");
                    txtNovaSenha.setText(null);
                    txtConfirmaSenha.setText(null);
                } else {
                    usuario.setLastChangePass(new Date());
                    usuario.setPass(Cript.SHA(new String(txtNovaSenha.getPassword())));
                }
            }
            usuario.setTurno(turnoDAO.findById(Turno.class, ComboBox.getKeyForValue(cmbTurno.getSelectedItem().toString(), categoryMapTurno)));
            usuario.setGrupo(grupDAO.findById(Grupo.class, ComboBox.getKeyForValue(cmbGrupo.getSelectedItem().toString(), categoryMapGrupo)));
            usuario.setSetor(setorDAO.findById(Setor.class, ComboBox.getKeyForValue(cmbSetor.getSelectedItem().toString(), categoryMapSetor)));
            usuario.setVersion(usuario.getVersion() + 1);
            userDAO.salvar(usuario);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar dados: " + e);
        } finally {
            dispose();
        }
        
    }
    
    private void limparCampos() {
        txtUsuario.setText(null);
        txtNome.setText(null);
        txtEmail.setText(null);
        txtCracha.setText(null);
        txtNovaSenha.setText(null);
        txtConfirmaSenha.setText(null);
        cmbStatus.setSelectedIndex(0);
        ckbAlterarSenha.setSelected(false);
        txtCracha.setDocument(new FieldFormatLimit(8, FieldFormatLimit.NUMEROS));
    }
    
    private void readTurno() {
        cmbTurno.removeAllItems();
        cmbTurno.addItem("");
        categoryMapTurno.clear();
        TurnoDAO turnoDAO = new TurnoDAO();
        try {
            for (Turno turno : turnoDAO.findEntities(Turno.class)) {
                Long id = turno.getId();
                String name = turno.getTurno();
                cmbTurno.addItem(name);
                categoryMapTurno.put(id, name);
            }
        } catch (Exception e) {
        }
    }
    
    private void readGrupo() {
        cmbGrupo.removeAllItems();
        cmbGrupo.addItem("");
        categoryMapGrupo.clear();
        GrupoDAO grupDAO = new GrupoDAO();
        try {
            for (Grupo grup : grupDAO.findEntities(Grupo.class)) {
                Long id = grup.getId();
                String name = grup.getGrupoNome();
                cmbGrupo.addItem(name);
                categoryMapGrupo.put(id, name);
            }
        } catch (Exception e) {
        }
    }
    
    private void readSetor() {
        cmbSetor.removeAllItems();
        cmbSetor.addItem("");
        categoryMapSetor.clear();
        SetorDAO setorDAO = new SetorDAO();
        
        try {
            for (Setor setor : setorDAO.findEntities(Setor.class)) {
                Long id = setor.getId();
                String name = setor.getSiglaSetor();
                cmbSetor.addItem(name);
                categoryMapSetor.put(id, name);
            }
        } catch (Exception e) {
        }
        
    }
    
    private void fechar() {
        Frames.fecharFrame(this);
    }
    
    private void capslock() {
        ImageIcon icone = new ImageIcon(getClass().getResource("/Imagem/icon_alerta.png"));
        boolean capsLigado = Toolkit.getDefaultToolkit().getLockingKeyState(
                KeyEvent.VK_CAPS_LOCK);
        if (capsLigado) {
            lblCapslock.setText("Caps Lock Ligado!");
            lblCapslock.setIcon(icone);
            repaint();
        } else {
            lblCapslock.setText(null);
            lblCapslock.setIcon(null);
            repaint();
        }
    }
}
