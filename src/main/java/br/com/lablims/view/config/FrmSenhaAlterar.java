/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.lablims.view.config;

import br.com.lablims.dao.SegurancaDAO;
import br.com.lablims.dao.UsuarioDAO;
import br.com.lablims.model.Seguranca;
import br.com.lablims.model.Usuario;
import br.com.lablims.util.Cript;
import br.com.lablims.util.FieldFormatLimit;
import br.com.lablims.util.Frames;
import java.awt.Cursor;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author rafael.lopes
 */
public class FrmSenhaAlterar extends javax.swing.JDialog {

    private Usuario usuario;
    private Integer tamanho;

    /**
     * Creates new form frmAlterarSenha
     *
     * @param parent
     * @param modal
     * @param user
     */
    public FrmSenhaAlterar(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        carregar();
        usuario = new Usuario(System.getProperty("user"));
        btnFechar.setVisible(true);
    }

    public FrmSenhaAlterar(java.awt.Frame parent, boolean modal, Usuario user) {
        super(parent, modal);
        initComponents();
        carregar();
        usuario = user;
        btnFechar.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtConfirmarNovaSenha = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNovaSenha = new javax.swing.JPasswordField();
        txtSenhaAntiga = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        lblRegraSenha = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        lblCapslock = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtConfirmarNovaSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtConfirmarNovaSenhaFocusGained(evt);
            }
        });
        txtConfirmarNovaSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtConfirmarNovaSenhaKeyReleased(evt);
            }
        });

        jLabel1.setText("Nova Senha:");

        jLabel2.setText("Confirmar Nova Senha:");

        txtNovaSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNovaSenhaFocusGained(evt);
            }
        });
        txtNovaSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNovaSenhaKeyReleased(evt);
            }
        });

        txtSenhaAntiga.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSenhaAntigaFocusGained(evt);
            }
        });
        txtSenhaAntiga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSenhaAntigaKeyReleased(evt);
            }
        });

        jLabel3.setText("Senha Antiga:");

        lblRegraSenha.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        lblRegraSenha.setForeground(new java.awt.Color(255, 0, 0));
        lblRegraSenha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRegraSenha.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSenhaAntiga)
                            .addComponent(txtNovaSenha, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtConfirmarNovaSenha)))
                    .addComponent(lblRegraSenha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblRegraSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSenhaAntiga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNovaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConfirmarNovaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSalvar.setText("Ok");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        lblCapslock.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        lblCapslock.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCapslock, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCapslock, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSalvar)
                        .addComponent(btnFechar)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        salvar();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            salvar();
        }
    }//GEN-LAST:event_formKeyPressed

    private void txtConfirmarNovaSenhaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConfirmarNovaSenhaKeyReleased
        capslock();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            salvar();
        }
    }//GEN-LAST:event_txtConfirmarNovaSenhaKeyReleased

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void txtSenhaAntigaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSenhaAntigaKeyReleased
        capslock();
    }//GEN-LAST:event_txtSenhaAntigaKeyReleased

    private void txtSenhaAntigaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSenhaAntigaFocusGained
        capslock();
    }//GEN-LAST:event_txtSenhaAntigaFocusGained

    private void txtNovaSenhaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNovaSenhaKeyReleased
        capslock();
    }//GEN-LAST:event_txtNovaSenhaKeyReleased

    private void txtNovaSenhaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNovaSenhaFocusGained
        capslock();
    }//GEN-LAST:event_txtNovaSenhaFocusGained

    private void txtConfirmarNovaSenhaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtConfirmarNovaSenhaFocusGained
        capslock();
    }//GEN-LAST:event_txtConfirmarNovaSenhaFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException |
                IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmSenhaAlterar.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }


        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FrmSenhaAlterar dialog = new FrmSenhaAlterar(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCapslock;
    private javax.swing.JLabel lblRegraSenha;
    private javax.swing.JPasswordField txtConfirmarNovaSenha;
    private javax.swing.JPasswordField txtNovaSenha;
    private javax.swing.JPasswordField txtSenhaAntiga;
    // End of variables declaration//GEN-END:variables

    private void carregar() {
        Frames.setUpFrame(this, "Alteração de Senha", true);
        SegurancaDAO segurancaDAO = new SegurancaDAO();
        try {
            tamanho = segurancaDAO.findByTipo(Seguranca.TAM_SENHA).getNumero();
            lblRegraSenha.setText("A senha deve ter pelo menos " + tamanho + " caracteres");
        } catch (Exception e) {

        }
    }

    private void salvar() {
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if (txtSenhaAntiga.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Senha inválida");
            txtSenhaAntiga.setText(null);
            txtSenhaAntiga.requestFocus();
        } else if (txtNovaSenha.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nova Senha inválida");
            txtNovaSenha.setText(null);
            txtNovaSenha.requestFocus();
        } else if (txtConfirmarNovaSenha.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nova Senha inválida");
            txtConfirmarNovaSenha.setText(null);
            txtConfirmarNovaSenha.requestFocus();
        } else if (!new String(txtNovaSenha.getPassword()).isEmpty() && (new String(txtNovaSenha.getPassword()).length() < tamanho)) {
            JOptionPane.showMessageDialog(null, "Tamanho da senha não atende critério de Segurança!");
            txtNovaSenha.setText(null);
            txtConfirmarNovaSenha.setText(null);
        } else {
            try {
                String senha = (Cript.SHA(new String(txtSenhaAntiga.getPassword())));
                usuario.setPass(senha);
                UsuarioDAO userDAO = new UsuarioDAO();
                Usuario user = new UsuarioDAO().buscaUsuarioLogin(usuario);
                String NovaSenha = new String(txtNovaSenha.getPassword());
                String ConfirmaSenha = new String(txtConfirmarNovaSenha.getPassword());
                Integer falhas;
                Integer falha;
                try {
                    falhas = user.getFailedAccessCount() == null ? 0 : user.getFailedAccessCount();
                    falha = new SegurancaDAO().findByTipo(Seguranca.FALHA).getNumero();
                } catch (Exception e) {
                    falhas = 0;
                    falha = 10;
                }
                if (user.getId() > 0) {
                    if (!(user.getLock() == null ? false : user.getLock())) {
                        if (falhas > 0) {
                            userDAO.salvarFalhaLogin(user, false);
                        }
                        if (!NovaSenha.isEmpty()) {
                            if (!ConfirmaSenha.equals(NovaSenha)) {
                                JOptionPane.showMessageDialog(null, "Senhas não conferem!");
                                txtNovaSenha.setText(null);
                                txtConfirmarNovaSenha.setText(null);
                            } else {
                                user.setPass(Cript.SHA(NovaSenha));
                                userDAO.atualizarTrocaSenha(user);
                                JOptionPane.showMessageDialog(null, "Senha Alterada com Sucesso");
                                dispose();
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Senha inválida!");
                            txtNovaSenha.setText(null);
                            txtConfirmarNovaSenha.setText(null);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Usuário Bloqueado");
                        dispose();
                    }
                } else {
                    if (falhas >= falha) {
                        userDAO.salvarBloqueioUsuario(user);
                        JOptionPane.showMessageDialog(null, "Usuário Bloqueado");
                    } else {
                        userDAO.salvarFalhaLogin(user, true);
                        JOptionPane.showMessageDialog(null, "Senha inválida");
                    }
                    txtSenhaAntiga.setText(null);
                    JOptionPane.showMessageDialog(null, "Senha inválida");
                    txtSenhaAntiga.requestFocus();
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao Alterar a Senha!");
            }
        }
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }

    private void capslock() {
        ImageIcon icone = new ImageIcon(getClass().getResource("/Imagem/icon_alerta.png"));
        boolean capsLigado = Toolkit.getDefaultToolkit().getLockingKeyState(
                KeyEvent.VK_CAPS_LOCK);
        if (capsLigado) {
            lblCapslock.setText("Caps Lock Ligado!");
            lblCapslock.setIcon(icone);
            repaint();
        } else {
            lblCapslock.setText(null);
            lblCapslock.setIcon(null);
            repaint();
        }
    }

}
