/*
 * Copyright (C) 2019 rafael.lopes
 *
 * Este programa é um software livre: você pode redistribuí-lo e / ou modificar
 * sob os termos da GNU General Public License, conforme publicado pela
 * a Free Software Foundation, seja a versão 3 da Licença, quanto
 * qualquer versão posterior.
 *
 * Este programa é distribuído na esperança de que seja útil,
 * mas SEM QUALQUER GARANTIA; sem a garantia implícita de
 * COMERCIALIZAÇÃO OU APTIDÃO PARA UM PROPÓSITO PARTICULAR. Veja o
 * GNU General Public License para obter mais detalhes.
 *
 * Você deve ter recebido uma cópia da GNU General Public License
 *  juntamente com este programa. Caso contrário, veja <http://www.gnu.org/licenses/>.
 */
package br.com.lablims.view.config;

import br.com.lablims.dao.DepartamentoDAO;
import javax.swing.JOptionPane;
import br.com.lablims.dao.SetorDAO;
import br.com.lablims.model.Departamento;
import br.com.lablims.model.Setor;
import br.com.lablims.util.Senha;
import br.com.lablims.util.ComboBox;
import br.com.lablims.util.Frames;
import java.awt.Cursor;
import java.util.TreeMap;

/**
 *
 * @author rafael.lopes
 */
public class FrmSetorDados extends javax.swing.JDialog {

    private Setor set;
    private boolean novoSetor = false;
    private TreeMap<Long, String> categoryMapDepartamento = new TreeMap<>();

    /**
     * Creates new form FrmConfigAcesso
     *
     * @param parent
     * @param modal
     */
    public FrmSetorDados(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Frames.setUpFrame(this, "Dados do Setor", true);
        carregarCampos();
        novoSetor = true;
    }

    public FrmSetorDados(java.awt.Frame parent, boolean modal, Setor setor) {
        super(parent, modal);
        initComponents();
        Frames.setUpFrame(this, "Dados do Setor", true);
        set = setor;
        carregarCampos();
        carregarDados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalvarMetodo = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        pnlEditarAnalise = new javax.swing.JPanel();
        txtSigla = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtSetor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbDepartamento = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        cmbTipo = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnSalvarMetodo.setText("Ok");
        btnSalvarMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarMetodoActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        pnlEditarAnalise.setBorder(javax.swing.BorderFactory.createTitledBorder("Setor"));

        jLabel1.setText("Sigla:");

        jLabel2.setText("Setor:");

        jLabel5.setText("Descrição:");

        jLabel3.setText("Departamento:");

        jLabel4.setText("Tipo:");

        javax.swing.GroupLayout pnlEditarAnaliseLayout = new javax.swing.GroupLayout(pnlEditarAnalise);
        pnlEditarAnalise.setLayout(pnlEditarAnaliseLayout);
        pnlEditarAnaliseLayout.setHorizontalGroup(
            pnlEditarAnaliseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditarAnaliseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEditarAnaliseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlEditarAnaliseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEditarAnaliseLayout.createSequentialGroup()
                        .addComponent(txtSigla, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSetor))
                    .addComponent(txtDescricao)
                    .addGroup(pnlEditarAnaliseLayout.createSequentialGroup()
                        .addComponent(cmbDepartamento, 0, 347, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlEditarAnaliseLayout.setVerticalGroup(
            pnlEditarAnaliseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditarAnaliseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEditarAnaliseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSigla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEditarAnaliseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEditarAnaliseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEditarAnaliseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEditarAnaliseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(cmbDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlEditarAnalise, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSalvarMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlEditarAnalise, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarMetodo)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarMetodoActionPerformed
        salvar();
    }//GEN-LAST:event_btnSalvarMetodoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        fechar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmSetorDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FrmSetorDados dialog = new FrmSetorDados(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    public static javax.swing.JButton btnSalvarMetodo;
    private javax.swing.JComboBox cmbDepartamento;
    private javax.swing.JComboBox cmbTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel pnlEditarAnalise;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtSetor;
    private javax.swing.JTextField txtSigla;
    // End of variables declaration//GEN-END:variables

    private void criarSetor() {
        Setor setor = new Setor();
        SetorDAO setorDAO = new SetorDAO();
        DepartamentoDAO departDAO = new DepartamentoDAO();
        try {
            setor.setSiglaSetor(txtSigla.getText().trim().toUpperCase());
            setor.setSetor(txtSetor.getText().trim().toUpperCase());
            setor.setDescricaoSetor(txtDescricao.getText().trim().toUpperCase());
            setor.setDepartamento(departDAO.findById(Departamento.class,
                    ComboBox.getKeyForValue(cmbDepartamento.getSelectedItem().toString(), categoryMapDepartamento)));
            setor.setTipo(cmbTipo.getSelectedItem().toString());
            setor.setVersion(0);
            setorDAO.salvar(setor);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        }
    }

    private void atulizarSetor() {
        SetorDAO setorDAO = new SetorDAO();
        DepartamentoDAO departDAO = new DepartamentoDAO();
        try {
            Setor setor = setorDAO.findById(Setor.class, set.getId());
            setor.setSiglaSetor(txtSigla.getText().trim().toUpperCase());
            setor.setSetor(txtSetor.getText().trim().toUpperCase());
            setor.setDescricaoSetor(txtDescricao.getText().trim().toUpperCase());
            setor.setDepartamento(departDAO.findById(Departamento.class,
                    ComboBox.getKeyForValue(cmbDepartamento.getSelectedItem().toString(), categoryMapDepartamento)));
            setor.setTipo(cmbTipo.getSelectedItem().toString());
            setor.setVersion(setor.getVersion() + 1);
            setorDAO.salvar(setor);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar dados: " + e);
        }
    }

    private void carregarDados() {
        try {
            txtSigla.setText(set.getSiglaSetor().toUpperCase());
            txtSetor.setText(set.getSetor().toUpperCase());
            txtDescricao.setText(set.getDescricaoSetor().toUpperCase());
            String[] depart = {set.getDepartamento().getDepartamento()};
            cmbDepartamento.setSelectedItem(depart[0]);
            String[] tipo = {set.getTipo()};
            cmbTipo.setSelectedItem(tipo[0]);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + ex);
        }
    }

    private void carregarCampos() {
        txtSigla.setText(null);
        txtSetor.setText(null);
        txtDescricao.setText(null);
        readDepartamento();
        readTipo();
    }

    private void fechar() {
        Frames.fecharFrame(this);
    }

    private void readDepartamento() {
        cmbDepartamento.removeAllItems();
        cmbDepartamento.addItem("");
        categoryMapDepartamento.clear();
        DepartamentoDAO departDAO = new DepartamentoDAO();
        try {
            for (Departamento depart : departDAO.findEntities(Departamento.class)) {
                Long id = depart.getId();
                String name = depart.getDepartamento();
                cmbDepartamento.addItem(name);
                categoryMapDepartamento.put(id, name);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + e);
        }
    }
    
    private void readTipo() {
        cmbTipo.removeAllItems();
        cmbTipo.addItem("");
        cmbTipo.addItem("Analítico");
        cmbTipo.addItem("Administrativo");
        cmbTipo.addItem("Produtivo");
    }

    private void salvar() {
        Senha senha = new Senha();
        try {
            if (txtSigla.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Sigla inválida");
                txtSigla.requestFocus();
            } else if (txtSetor.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Setor inválido");
                txtSetor.requestFocus();
            } else if (txtDescricao.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Descrição inválida");
                txtDescricao.requestFocus();
            } else if (cmbDepartamento.getSelectedItem().toString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Selecione o Departamento!");
                cmbDepartamento.requestFocus();
            } else if (cmbTipo.getSelectedItem().toString().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Selecione o Tipo de Setor!");
                cmbTipo.requestFocus();
            }else if (novoSetor) {
                if (senha.Salvar()) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    criarSetor();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    dispose();
                }
            } else {
                if (senha.Salvar()) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    atulizarSetor();
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    dispose();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + e);
        }
    }

}
