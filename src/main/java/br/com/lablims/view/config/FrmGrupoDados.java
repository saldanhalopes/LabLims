package br.com.lablims.view.config;

import java.awt.Cursor;
import java.util.TreeMap;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import br.com.lablims.dao.AcessoDAO;
import br.com.lablims.dao.RegraAcessoDAO;
import br.com.lablims.dao.FormDAO;
import br.com.lablims.dao.GrupoDAO;
import br.com.lablims.model.Acesso;
import br.com.lablims.model.Form;
import br.com.lablims.model.Grupo;
import br.com.lablims.model.RegraAcesso;
import br.com.lablims.util.Senha;
import br.com.lablims.util.ComboBox;
import br.com.lablims.util.DataHora;
import br.com.lablims.util.Frames;
import br.com.lablims.util.TableSorter;

/**
 *
 * @author rafael.lopes
 */
public class FrmGrupoDados extends javax.swing.JDialog {

    private Grupo grupo;
    private boolean novoGrupo = false;
    private final TreeMap<Long, String> categoryMapAcesso = new TreeMap<>();

    /**
     * Creates new form FrmConfigAcesso
     *
     * @param parent
     * @param modal
     */
    public FrmGrupoDados(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Frames.setUpFrame(this, "Dados do Grupo", true);
        limparCampos();
        novoGrupo = true;
        readPermissao();
        tpnRegraAcesso.setEnabledAt(1, false);
    }

    public FrmGrupoDados(java.awt.Frame parent, boolean modal, Grupo grup) {
        super(parent, modal);
        initComponents();
        Frames.setUpFrame(this, "Dados do Grupo", true);
        grupo = grup;
        readPermissaoGrupo();
        limparCampos();
        txtGrupo.setEditable(false);
        carregarDados();
        tpnRegraAcesso.setEnabledAt(1, true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalvarUsuario = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        txtGrupo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtTipo = new javax.swing.JTextField();
        tpnRegraAcesso = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPermissao = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        pnlAuditoriaGrupos = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblGruposAuditoria = new javax.swing.JTable();
        txtPesquisarAuditoria = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnSalvarUsuario.setText("Ok");
        btnSalvarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarUsuarioActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados"));

        jLabel8.setText("Grupo:");

        jLabel9.setText("Tipo:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtGrupo)
                    .addComponent(txtTipo))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap())
        );

        tblPermissao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Formulário", "Permissões", "regra_id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPermissao.setRowHeight(20);
        tblPermissao.setSurrendersFocusOnKeystroke(true);
        tblPermissao.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblPermissao);
        if (tblPermissao.getColumnModel().getColumnCount() > 0) {
            tblPermissao.getColumnModel().getColumn(0).setMinWidth(0);
            tblPermissao.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblPermissao.getColumnModel().getColumn(0).setMaxWidth(0);
            tblPermissao.getColumnModel().getColumn(2).setMinWidth(150);
            tblPermissao.getColumnModel().getColumn(2).setPreferredWidth(150);
            tblPermissao.getColumnModel().getColumn(2).setMaxWidth(150);
            tblPermissao.getColumnModel().getColumn(3).setMinWidth(0);
            tblPermissao.getColumnModel().getColumn(3).setPreferredWidth(0);
            tblPermissao.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addContainerGap())
        );

        tpnRegraAcesso.addTab("Permissões", jPanel6);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Auditoria de Grupos"));

        tblGruposAuditoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Regra_ID", "Versão", "MOD", "Acesso_ID", "Acesso_MOD", "Form_ID", "Form_MOD", "Computador / AD_User ", "Usuario", "Data Modificação", "Motivo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGruposAuditoria.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane3.setViewportView(tblGruposAuditoria);
        if (tblGruposAuditoria.getColumnModel().getColumnCount() > 0) {
            tblGruposAuditoria.getColumnModel().getColumn(0).setMinWidth(80);
            tblGruposAuditoria.getColumnModel().getColumn(0).setPreferredWidth(80);
            tblGruposAuditoria.getColumnModel().getColumn(1).setMinWidth(80);
            tblGruposAuditoria.getColumnModel().getColumn(1).setPreferredWidth(80);
            tblGruposAuditoria.getColumnModel().getColumn(2).setMinWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(2).setPreferredWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(2).setMaxWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(3).setMinWidth(80);
            tblGruposAuditoria.getColumnModel().getColumn(3).setPreferredWidth(80);
            tblGruposAuditoria.getColumnModel().getColumn(3).setMaxWidth(80);
            tblGruposAuditoria.getColumnModel().getColumn(4).setMinWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(4).setPreferredWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(4).setMaxWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(5).setMinWidth(80);
            tblGruposAuditoria.getColumnModel().getColumn(5).setPreferredWidth(80);
            tblGruposAuditoria.getColumnModel().getColumn(5).setMaxWidth(80);
            tblGruposAuditoria.getColumnModel().getColumn(6).setMinWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(6).setPreferredWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(6).setMaxWidth(120);
            tblGruposAuditoria.getColumnModel().getColumn(7).setMinWidth(200);
            tblGruposAuditoria.getColumnModel().getColumn(7).setPreferredWidth(200);
            tblGruposAuditoria.getColumnModel().getColumn(7).setMaxWidth(200);
            tblGruposAuditoria.getColumnModel().getColumn(8).setMinWidth(150);
            tblGruposAuditoria.getColumnModel().getColumn(8).setPreferredWidth(150);
            tblGruposAuditoria.getColumnModel().getColumn(8).setMaxWidth(150);
            tblGruposAuditoria.getColumnModel().getColumn(9).setMinWidth(180);
            tblGruposAuditoria.getColumnModel().getColumn(9).setPreferredWidth(180);
            tblGruposAuditoria.getColumnModel().getColumn(9).setMaxWidth(180);
            tblGruposAuditoria.getColumnModel().getColumn(10).setMinWidth(500);
            tblGruposAuditoria.getColumnModel().getColumn(10).setPreferredWidth(500);
            tblGruposAuditoria.getColumnModel().getColumn(10).setMaxWidth(500);
        }

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
        );

        txtPesquisarAuditoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarAuditoriaKeyReleased(evt);
            }
        });

        jLabel5.setText("Pesquisar:");

        javax.swing.GroupLayout pnlAuditoriaGruposLayout = new javax.swing.GroupLayout(pnlAuditoriaGrupos);
        pnlAuditoriaGrupos.setLayout(pnlAuditoriaGruposLayout);
        pnlAuditoriaGruposLayout.setHorizontalGroup(
            pnlAuditoriaGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAuditoriaGruposLayout.createSequentialGroup()
                .addGroup(pnlAuditoriaGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlAuditoriaGruposLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisarAuditoria)))
                .addContainerGap())
        );
        pnlAuditoriaGruposLayout.setVerticalGroup(
            pnlAuditoriaGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAuditoriaGruposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAuditoriaGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisarAuditoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAuditoriaGrupos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAuditoriaGrupos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tpnRegraAcesso.addTab("Audit Trail", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tpnRegraAcesso)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSalvarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tpnRegraAcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarUsuario)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarUsuarioActionPerformed
        salvar();
    }//GEN-LAST:event_btnSalvarUsuarioActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        fechar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtPesquisarAuditoriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarAuditoriaKeyReleased
        TableSorter.TableSorter(tblGruposAuditoria, txtPesquisarAuditoria);
    }//GEN-LAST:event_txtPesquisarAuditoriaKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmGrupoDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FrmGrupoDados dialog = new FrmGrupoDados(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    public static javax.swing.JButton btnSalvarUsuario;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel pnlAuditoriaGrupos;
    private javax.swing.JTable tblGruposAuditoria;
    private javax.swing.JTable tblPermissao;
    private javax.swing.JTabbedPane tpnRegraAcesso;
    private javax.swing.JTextField txtGrupo;
    private javax.swing.JTextField txtPesquisarAuditoria;
    private javax.swing.JTextField txtTipo;
    // End of variables declaration//GEN-END:variables

    public final void readPermissao() {
        DefaultTableModel model = (DefaultTableModel) tblPermissao.getModel();
        model.setNumRows(0);
        JComboBox comboAcesso = new JComboBox();
        categoryMapAcesso.clear();
        AcessoDAO acessDAO = new AcessoDAO();
        FormDAO formDAO = new FormDAO();
        try {
            for (Acesso acess : acessDAO.findEntities(Acesso.class)) {
                Long id = acess.getId();
                String name = acess.getAcesso();
                comboAcesso.addItem(name);
                categoryMapAcesso.put(id, name);
            }
            TableColumn colAcesso = tblPermissao.getColumnModel().getColumn(2);
            colAcesso.setCellEditor(new DefaultCellEditor(comboAcesso));
            for (Form form : formDAO.findEntities(Form.class, "propriedade", true)) {
                model.addRow(new Object[]{
                    form.getId(),
                    form.getPropriedade(),
                    ""
                });
            }
        } catch (Exception e) {
        }
    }

    public final void readPermissaoGrupo() {
        DefaultTableModel model = (DefaultTableModel) tblPermissao.getModel();
        model.setNumRows(0);
        JComboBox comboAcesso = new JComboBox();
        categoryMapAcesso.clear();
        AcessoDAO acessoDAO = new AcessoDAO();
        FormDAO formDAO = new FormDAO();
        try {
            for (Acesso acess : acessoDAO.findEntities(Acesso.class)) {
                Long id = acess.getId();
                String name = acess.getAcesso();
                comboAcesso.addItem(name);
                categoryMapAcesso.put(id, name);
            }
            TableColumn colAcesso = tblPermissao.getColumnModel().getColumn(2);
            colAcesso.setCellEditor(new DefaultCellEditor(comboAcesso));
            for (Form form : formDAO.findEntities(Form.class, "propriedade", true)) {
                RegraAcesso regraAcesso = new RegraAcessoDAO().getAcessoByGrupoForm(grupo.getId(), form.getId());
                model.addRow(new Object[]{
                    form.getId(),
                    form.getPropriedade(),
                    regraAcesso == null ? "" : regraAcesso.getAcesso().getAcesso(),
                    regraAcesso == null ? "" : regraAcesso.getId()
                });
            }
            carregarAuditoria();
        } catch (Exception e) {
        }
    }

    private void salvar() {
        int rows = tblPermissao.getRowCount();
        Senha senha = new Senha();
        try {
            if (txtGrupo.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Grupo inválido");
                txtGrupo.requestFocus();
            } else if (txtTipo.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Tipo inválido");
                txtTipo.requestFocus();
            } else if (novoGrupo) {
                if (senha.Salvar()) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    Long grupo_id = criarGrupo();
                    for (int row = 0; row < rows; row++) {
                        criarPermissao(ComboBox.getKeyForValue((String) tblPermissao.getModel().getValueAt(row, 2), categoryMapAcesso),
                                (Long) tblPermissao.getValueAt(row, 0),
                                grupo_id);
                    }
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    dispose();
                }
            } else {
                if (senha.Salvar()) {
                    setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    atulizarGrupo();
                    for (int row = 0; row < rows; row++) {
                        if (!tblPermissao.getValueAt(row, 3).toString().isEmpty()) {
                            atualizarPermissao((Long) tblPermissao.getValueAt(row, 3),
                                    ComboBox.getKeyForValue((String) tblPermissao.getModel().getValueAt(row, 2), categoryMapAcesso),
                                    (Long) tblPermissao.getValueAt(row, 0),
                                    grupo.getId());
                        } else {
                            criarPermissao(ComboBox.getKeyForValue((String) tblPermissao.getModel().getValueAt(row, 2), categoryMapAcesso),
                                    (Long) tblPermissao.getValueAt(row, 0),
                                    grupo.getId());
                        }
                    }
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    dispose();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao salvar dados: " + e);
        }
    }

    private void criarPermissao(Long acesso_id, Long form_id, Long grupo_id) {
        try {
            RegraAcesso regraAcesso = new RegraAcesso();
            RegraAcessoDAO regraAcessoDAO = new RegraAcessoDAO();
            GrupoDAO grupoDAO = new GrupoDAO();
            AcessoDAO acessoDAO = new AcessoDAO();
            FormDAO formDAO = new FormDAO();
            regraAcesso.setForm(formDAO.findById(Form.class, form_id));
            regraAcesso.setGrupo(grupoDAO.findById(Grupo.class, grupo_id));
            regraAcesso.setAcesso(acessoDAO.findById(Acesso.class, acesso_id > 0 ? acesso_id : 2L));
            regraAcesso.setVersion(0);
            regraAcessoDAO.salvar(regraAcesso);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao criar dados: " + ex);
        }
    }

    private void atualizarPermissao(Long regra_id, Long acesso_id, Long form_id, Long grupo_id) {
        try {
            RegraAcessoDAO regraAcessoDAO = new RegraAcessoDAO();
            RegraAcesso regraAcesso = regraAcessoDAO.findById(RegraAcesso.class, regra_id);
            GrupoDAO grupoDAO = new GrupoDAO();
            AcessoDAO acessoDAO = new AcessoDAO();
            FormDAO formDAO = new FormDAO();
            regraAcesso.setForm(formDAO.findById(Form.class, form_id));
            regraAcesso.setGrupo(grupoDAO.findById(Grupo.class, grupo_id));
            regraAcesso.setAcesso(acessoDAO.findById(Acesso.class, acesso_id > 0 ? acesso_id : 2L));
            regraAcesso.setVersion(regraAcesso.getVersion() + 1);
            regraAcessoDAO.salvar(regraAcesso);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar dados: " + ex);
        }
    }

    private Long criarGrupo() {
        GrupoDAO grupDAO = new GrupoDAO();
        Grupo grup = new Grupo();
        Long grupo_id = 0L;
        try {
            grup.setGrupoNome(txtGrupo.getText().toUpperCase().trim());
            grup.setGrupoTipo(txtTipo.getText().toUpperCase().trim());
            grup.setVersion(0);
            grupo_id = grupDAO.salvar(grup).getId();
            grupDAO.salvar(grup);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao gravar dados: " + ex);
        }
        return grupo_id;
    }

    private void carregarDados() {
        try {
            txtGrupo.setText(grupo.getGrupoNome());
            txtTipo.setText(grupo.getGrupoTipo());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar dados: " + ex);
        }
    }

    private void atulizarGrupo() {
        GrupoDAO grupDAO = new GrupoDAO();
        try {
            grupo.setGrupoNome(txtGrupo.getText().toUpperCase().trim());
            grupo.setGrupoTipo(txtTipo.getText().toUpperCase().trim());
            grupo.setVersion(grupo.getVersion() + 1);
            grupDAO.salvar(grupo);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar dados: " + ex);
        }

    }

    private void limparCampos() {
        txtGrupo.setText(null);
        txtTipo.setText(null);
    }

    private void carregarAuditoria() {
        DefaultTableModel model = (DefaultTableModel) tblGruposAuditoria.getModel();
        RegraAcessoDAO regraAcessoDAO = new RegraAcessoDAO();
        model.setNumRows(0);
        try {
            for (RegraAcesso regra_acesso : regraAcessoDAO.readRegraAcessoAuditoria(grupo.getId())) {
                model.addRow(new Object[]{
                    regra_acesso.getId(),
                    regra_acesso.getVersion(),
                    regra_acesso.getAudit().getMOD() == 0 ? "Criado"
                    : (regra_acesso.getAudit().getMOD() == 1 ? "Modificado" : "Removido"),
                    regra_acesso.getAcesso().getId(),
                    regra_acesso.getAcesso_MOD() == false ? "Não Alterado" : "Alterado",
                    regra_acesso.getForm().getId(),
                    regra_acesso.getForm_MOD() == false ? "Não Alterado" : "Alterado",
                    regra_acesso.getAudit().getComputador() + " / "
                    + regra_acesso.getAudit().getUserComputador(),
                    regra_acesso.getAudit().getUltimaModificacaoPor(),
                    DataHora.getStringDateTime(regra_acesso.getAudit().getUltimaModificacao()),
                    regra_acesso.getAudit().getMotivo()
                });
            }
        } catch (Exception e) {
        }
    }

    private void fechar() {
        Frames.fecharFrame(this);
    }

}
